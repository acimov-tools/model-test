@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix earl: <http://www.w3.org/ns/earl#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix git-platform: <https://github.com/> .
@prefix olivaw: <https://ns.inria.fr/olivaw#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<file:////home/runner/work/model-test/model-test/.acimov/output/model-test-actions.md> a prov:Entity ;
    prov:generatedAtTime "2024-09-20T08:45:01.763979"^^xsd:dateTime ;
    prov:qualifiedGeneration [ a prov:Generation ;
            prov:activity _:assertor ;
            olivaw:generatedAs olivaw:markdown_report ] .

<file:////home/runner/work/model-test/model-test/.acimov/output/model-test-actions.ttl> a prov:Entity ;
    prov:generatedAtTime "2024-09-20T08:45:01.763979"^^xsd:dateTime ;
    prov:qualifiedGeneration [ a prov:Generation ;
            prov:activity _:assertor ;
            olivaw:generatedAs olivaw:turtle_report ] .

<https://github.com/Wimmics/olivaw/blob/v0.0.6/olivaw/test/model/suite.py> a olivaw:VersionedEntity ;
    dcterms:hasVersion "v0.0.6" ;
    olivaw:hostedAt <https://github.com/Wimmics/olivaw/blob/main/olivaw/test/model/suite.py> .

<https://github.com/acimov-tools/model-test/tree/9b217d00b023a3e7f625aca4a4e8f615c0a008ab> a olivaw:VersionedEntity ;
    dcterms:date "2024-09-20T10:43:52"^^xsd:dateTime ;
    dcterms:hasVersion "9b217d00b023a3e7f625aca4a4e8f615c0a008ab" ;
    olivaw:hostedAt <https://github.com/acimov-tools/model-test> ;
    olivaw:isOnBranch "main" ;
    olivaw:patchedBy _:tester .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Custom test  could not be run because the subject could not be loaded in the engine"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-src-broken ;
    earl:test olivaw:subclass-cycle .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:all-modules ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Custom test  could not be run because the subject could not be loaded in the engine"@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-src-broken ;
    earl:test olivaw:comment-format .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter ;
    rdfs:subPropertyOf :domainReferencingOut ;
    owl:equivalentProperty :domainReferencingOut .""" ;
                    earl:pointer sh:NodeShape ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#AllDisjointClasses &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:AllDisjointClasses\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10; &#10;"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL Constraint violation"@en ],
                [ a olivaw:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#disjointWith &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10; &#10;"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL Constraint violation"@en ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy :unlabeled .""",
                        """violation:05df2eac-2977-4f0a-b9f4-12648fb84890 a sh:ValidationResult ;
    sh:focusNode sand:unlabeledTerm ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "Terms not labeled"@en ;
                    earl:info """:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy :unlabeled .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:BrokenSubclass a owl:Class ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy :inconsistent ;
    rdfs:subClassOf :DisjointTheFirst,
        :DisjointTheSecond .""",
                        """:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy :inconsistent ;
    owl:disjointWith :DisjointTheSecond .""",
                        """:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy :inconsistent ;
    owl:disjointWith :DisjointTheFirst .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:0e90f75e-27a2-48de-9e3f-65e06a87ec3e a sh:ValidationResult ;
    sh:focusNode sand:BrokenSubclass ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:155a2593-73b0-479f-a0ac-64b4e207de6e a sh:ValidationResult ;
    sh:focusNode sand:DisjointTheSecond ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:75d18411-9f43-4a75-8b77-0931ba3cd667 a sh:ValidationResult ;
    sh:focusNode sand:DisjointTheFirst ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Custom test  could not be run because the subject could not be loaded in the engine"@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-src-unknown-prefix ;
    earl:test olivaw:comment-format .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:all-fragments ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy :unlabeled .""",
                        """violation:b6876ab7-3de1-4ae1-8d82-2c717da20fdc a sh:ValidationResult ;
    sh:focusNode sand:unlabeledTerm ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a olivaw:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    earl:info """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""" ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Too close terms"@en ;
                    earl:info """:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "Terms not labeled"@en ;
                    earl:info """:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy :unlabeled .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter ;
    rdfs:subPropertyOf :domainReferencingOut ;
    owl:equivalentProperty :domainReferencingOut .""" ;
                    earl:pointer sh:NodeShape ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:identifier "syntax-error" ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    earl:info "Encountered \"a\" at line 7, column 23." ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Custom test  could not be run because the subject could not be loaded in the engine"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw:subclass-cycle .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy :rangeOuter ;
    rdfs:range sh:NodeShape .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:711b9a00-4f30-4055-af8e-93506339163c a sh:ValidationResult ;
    sh:focusNode sand:rangeReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "Terms not labeled"@en ;
                    earl:info """:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy :unlabeled .""" ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    earl:info """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""" ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a olivaw:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    earl:info """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter ;
    rdfs:subPropertyOf :domainReferencingOut ;
    owl:equivalentProperty :domainReferencingOut .""" ;
                    earl:pointer sh:NodeShape ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:BrokenSubclass a :DisjointTheFirst,
        :DisjointTheSecond ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy :inconsistent .""",
                        """:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy :inconsistent ;
    owl:disjointWith :DisjointTheSecond .""",
                        """:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy :inconsistent ;
    owl:disjointWith :DisjointTheFirst .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:39513144-6a1f-4a6c-bb21-8ad7dfc63f5c a sh:ValidationResult ;
    sh:focusNode sand:DisjointTheSecond ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:4e4908d7-130d-436f-b631-8d9e25e328fa a sh:ValidationResult ;
    sh:focusNode sand:BrokenSubclass ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:79d76c69-4cce-4fd8-98b1-547c195c5ac7 a sh:ValidationResult ;
    sh:focusNode sand:DisjointTheFirst ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Custom test  could not be run because the subject could not be loaded in the engine"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw:subclass-cycle .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Custom test  could not be run because the subject could not be loaded in the engine"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-src-unknown-prefix ;
    earl:test olivaw:subclass-cycle .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:BrokenSubclass a owl:Class,
        :DisjointTheFirst,
        :DisjointTheSecond ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy :inconsistent ;
    rdfs:subClassOf :DisjointTheFirst,
        :DisjointTheSecond .""",
                        """:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy :inconsistent ;
    owl:disjointWith :DisjointTheSecond .""",
                        """:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy :inconsistent ;
    owl:disjointWith :DisjointTheFirst .""",
                        """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter .""",
                        """:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy :notEL .""",
                        """:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy :notQL .""",
                        """:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy :notRL .""",
                        """:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy :rangeOuter ;
    rdfs:range sh:NodeShape .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy :unlabeled .""",
                        """violation:21922e24-bef1-40ea-ace4-a663cf789c33 a sh:ValidationResult ;
    sh:focusNode sand:BrokenSubclass ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:29971cbe-5ac8-4cb9-8234-b82ff7738c19 a sh:ValidationResult ;
    sh:focusNode sand:rangeReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:3da36106-fee0-482f-9722-b2a08b008a1d a sh:ValidationResult ;
    sh:focusNode sand:notQLTermCauseTransitive ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:4bc86a04-1337-4351-8e92-08a2359698ba a sh:ValidationResult ;
    sh:focusNode sand:ClassA ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:85364acf-df60-4860-a2ed-5a0a41e085f8 a sh:ValidationResult ;
    sh:focusNode sand:notRLTermCauseReflexive ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:8e346338-e96a-41c7-8c3e-1ac95caf3e89 a sh:ValidationResult ;
    sh:focusNode sand:ClassB ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:918efb9a-4ef8-4918-a87c-c00f38ef2756 a sh:ValidationResult ;
    sh:focusNode sand:domainReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:a7cadeaa-3ce2-411c-8684-77cc9f0db8d8 a sh:ValidationResult ;
    sh:focusNode sand:DisjointTheFirst ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:b42f4e56-4b72-4395-a38f-4dd713d4f6b9 a sh:ValidationResult ;
    sh:focusNode sand:DisjointTheSecond ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:c7ac1382-cc42-4658-8422-f42b4ac17286 a sh:ValidationResult ;
    sh:focusNode sand:unlabeledTerm ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:d4bbec44-58b7-4b5a-9ee7-ac3fd1e75e3f a sh:ValidationResult ;
    sh:focusNode sand:notELTermCauseAsymmetric ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:3943a2ad-f135-4bdd-ab44-af77ad7147d7 a sh:ValidationResult ;
    sh:focusNode sand:domainReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:0f0a57b1-fa85-4c32-acda-c8d7abddd6af a sh:ValidationResult ;
    sh:focusNode sand:ClassA ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:9407b4f1-b843-4f8c-880e-a98240542e99 a sh:ValidationResult ;
    sh:focusNode sand:ClassB ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy :rangeOuter ;
    rdfs:range sh:NodeShape .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:9c1e2b46-1f44-47e8-9330-3d853d7009f1 a sh:ValidationResult ;
    sh:focusNode sand:rangeReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:identifier "syntax-error" ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    earl:info """at line 3 of <>:
Bad syntax (Prefix "owl:" not bound) at ^ in:
"...b'fix : <https://www.example.org/olivaw/> .\\n\\n:unknownPrefix a '^b'owl:Ontology .\\n\\n:Unknown a owl:Class ;\\n    rdfs:label "This '...\"""" ] ] ;
    earl:subject _:module-src-unknown-prefix ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy :notEL .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:bf52be01-2ddf-4fe6-b281-677f4f50e85c a sh:ValidationResult ;
    sh:focusNode sand:notELTermCauseAsymmetric ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:33e3a347-f1af-4f71-9da1-107ebebf29c2 a sh:ValidationResult ;
    sh:focusNode sand:domainReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy :notQL .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:907a1f4f-675f-4706-b721-afe83777f1e3 a sh:ValidationResult ;
    sh:focusNode sand:notQLTermCauseTransitive ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:identifier "syntax-error" ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    earl:info """at line 3 of <>:
Bad syntax (Prefix "owl:" not bound) at ^ in:
"...b'fix : <https://www.example.org/olivaw/> .\\n\\n:unknownPrefix a '^b'owl:Ontology .\\n\\n:Unknown a owl:Class ;\\n    rdfs:label "This '...\"""" ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    earl:info """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""" ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Subject terms not linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Term not referenced to a module"@en ;
                    earl:info """:NotReferencedClass a owl:Class ;
    rdfs:label "This class is not linked to a module by a rdfs:isDefinedBy p..." .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Custom test  could not be run because the subject could not be loaded in the engine"@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw:comment-format .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy :notQL .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:a58dd8e7-490f-41b1-817c-508807115137 a sh:ValidationResult ;
    sh:focusNode sand:notQLTermCauseTransitive ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#disjointWith &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10; &#10;"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL Constraint violation"@en ],
                [ a olivaw:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#AllDisjointClasses &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:AllDisjointClasses\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10; &#10;"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL Constraint violation"@en ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:BrokenSubclass a :DisjointTheFirst,
        :DisjointTheSecond ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy :inconsistent .""",
                        """:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy :inconsistent ;
    owl:disjointWith :DisjointTheSecond .""",
                        """:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy :inconsistent ;
    owl:disjointWith :DisjointTheFirst .""",
                        """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter .""",
                        """:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy :notEL .""",
                        """:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy :notQL .""",
                        """:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy :notRL .""",
                        """:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy :rangeOuter ;
    rdfs:range sh:NodeShape .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy :unlabeled .""",
                        """violation:14254428-aff9-4707-b50f-c5450f3dbf6a a sh:ValidationResult ;
    sh:focusNode sand:ClassA ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:1e142611-b71c-4e8d-abd0-61ff1d9657f8 a sh:ValidationResult ;
    sh:focusNode sand:DisjointTheFirst ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:2dced177-202b-4f0f-89c2-8b48519aaa63 a sh:ValidationResult ;
    sh:focusNode sand:rangeReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:33d7763a-ff15-4eb6-a286-dc0972283fb5 a sh:ValidationResult ;
    sh:focusNode sand:notELTermCauseAsymmetric ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:5a06674f-dd29-4d11-9156-c0cc1a4ad73f a sh:ValidationResult ;
    sh:focusNode sand:domainReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:8443aedf-6225-446b-8849-2cdcc87e598e a sh:ValidationResult ;
    sh:focusNode sand:notQLTermCauseTransitive ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:9024df06-b190-4afa-ae4c-ffbbde69ee1d a sh:ValidationResult ;
    sh:focusNode sand:notRLTermCauseReflexive ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:afa921f2-e1f6-4c36-8745-e854bc95f866 a sh:ValidationResult ;
    sh:focusNode sand:BrokenSubclass ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:b252d812-3342-4397-ae82-412f1f97d7f4 a sh:ValidationResult ;
    sh:focusNode sand:unlabeledTerm ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:db819424-171b-48eb-ab1a-9a85febbd97e a sh:ValidationResult ;
    sh:focusNode sand:DisjointTheSecond ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:fa457c3d-0910-4468-886d-0e623d596a37 a sh:ValidationResult ;
    sh:focusNode sand:ClassB ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Too close terms"@en ;
                    earl:info """:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Too close terms"@en ;
                    earl:info """:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""" ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Subject terms not linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Term not referenced to a module"@en ;
                    earl:info """:NotReferencedClass a owl:Class ;
    rdfs:label "This class is not linked to a module by a rdfs:isDefinedBy p..." .""" ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Custom test  could not be run because the subject could not be loaded in the engine"@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw:comment-format .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter ;
    rdfs:subPropertyOf :domainReferencingOut ;
    owl:equivalentProperty :domainReferencingOut .""" ;
                    earl:pointer sh:NodeShape ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    earl:info """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""" ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a olivaw:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    earl:info """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:identifier "syntax-error" ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    earl:info "Encountered \"a\" at line 9, column 23." ] ] ;
    earl:subject _:module-src-broken ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    earl:info """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""" ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy :notRL .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:3cf139e2-15e2-45d0-b15d-d9e03a631ac4 a sh:ValidationResult ;
    sh:focusNode sand:notRLTermCauseReflexive ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "Terms not labeled"@en ;
                    earl:info """:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy :unlabeled .""" ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:47a61df2-b0bf-4eac-a41b-21bde0dcad57 a sh:ValidationResult ;
    sh:focusNode sand:ClassA ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:94b11425-36bb-4142-beeb-15b04d7483f6 a sh:ValidationResult ;
    sh:focusNode sand:ClassB ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#disjointWith &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10; &#10;"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL Constraint violation"@en ],
                [ a olivaw:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#AllDisjointClasses &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:AllDisjointClasses\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10; &#10;"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL Constraint violation"@en ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Subject terms not linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Term not referenced to a module"@en ;
                    earl:info """:NotReferencedClass a owl:Class ;
    rdfs:label "This class is not linked to a module by a rdfs:isDefinedBy p..." .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Too close terms"@en ;
                    earl:info """:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""" ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:b23e8346-65f4-4739-a93e-ba1cc09ed2bc a sh:ValidationResult ;
    sh:focusNode sand:domainReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    earl:info """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""" ],
                [ a earl:Pass ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy :notRL .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:78d3aef7-cc1c-4420-9864-e58fd2bb3170 a sh:ValidationResult ;
    sh:focusNode sand:notRLTermCauseReflexive ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter ;
    rdfs:subPropertyOf :domainReferencingOut ;
    owl:equivalentProperty :domainReferencingOut .""" ;
                    earl:pointer sh:NodeShape ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy :notEL .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:4e7b8333-c2f3-4209-a572-ebd025b875f2 a sh:ValidationResult ;
    sh:focusNode sand:notELTermCauseAsymmetric ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test olivaw:terms-differenciation .

_:testSuiteUsage a prov:Usage ;
    prov:entity <https://github.com/Wimmics/olivaw/blob/v0.0.6/olivaw/test/model/suite.py> ;
    prov:hadRole olivaw:test_suite .

_:testedProjectUsage a prov:Usage ;
    prov:entity <https://github.com/acimov-tools/model-test/tree/9b217d00b023a3e7f625aca4a4e8f615c0a008ab> ;
    prov:hadRole olivaw:tested_project .

_:testerAssociation a prov:Association ;
    prov:agent _:tester ;
    prov:hadRole olivaw:tester .

_:modelet-zedomain-prefix a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/prefix/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-prefix" ;
    dcterms:title "Standalone modelet domains/zedomain/prefix/onto.ttl from branch main"@en .

_:modelet-zedomain-syntax a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/syntax/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-syntax" ;
    dcterms:title "Standalone modelet domains/zedomain/syntax/onto.ttl from branch main"@en .

_:module-src-broken a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/broken.ttl> ;
    dcterms:identifier "module-src-broken" ;
    dcterms:title "Standalone module src/broken.ttl from branch main"@en .

_:module-src-unknown-prefix a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/unknown-prefix.ttl> ;
    dcterms:identifier "module-src-unknown-prefix" ;
    dcterms:title "Standalone module src/unknown-prefix.ttl from branch main"@en .

_:tester a prov:Agent,
        foaf:Person ;
    foaf:homepage git-platform:NicoRobertIn ;
    foaf:nick "NicoRobertIn" .

_:all-fragments a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/compatEL/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/compatQL/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/compatRL/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/differenciation/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/domainout/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/dovrov/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/inconsistence/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/label/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/rangeout/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/domain-outer.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/inconsistent.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/not-el.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/not-ql.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/not-rl.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/range-outer.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/too-close-terms.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/unlabeled.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/unreferenced.ttl> ;
    dcterms:identifier "all-fragments" ;
    dcterms:title "All the fragments from branch main that are syntaxically correct as well as their recursive imports"@en .

_:all-modules a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/domain-outer.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/inconsistent.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/not-el.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/not-ql.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/not-rl.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/range-outer.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/too-close-terms.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/unlabeled.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/unreferenced.ttl> ;
    dcterms:identifier "all-modules" ;
    dcterms:title "All the modules from branch main that are syntaxically correct as well as their recursive imports"@en .

_:modelet-zedomain-compatEL a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/compatEL/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-compatEL" ;
    dcterms:title "Standalone modelet domains/zedomain/compatEL/onto.ttl from branch main"@en .

_:modelet-zedomain-compatQL a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/compatQL/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-compatQL" ;
    dcterms:title "Standalone modelet domains/zedomain/compatQL/onto.ttl from branch main"@en .

_:modelet-zedomain-compatRL a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/compatRL/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-compatRL" ;
    dcterms:title "Standalone modelet domains/zedomain/compatRL/onto.ttl from branch main"@en .

_:modelet-zedomain-differenciation a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/differenciation/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-differenciation" ;
    dcterms:title "Standalone modelet domains/zedomain/differenciation/onto.ttl from branch main"@en .

_:modelet-zedomain-domainout a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/domainout/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-domainout" ;
    dcterms:title "Standalone modelet domains/zedomain/domainout/onto.ttl from branch main"@en .

_:modelet-zedomain-dovrov a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/dovrov/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-dovrov" ;
    dcterms:title "Standalone modelet domains/zedomain/dovrov/onto.ttl from branch main"@en .

_:modelet-zedomain-inconsistence a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/inconsistence/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-inconsistence" ;
    dcterms:title "Standalone modelet domains/zedomain/inconsistence/onto.ttl from branch main"@en .

_:modelet-zedomain-label a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/label/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-label" ;
    dcterms:title "Standalone modelet domains/zedomain/label/onto.ttl from branch main"@en .

_:modelet-zedomain-rangeout a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/rangeout/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-rangeout" ;
    dcterms:title "Standalone modelet domains/zedomain/rangeout/onto.ttl from branch main"@en .

_:module-src-domain-outer a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/domain-outer.ttl> ;
    dcterms:identifier "module-src-domain-outer" ;
    dcterms:title "Standalone module src/domain-outer.ttl from branch main"@en .

_:module-src-inconsistent a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/inconsistent.ttl> ;
    dcterms:identifier "module-src-inconsistent" ;
    dcterms:title "Standalone module src/inconsistent.ttl from branch main"@en .

_:module-src-not-el a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/not-el.ttl> ;
    dcterms:identifier "module-src-not-el" ;
    dcterms:title "Standalone module src/not-el.ttl from branch main"@en .

_:module-src-not-ql a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/not-ql.ttl> ;
    dcterms:identifier "module-src-not-ql" ;
    dcterms:title "Standalone module src/not-ql.ttl from branch main"@en .

_:module-src-not-rl a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/not-rl.ttl> ;
    dcterms:identifier "module-src-not-rl" ;
    dcterms:title "Standalone module src/not-rl.ttl from branch main"@en .

_:module-src-range-outer a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/range-outer.ttl> ;
    dcterms:identifier "module-src-range-outer" ;
    dcterms:title "Standalone module src/range-outer.ttl from branch main"@en .

_:module-src-too-close-terms a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/too-close-terms.ttl> ;
    dcterms:identifier "module-src-too-close-terms" ;
    dcterms:title "Standalone module src/too-close-terms.ttl from branch main"@en .

_:module-src-unlabeled a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/unlabeled.ttl> ;
    dcterms:identifier "module-src-unlabeled" ;
    dcterms:title "Standalone module src/unlabeled.ttl from branch main"@en .

_:module-src-unreferenced a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/unreferenced.ttl> ;
    dcterms:identifier "module-src-unreferenced" ;
    dcterms:title "Standalone module src/unreferenced.ttl from branch main"@en .

_:assertor a earl:Assertor,
        prov:Activity ;
    dcterms:description "NicoRobertIn launch actions run of model tests against acimov-tools/model-test on branch main" ;
    dcterms:title "Model tests of acimov-tools/model-test on branch main" ;
    prov:endedAtTime "2024-09-20T08:45:01.763979"^^xsd:dateTime ;
    prov:generated <file:////home/runner/work/model-test/model-test/.acimov/output/model-test-actions.md>,
        <file:////home/runner/work/model-test/model-test/.acimov/output/model-test-actions.ttl> ;
    prov:qualifiedAssociation _:testerAssociation ;
    prov:qualifiedUsage _:testSuiteUsage,
        _:testedProjectUsage ;
    prov:used <https://github.com/Wimmics/olivaw/blob/v0.0.6/olivaw/test/model/suite.py>,
        <https://github.com/acimov-tools/model-test/tree/9b217d00b023a3e7f625aca4a4e8f615c0a008ab> ;
    prov:wasAssociatedWith _:tester .

