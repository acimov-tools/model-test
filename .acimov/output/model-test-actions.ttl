@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix earl: <http://www.w3.org/ns/earl#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix git-platform: <https://github.com/> .
@prefix olivaw: <https://ns.inria.fr/olivaw#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<file:////home/runner/work/model-test/model-test/.acimov/output/model-test-actions.md> a prov:Entity ;
    prov:generatedAtTime "2024-09-24T12:30:52.569080"^^xsd:dateTime ;
    prov:qualifiedGeneration [ a prov:Generation ;
            prov:activity _:assertor ;
            olivaw:generatedAs olivaw:markdown_report ] .

<file:////home/runner/work/model-test/model-test/.acimov/output/model-test-actions.ttl> a prov:Entity ;
    prov:generatedAtTime "2024-09-24T12:30:52.569080"^^xsd:dateTime ;
    prov:qualifiedGeneration [ a prov:Generation ;
            prov:activity _:assertor ;
            olivaw:generatedAs olivaw:turtle_report ] .

<https://github.com/Wimmics/olivaw/blob/v0.0.6/olivaw/test/model/suite.py> a olivaw:VersionedEntity ;
    dcterms:hasVersion "v0.0.6" ;
    olivaw:hostedAt <https://github.com/Wimmics/olivaw/blob/main/olivaw/test/model/suite.py> .

<https://github.com/acimov-tools/model-test/tree/89540ac190b66e3b02df98cc6d368bbdb70dafb5> a olivaw:VersionedEntity ;
    dcterms:date "2024-09-24T14:29:38"^^xsd:dateTime ;
    dcterms:hasVersion "89540ac190b66e3b02df98cc6d368bbdb70dafb5" ;
    olivaw:hostedAt <https://github.com/acimov-tools/model-test> ;
    olivaw:isOnBranch "main" ;
    olivaw:patchedBy _:tester .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:6a2fcc40-c43d-4bb4-ace0-a3dc3629f62e a sh:ValidationResult ;
    sh:focusNode sand:domainReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Custom test  could not be run because the subject could not be loaded in the engine"@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-src-unknown-prefix ;
    earl:test olivaw:comment-format .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:BrokenSubclass a :DisjointTheFirst,
        :DisjointTheSecond ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy :inconsistent .""",
                        """:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy :inconsistent ;
    owl:disjointWith :DisjointTheSecond .""",
                        """:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy :inconsistent ;
    owl:disjointWith :DisjointTheFirst .""",
                        """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter .""",
                        """:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy :notEL .""",
                        """:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy :notQL .""",
                        """:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy :notRL .""",
                        """:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy :rangeOuter ;
    rdfs:range sh:NodeShape .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy :unlabeled .""",
                        """violation:2877b0bb-01ea-4db4-a8eb-014c1be10b87 a sh:ValidationResult ;
    sh:focusNode sand:rangeReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:303fe923-586c-48d2-a7e4-e70bf24fce5a a sh:ValidationResult ;
    sh:focusNode sand:unlabeledTerm ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:59c43de6-c7a7-4c62-94c7-037c6bfefa8d a sh:ValidationResult ;
    sh:focusNode sand:notELTermCauseAsymmetric ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:909ce2d6-d1a0-482a-b1fb-236a829aefce a sh:ValidationResult ;
    sh:focusNode sand:notRLTermCauseReflexive ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:b6464999-225a-4fa6-8e0a-94ce23d574a2 a sh:ValidationResult ;
    sh:focusNode sand:ClassB ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:bfbacea1-4141-45b4-8a46-69a814e93fc9 a sh:ValidationResult ;
    sh:focusNode sand:ClassA ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:c0488ff2-a41c-4239-9f37-2a978b19ae30 a sh:ValidationResult ;
    sh:focusNode sand:notQLTermCauseTransitive ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:db4d9b0b-67d4-4ec9-ac71-5f1ad1466259 a sh:ValidationResult ;
    sh:focusNode sand:DisjointTheFirst ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:e1d77a89-3a92-4228-a5da-45f59b2daf2c a sh:ValidationResult ;
    sh:focusNode sand:BrokenSubclass ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:fbd28bf5-dd14-46f6-b29f-c781a5c27e53 a sh:ValidationResult ;
    sh:focusNode sand:DisjointTheSecond ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:fff9822f-c845-48d1-8fa0-cd1c88cd6b96 a sh:ValidationResult ;
    sh:focusNode sand:domainReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#AllDisjointClasses &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:AllDisjointClasses\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10; &#10;"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL Constraint violation"@en ],
                [ a olivaw:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#disjointWith &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10; &#10;"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL Constraint violation"@en ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy :unlabeled .""",
                        """violation:67a4ea29-a564-4658-8605-e27e73544335 a sh:ValidationResult ;
    sh:focusNode sand:unlabeledTerm ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Too close terms"@en ;
                    earl:info """:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""" ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    earl:info """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""" ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a olivaw:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    earl:info """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a olivaw:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    earl:info """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""" ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:5289f4cf-6ed9-4235-97ea-4fdc176a4973 a sh:ValidationResult ;
    sh:focusNode sand:ClassA ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:e4276ac2-8f67-4d7f-b7ee-3a0b251d2770 a sh:ValidationResult ;
    sh:focusNode sand:ClassB ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter ;
    rdfs:subPropertyOf :domainReferencingOut ;
    owl:equivalentProperty :domainReferencingOut .""" ;
                    earl:pointer sh:NodeShape ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Too close terms"@en ;
                    earl:info """:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:BrokenSubclass a owl:Class ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy :inconsistent ;
    rdfs:subClassOf :DisjointTheFirst,
        :DisjointTheSecond .""",
                        """:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy :inconsistent ;
    owl:disjointWith :DisjointTheSecond .""",
                        """:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy :inconsistent ;
    owl:disjointWith :DisjointTheFirst .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:5b047f38-db70-4917-89e2-a799906589fa a sh:ValidationResult ;
    sh:focusNode sand:DisjointTheFirst ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:91c5fa6e-426a-4c98-9ac4-987ce9942f43 a sh:ValidationResult ;
    sh:focusNode sand:BrokenSubclass ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:b38a1f95-2335-4271-be8e-c95825719c6b a sh:ValidationResult ;
    sh:focusNode sand:DisjointTheSecond ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter ;
    rdfs:subPropertyOf :domainReferencingOut ;
    owl:equivalentProperty :domainReferencingOut .""" ;
                    earl:pointer sh:NodeShape ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "Terms not labeled"@en ;
                    earl:info """:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy :unlabeled .""" ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "Terms not labeled"@en ;
                    earl:info """:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy :unlabeled .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter ;
    rdfs:subPropertyOf :domainReferencingOut ;
    owl:equivalentProperty :domainReferencingOut .""" ;
                    earl:pointer sh:NodeShape ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    earl:info """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""" ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Too close terms"@en ;
                    earl:info """:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""" ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Custom test  could not be run because the subject could not be loaded in the engine"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-src-broken ;
    earl:test olivaw:subclass-cycle .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy :notEL .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:5bd7a9c2-cbf8-4792-906b-2b6613526088 a sh:ValidationResult ;
    sh:focusNode sand:notELTermCauseAsymmetric ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter ;
    rdfs:subPropertyOf :domainReferencingOut ;
    owl:equivalentProperty :domainReferencingOut .""" ;
                    earl:pointer sh:NodeShape ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy :rangeOuter ;
    rdfs:range sh:NodeShape .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:fc4eda9f-6aaf-4865-87ee-0fbb165e62b3 a sh:ValidationResult ;
    sh:focusNode sand:rangeReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter ;
    rdfs:subPropertyOf :domainReferencingOut ;
    owl:equivalentProperty :domainReferencingOut .""" ;
                    earl:pointer sh:NodeShape ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:BrokenSubclass a :DisjointTheFirst,
        :DisjointTheSecond ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy :inconsistent .""",
                        """:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy :inconsistent ;
    owl:disjointWith :DisjointTheSecond .""",
                        """:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy :inconsistent ;
    owl:disjointWith :DisjointTheFirst .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:459a36de-7757-4863-9476-f4ee6d4b5b76 a sh:ValidationResult ;
    sh:focusNode sand:BrokenSubclass ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:526a10cd-cffd-4208-8e1a-759519f7f6ea a sh:ValidationResult ;
    sh:focusNode sand:DisjointTheFirst ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:94e895e6-9e99-4d08-b0b0-fa25ae0828ac a sh:ValidationResult ;
    sh:focusNode sand:DisjointTheSecond ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Custom test  could not be run because the subject could not be loaded in the engine"@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-src-broken ;
    earl:test olivaw:comment-format .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Custom test  could not be run because the subject could not be loaded in the engine"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw:subclass-cycle .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:BrokenSubclass a owl:Class,
        :DisjointTheFirst,
        :DisjointTheSecond ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy :inconsistent ;
    rdfs:subClassOf :DisjointTheFirst,
        :DisjointTheSecond .""",
                        """:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy :inconsistent ;
    owl:disjointWith :DisjointTheSecond .""",
                        """:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy :inconsistent ;
    owl:disjointWith :DisjointTheFirst .""",
                        """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter .""",
                        """:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy :notEL .""",
                        """:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy :notQL .""",
                        """:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy :notRL .""",
                        """:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy :rangeOuter ;
    rdfs:range sh:NodeShape .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy :unlabeled .""",
                        """violation:08e5630d-7143-48f3-898d-e9254cd0796e a sh:ValidationResult ;
    sh:focusNode sand:DisjointTheFirst ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:0d05f9a6-c733-4661-8120-435670ba558d a sh:ValidationResult ;
    sh:focusNode sand:notQLTermCauseTransitive ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:2373ff85-9e3d-4466-84fb-56c51afbf500 a sh:ValidationResult ;
    sh:focusNode sand:domainReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:37372193-1c1c-4746-b0a1-ed02f257eacf a sh:ValidationResult ;
    sh:focusNode sand:BrokenSubclass ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:5e0f8cfa-a815-4f08-99b2-f1fce1fa4217 a sh:ValidationResult ;
    sh:focusNode sand:DisjointTheSecond ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:61d5a59d-d4e7-41c4-9972-32daafeb501d a sh:ValidationResult ;
    sh:focusNode sand:ClassB ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:6af853a9-a4a8-4e7c-843f-9c1a86d8e225 a sh:ValidationResult ;
    sh:focusNode sand:notELTermCauseAsymmetric ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:948cb87b-fc53-4fa7-966d-a73ec94630d8 a sh:ValidationResult ;
    sh:focusNode sand:ClassA ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:be9aca4f-55c1-41a4-aae2-e54b2da9ac87 a sh:ValidationResult ;
    sh:focusNode sand:notRLTermCauseReflexive ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:c7a49428-39c3-466b-8810-874f5ea9ec0b a sh:ValidationResult ;
    sh:focusNode sand:unlabeledTerm ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:fa5edf05-3c5d-4e7c-902e-33d098e00079 a sh:ValidationResult ;
    sh:focusNode sand:rangeReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:all-modules ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a olivaw:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    earl:info """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""" ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Subject terms not linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Term not referenced to a module"@en ;
                    earl:info """:NotReferencedClass a owl:Class ;
    rdfs:label "This class is not linked to a module by a rdfs:isDefinedBy p..." .""" ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy :notRL .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:5578a0a5-a641-4028-a9ac-84318524ba4f a sh:ValidationResult ;
    sh:focusNode sand:notRLTermCauseReflexive ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:identifier "syntax-error" ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    earl:info """at line 3 of <>:
Bad syntax (Prefix "owl:" not bound) at ^ in:
"...b'fix : <https://www.example.org/olivaw/> .\\n\\n:unknownPrefix a '^b'owl:Ontology .\\n\\n:Unknown a owl:Class ;\\n    rdfs:label "This '...\"""" ] ] ;
    earl:subject _:module-src-unknown-prefix ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#AllDisjointClasses &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:AllDisjointClasses\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10; &#10;"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL Constraint violation"@en ],
                [ a olivaw:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#disjointWith &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10; &#10;"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL Constraint violation"@en ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:identifier "syntax-error" ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    earl:info "Encountered \"a\" at line 7, column 23." ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy :notEL .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:ff9ae708-5dc9-4700-b3bc-13dd440f7cad a sh:ValidationResult ;
    sh:focusNode sand:notELTermCauseAsymmetric ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a olivaw:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    earl:info """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""" ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Subject terms not linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Term not referenced to a module"@en ;
                    earl:info """:NotReferencedClass a owl:Class ;
    rdfs:label "This class is not linked to a module by a rdfs:isDefinedBy p..." .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:3ea6902f-674e-4940-9a2d-9efecb109299 a sh:ValidationResult ;
    sh:focusNode sand:ClassA ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:77898799-d03b-47ea-ad9b-f1710ba9a3c2 a sh:ValidationResult ;
    sh:focusNode sand:ClassB ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Custom test  could not be run because the subject could not be loaded in the engine"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-src-unknown-prefix ;
    earl:test olivaw:subclass-cycle .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Custom test  could not be run because the subject could not be loaded in the engine"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw:subclass-cycle .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy :rangeOuter ;
    rdfs:range sh:NodeShape .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:eb42eddd-20ad-4a43-92a6-857fd18b0a41 a sh:ValidationResult ;
    sh:focusNode sand:rangeReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Too close terms"@en ;
                    earl:info """:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:ccd0f8e8-cd79-4a9c-8910-642dcf211cc6 a sh:ValidationResult ;
    sh:focusNode sand:domainReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:identifier "syntax-error" ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    earl:info "Encountered \"a\" at line 9, column 23." ] ] ;
    earl:subject _:module-src-broken ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Custom test  could not be run because the subject could not be loaded in the engine"@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw:comment-format .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy :notQL .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:a40decb7-c32b-4e9b-99f0-0a0e6ad877f7 a sh:ValidationResult ;
    sh:focusNode sand:notQLTermCauseTransitive ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy :notQL .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:22662514-06f0-494b-9939-94a9450320a6 a sh:ValidationResult ;
    sh:focusNode sand:notQLTermCauseTransitive ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#AllDisjointClasses &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:AllDisjointClasses\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10; &#10;"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL Constraint violation"@en ],
                [ a olivaw:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#disjointWith &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10; &#10;"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL Constraint violation"@en ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "Terms not labeled"@en ;
                    earl:info """:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy :unlabeled .""" ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    earl:info """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""" ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a olivaw:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    earl:info """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Subject terms not linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Term not referenced to a module"@en ;
                    earl:info """:NotReferencedClass a owl:Class ;
    rdfs:label "This class is not linked to a module by a rdfs:isDefinedBy p..." .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:all-fragments ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy :unlabeled .""",
                        """violation:34afa93a-2219-4bd0-b467-3c1c2e32cc66 a sh:ValidationResult ;
    sh:focusNode sand:unlabeledTerm ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:identifier "syntax-error" ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    earl:info """at line 3 of <>:
Bad syntax (Prefix "owl:" not bound) at ^ in:
"...b'fix : <https://www.example.org/olivaw/> .\\n\\n:unknownPrefix a '^b'owl:Ontology .\\n\\n:Unknown a owl:Class ;\\n    rdfs:label "This '...\"""" ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "Terms not labeled"@en ;
                    earl:info """:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy :unlabeled .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy :notRL .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:9118970a-9384-4e55-bd64-1b3baf5a21b5 a sh:ValidationResult ;
    sh:focusNode sand:notRLTermCauseReflexive ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:5ba33b0b-ced9-463a-a963-5d1d8a1454a1 a sh:ValidationResult ;
    sh:focusNode sand:domainReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Custom test  could not be run because the subject could not be loaded in the engine"@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw:comment-format .

_:testSuiteUsage a prov:Usage ;
    prov:entity <https://github.com/Wimmics/olivaw/blob/v0.0.6/olivaw/test/model/suite.py> ;
    prov:hadRole olivaw:test_suite .

_:testedProjectUsage a prov:Usage ;
    prov:entity <https://github.com/acimov-tools/model-test/tree/89540ac190b66e3b02df98cc6d368bbdb70dafb5> ;
    prov:hadRole olivaw:tested_project .

_:testerAssociation a prov:Association ;
    prov:agent _:tester ;
    prov:hadRole olivaw:tester .

_:modelet-zedomain-prefix a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/prefix/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-prefix" ;
    dcterms:title "Standalone modelet domains/zedomain/prefix/onto.ttl from branch main"@en .

_:modelet-zedomain-syntax a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/syntax/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-syntax" ;
    dcterms:title "Standalone modelet domains/zedomain/syntax/onto.ttl from branch main"@en .

_:module-src-broken a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/broken.ttl> ;
    dcterms:identifier "module-src-broken" ;
    dcterms:title "Standalone module src/broken.ttl from branch main"@en .

_:module-src-unknown-prefix a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/unknown-prefix.ttl> ;
    dcterms:identifier "module-src-unknown-prefix" ;
    dcterms:title "Standalone module src/unknown-prefix.ttl from branch main"@en .

_:tester a prov:Agent,
        foaf:Person ;
    foaf:homepage git-platform:NicoRobertIn ;
    foaf:nick "NicoRobertIn" .

_:all-fragments a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/compatEL/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/compatQL/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/compatRL/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/differenciation/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/domainout/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/dovrov/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/inconsistence/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/label/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/rangeout/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/domain-outer.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/inconsistent.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/not-el.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/not-ql.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/not-rl.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/range-outer.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/too-close-terms.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/unlabeled.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/unreferenced.ttl> ;
    dcterms:identifier "all-fragments" ;
    dcterms:title "All the fragments from branch main that are syntaxically correct as well as their recursive imports"@en .

_:all-modules a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/domain-outer.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/inconsistent.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/not-el.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/not-ql.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/not-rl.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/range-outer.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/too-close-terms.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/unlabeled.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/unreferenced.ttl> ;
    dcterms:identifier "all-modules" ;
    dcterms:title "All the modules from branch main that are syntaxically correct as well as their recursive imports"@en .

_:modelet-zedomain-compatEL a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/compatEL/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-compatEL" ;
    dcterms:title "Standalone modelet domains/zedomain/compatEL/onto.ttl from branch main"@en .

_:modelet-zedomain-compatQL a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/compatQL/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-compatQL" ;
    dcterms:title "Standalone modelet domains/zedomain/compatQL/onto.ttl from branch main"@en .

_:modelet-zedomain-compatRL a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/compatRL/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-compatRL" ;
    dcterms:title "Standalone modelet domains/zedomain/compatRL/onto.ttl from branch main"@en .

_:modelet-zedomain-differenciation a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/differenciation/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-differenciation" ;
    dcterms:title "Standalone modelet domains/zedomain/differenciation/onto.ttl from branch main"@en .

_:modelet-zedomain-domainout a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/domainout/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-domainout" ;
    dcterms:title "Standalone modelet domains/zedomain/domainout/onto.ttl from branch main"@en .

_:modelet-zedomain-dovrov a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/dovrov/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-dovrov" ;
    dcterms:title "Standalone modelet domains/zedomain/dovrov/onto.ttl from branch main"@en .

_:modelet-zedomain-inconsistence a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/inconsistence/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-inconsistence" ;
    dcterms:title "Standalone modelet domains/zedomain/inconsistence/onto.ttl from branch main"@en .

_:modelet-zedomain-label a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/label/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-label" ;
    dcterms:title "Standalone modelet domains/zedomain/label/onto.ttl from branch main"@en .

_:modelet-zedomain-rangeout a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/rangeout/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-rangeout" ;
    dcterms:title "Standalone modelet domains/zedomain/rangeout/onto.ttl from branch main"@en .

_:module-src-domain-outer a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/domain-outer.ttl> ;
    dcterms:identifier "module-src-domain-outer" ;
    dcterms:title "Standalone module src/domain-outer.ttl from branch main"@en .

_:module-src-inconsistent a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/inconsistent.ttl> ;
    dcterms:identifier "module-src-inconsistent" ;
    dcterms:title "Standalone module src/inconsistent.ttl from branch main"@en .

_:module-src-not-el a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/not-el.ttl> ;
    dcterms:identifier "module-src-not-el" ;
    dcterms:title "Standalone module src/not-el.ttl from branch main"@en .

_:module-src-not-ql a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/not-ql.ttl> ;
    dcterms:identifier "module-src-not-ql" ;
    dcterms:title "Standalone module src/not-ql.ttl from branch main"@en .

_:module-src-not-rl a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/not-rl.ttl> ;
    dcterms:identifier "module-src-not-rl" ;
    dcterms:title "Standalone module src/not-rl.ttl from branch main"@en .

_:module-src-range-outer a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/range-outer.ttl> ;
    dcterms:identifier "module-src-range-outer" ;
    dcterms:title "Standalone module src/range-outer.ttl from branch main"@en .

_:module-src-too-close-terms a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/too-close-terms.ttl> ;
    dcterms:identifier "module-src-too-close-terms" ;
    dcterms:title "Standalone module src/too-close-terms.ttl from branch main"@en .

_:module-src-unlabeled a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/unlabeled.ttl> ;
    dcterms:identifier "module-src-unlabeled" ;
    dcterms:title "Standalone module src/unlabeled.ttl from branch main"@en .

_:module-src-unreferenced a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/unreferenced.ttl> ;
    dcterms:identifier "module-src-unreferenced" ;
    dcterms:title "Standalone module src/unreferenced.ttl from branch main"@en .

_:assertor a earl:Assertor,
        prov:Activity ;
    dcterms:description "NicoRobertIn launch actions run of model tests against acimov-tools/model-test on branch main" ;
    dcterms:title "Model tests of acimov-tools/model-test on branch main" ;
    prov:endedAtTime "2024-09-24T12:30:52.569080"^^xsd:dateTime ;
    prov:generated <file:////home/runner/work/model-test/model-test/.acimov/output/model-test-actions.md>,
        <file:////home/runner/work/model-test/model-test/.acimov/output/model-test-actions.ttl> ;
    prov:qualifiedAssociation _:testerAssociation ;
    prov:qualifiedUsage _:testSuiteUsage,
        _:testedProjectUsage ;
    prov:used <https://github.com/Wimmics/olivaw/blob/v0.0.6/olivaw/test/model/suite.py>,
        <https://github.com/acimov-tools/model-test/tree/89540ac190b66e3b02df98cc6d368bbdb70dafb5> ;
    prov:wasAssociatedWith _:tester .

