@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix earl: <http://www.w3.org/ns/earl#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix olivaw-earl: <https://raw.githubusercontent.com/Wimmics/olivaw/main/olivaw/test/olivaw-earl.ttl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix src: <https://github.com/acimov-tools/model-test/blob/refs/heads/dev6/src/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:title "Terms not labeled"@en ;
                    rdfs:seeAlso """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-not-el ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-not-ql ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notQLTermCauseTransitive> a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notQL> .""" ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:047bd491-43c2-492c-ab4f-0df70aa090c9> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/BrokenSubclass> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36372 ;
	sh:value 0 .""",
                        """<urn:uuid:08252f99-3ce8-4a48-8c33-ab6725cc0b66> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notQLTermCauseTransitive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36372 ;
	sh:value 0 .""",
                        """<urn:uuid:0cd641c3-8af9-46c4-af48-d19c64d8d65a> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassB> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36372 ;
	sh:value 0 .""",
                        """<urn:uuid:34a1d5af-4ff8-468b-9074-d29853a9ba6d> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/unlabeledTerm> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36372 ;
	sh:value 0 .""",
                        """<urn:uuid:499a5a6f-0981-4da4-a8bb-1aadac4840b0> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheSecond> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36372 ;
	sh:value 0 .""",
                        """<urn:uuid:61243571-5c03-457f-ac2c-b6e7deca7649> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/rangeReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36372 ;
	sh:value 0 .""",
                        """<urn:uuid:679f4049-a297-4c5b-98a5-adae72dc447f> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/domainReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36372 ;
	sh:value 0 .""",
                        """<urn:uuid:802366ff-022e-426c-8cb3-7b26030f91ab> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notRLTermCauseReflexive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36372 ;
	sh:value 0 .""",
                        """<urn:uuid:921c480d-b22d-4716-aa19-4bb2ee66abeb> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notELTermCauseAsymmetric> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36372 ;
	sh:value 0 .""",
                        """<urn:uuid:c97b87fd-bfd3-496e-9849-179fb9dd9bbd> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassA> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36372 ;
	sh:value 0 .""",
                        """<urn:uuid:ceb0ab53-f204-4689-ac4b-c32d8383e80b> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheFirst> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36372 ;
	sh:value 0 .""",
                        """sand:BrokenSubclass a sand:DisjointTheFirst,
        sand:DisjointTheSecond ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy sand:inconsistent .""",
                        """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheSecond .""",
                        """sand:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheFirst .""",
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter .""",
                        """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""",
                        """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""",
                        """sand:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy sand:notRL .""",
                        """sand:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy sand:rangeOuter ;
    rdfs:range shacl:NodeShape .""",
                        """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-not-ql ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#AllDisjointClasses &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:AllDisjointClasses\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ],
                [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#disjointWith &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:title "Terms not labeled"@en ;
                    rdfs:seeAlso """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:title "Terms not labeled"@en ;
                    rdfs:seeAlso """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    rdfs:seeAlso sh:NodeShape,
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter ;
    rdfs:subPropertyOf sand:domainReferencingOut ;
    owl:equivalentProperty sand:domainReferencingOut .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-not-ql ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    rdfs:seeAlso sh:NodeShape,
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter ;
    rdfs:subPropertyOf sand:domainReferencingOut ;
    owl:equivalentProperty sand:domainReferencingOut .""" ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Subject terms not linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Term not referenced to a module"@en ;
                    rdfs:seeAlso """sand:NotReferencedClass a owl:Class ;
    rdfs:label "This class is not linked to a module by a rdfs:isDefinedBy p..." .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    rdfs:seeAlso "Encountered \"a\" at line 9, column 23." ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:syntax .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:title "Too close terms"@en ;
                    rdfs:seeAlso """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:2a9ebb24-a894-46ab-a776-6a8022bc8996> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheSecond> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b10780 ;
	sh:value 0 .""",
                        """<urn:uuid:6fbb8237-84bb-4c89-9849-04fa6306ecea> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/BrokenSubclass> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b10780 ;
	sh:value 0 .""",
                        """<urn:uuid:cfa78b1e-8df6-4607-af62-ca36c7be1ccd> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheFirst> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b10780 ;
	sh:value 0 .""",
                        """sand:BrokenSubclass a sand:DisjointTheFirst,
        sand:DisjointTheSecond ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy sand:inconsistent .""",
                        """sand:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheSecond .""",
                        """sand:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheFirst .""" ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:title "Too close terms"@en ;
                    rdfs:seeAlso """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:d396d54d-d514-4559-ad49-b5ae41a9a4bd> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/rangeReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b29633 ;
	sh:value 0 .""",
                        """sand:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy sand:rangeOuter ;
    rdfs:range shacl:NodeShape .""" ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notELTermCauseAsymmetric> a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notEL> .""" ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notQLTermCauseTransitive> a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notQL> .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notQLTermCauseTransitive> a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notQL> .""" ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:063dce2f-2d76-4d33-920b-dd1130deb1c3> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/BrokenSubclass> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b16173 ;
	sh:value 0 .""",
                        """<urn:uuid:247b76c7-64b1-4728-b29c-51e2e16e3cef> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheFirst> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b16173 ;
	sh:value 0 .""",
                        """<urn:uuid:35810d48-539c-44d9-80e2-9266b72fa9bc> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheSecond> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b16173 ;
	sh:value 0 .""",
                        """sand:BrokenSubclass a owl:Class,
        sand:DisjointTheFirst,
        sand:DisjointTheSecond ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy sand:inconsistent ;
    rdfs:subClassOf sand:DisjointTheFirst,
        sand:DisjointTheSecond .""",
                        """sand:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheSecond .""",
                        """sand:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheFirst .""" ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:8b5b007e-dcf9-450a-896f-1b3f46848fae> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notQLTermCauseTransitive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b8079 ;
	sh:value 0 .""",
                        """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""" ] ] ;
    earl:subject _:module-not-ql ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-not-ql ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:75d42b36-97ef-4033-87a0-8c3b409148d1> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassA> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b6733 ;
	sh:value 0 .""",
                        """<urn:uuid:f19e0216-a82d-43de-82bc-11f8569def41> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassB> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b6733 ;
	sh:value 0 .""",
                        """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:title "Terms not labeled"@en ;
                    rdfs:seeAlso """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:9d60a571-eaa8-4b0b-a6fb-1c970a7438f6> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notQLTermCauseTransitive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b25595 ;
	sh:value 0 .""",
                        """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""" ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:84d6f26e-c86d-4646-99bf-3d3835e1fc40> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notRLTermCauseReflexive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b17519 ;
	sh:value 0 .""",
                        """sand:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy sand:notRL .""" ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:44db37fa-5e1b-4d79-bec4-2bbd7f415f8c> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notELTermCauseAsymmetric> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b4041 ;
	sh:value 0 .""",
                        """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""" ] ] ;
    earl:subject _:module-not-el ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:e1665d04-aafa-4c5b-9285-7e95d0b3acc4> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/unlabeledTerm> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b2695 ;
	sh:value 0 .""",
                        """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:51640bfc-152e-4f88-b5f2-1ad73745c02b> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassB> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b21557 ;
	sh:value 0 .""",
                        """<urn:uuid:78e9cd6b-ddca-4239-b3cb-84478b984640> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassA> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b21557 ;
	sh:value 0 .""",
                        """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:290b67ab-98ba-497a-aa1f-aaf159b65ea1> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notQLTermCauseTransitive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b26941 ;
	sh:value 0 .""",
                        """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""" ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:96801f6c-5dde-4316-9a28-88ac2644b1f4> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/domainReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b9425 ;
	sh:value 0 .""",
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter .""" ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:a6315e99-8f5e-487d-8546-fc7edcf914f2> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notELTermCauseAsymmetric> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b30979 ;
	sh:value 0 .""",
                        """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""" ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    rdfs:seeAlso sh:NodeShape,
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter ;
    rdfs:subPropertyOf sand:domainReferencingOut ;
    owl:equivalentProperty sand:domainReferencingOut .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:3d2382c2-3ba2-4157-b06e-b92d03a79485> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassB> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b20211 ;
	sh:value 0 .""",
                        """<urn:uuid:ad02842c-8735-4ca4-99b6-fc6c42cd3a09> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassA> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b20211 ;
	sh:value 0 .""",
                        """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:add1f690-f405-4df7-98df-f674c22d84a4> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/rangeReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b28287 ;
	sh:value 0 .""",
                        """sand:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy sand:rangeOuter ;
    rdfs:range shacl:NodeShape .""" ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    rdfs:seeAlso sh:NodeShape,
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter ;
    rdfs:subPropertyOf sand:domainReferencingOut ;
    owl:equivalentProperty sand:domainReferencingOut .""" ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:title "Too close terms"@en ;
                    rdfs:seeAlso """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:title "Terms not labeled"@en ;
                    rdfs:seeAlso """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-not-ql ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:title "Too close terms"@en ;
                    rdfs:seeAlso """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:f6274594-558f-4189-9c09-4da8e115e8a3> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/domainReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b22903 ;
	sh:value 0 .""",
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter .""" ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:d9743942-475a-4ac0-b681-bdcc061f6957> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/domainReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b35017 ;
	sh:value 0 .""",
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter .""" ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:3a409556-3ed0-470e-b4dc-9adf210f643c> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/unlabeledTerm> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b37727 ;
	sh:value 0 .""",
                        """<urn:uuid:66c79e4a-fbb3-4ece-a6f2-9f9302deeaa6> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheFirst> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b37727 ;
	sh:value 0 .""",
                        """<urn:uuid:7a476f0b-eb11-4b69-b59f-ecc251995f50> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/BrokenSubclass> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b37727 ;
	sh:value 0 .""",
                        """<urn:uuid:8ab434aa-1548-4100-87d4-dba6e52a7141> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/rangeReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b37727 ;
	sh:value 0 .""",
                        """<urn:uuid:8f7e9a48-5b1e-43bb-abe4-0ac8a120cadb> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheSecond> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b37727 ;
	sh:value 0 .""",
                        """<urn:uuid:aead48d0-9283-4601-aa5f-7295899d72c5> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notRLTermCauseReflexive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b37727 ;
	sh:value 0 .""",
                        """<urn:uuid:b10c41d7-199b-40b4-899d-59af60c9f791> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notELTermCauseAsymmetric> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b37727 ;
	sh:value 0 .""",
                        """<urn:uuid:b347ea4b-7459-45da-bf97-511f66e04c82> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassA> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b37727 ;
	sh:value 0 .""",
                        """<urn:uuid:c80a5cc0-aedb-480b-bb1d-983258844506> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/domainReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b37727 ;
	sh:value 0 .""",
                        """<urn:uuid:ccda2b52-2fd1-4ee7-893f-c3f9b8bcd7c4> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassB> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b37727 ;
	sh:value 0 .""",
                        """<urn:uuid:f0857dd1-92d9-449f-8cb2-c1ba6e4fa3aa> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notQLTermCauseTransitive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b37727 ;
	sh:value 0 .""",
                        """sand:BrokenSubclass a owl:Class,
        sand:DisjointTheFirst,
        sand:DisjointTheSecond ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy sand:inconsistent ;
    rdfs:subClassOf sand:DisjointTheFirst,
        sand:DisjointTheSecond .""",
                        """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheSecond .""",
                        """sand:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheFirst .""",
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter .""",
                        """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""",
                        """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""",
                        """sand:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy sand:notRL .""",
                        """sand:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy sand:rangeOuter ;
    rdfs:range shacl:NodeShape .""",
                        """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:9acf5009-7ab6-45a5-ae6c-c8ef86d5b1ac> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/unlabeledTerm> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b13472 ;
	sh:value 0 .""",
                        """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:ea78c785-7b3a-469e-896b-37b8157e527c> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/unlabeledTerm> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b12126 ;
	sh:value 0 .""",
                        """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-not-ql ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notQLTermCauseTransitive> a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notQL> .""" ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:module-not-ql ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notELTermCauseAsymmetric> a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notEL> .""" ] ] ;
    earl:subject _:module-not-el ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    rdfs:seeAlso """at line 3 of <>:
Bad syntax (Prefix "owl:" not bound) at ^ in:
"...b'fix : <https://www.example.org/olivaw/> .\\n\\n:unknownPrefix a '^b'owl:Ontology .\\n\\n:Unknown a owl:Class ;\\n    rdfs:label "This '...\"""" ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:syntax .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    rdfs:seeAlso sh:NodeShape,
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter ;
    rdfs:subPropertyOf sand:domainReferencingOut ;
    owl:equivalentProperty sand:domainReferencingOut .""" ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Subject terms not linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Term not referenced to a module"@en ;
                    rdfs:seeAlso """sand:NotReferencedClass a owl:Class ;
    rdfs:label "This class is not linked to a module by a rdfs:isDefinedBy p..." .""" ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:2db94b9b-5d9b-4c1a-965b-48166316c1d9> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/domainReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b33671 ;
	sh:value 0 .""",
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter .""" ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-not-el ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#disjointWith &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ],
                [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#AllDisjointClasses &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:AllDisjointClasses\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notELTermCauseAsymmetric> a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notEL> .""" ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-not-el ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:2922eb1b-8760-4c33-ba3e-ca556e15bb04> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notELTermCauseAsymmetric> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b32325 ;
	sh:value 0 .""",
                        """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""" ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    rdfs:seeAlso "Encountered \"a\" at line 7, column 23." ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:syntax .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:title "Too close terms"@en ;
                    rdfs:seeAlso """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notQLTermCauseTransitive> a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notQL> .""" ],
                [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notELTermCauseAsymmetric> a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notEL> .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#disjointWith &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ],
                [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#AllDisjointClasses &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:AllDisjointClasses\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:7aa810c0-a84d-434a-99a9-1231e5d75e41> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notRLTermCauseReflexive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b18865 ;
	sh:value 0 .""",
                        """sand:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy sand:notRL .""" ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:5cd5c870-c961-4298-9f81-417100ed5539> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/rangeReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b5387 ;
	sh:value 0 .""",
                        """sand:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy sand:rangeOuter ;
    rdfs:range shacl:NodeShape .""" ] ] ;
    earl:subject _:module-range-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-not-el ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    rdfs:seeAlso """at line 3 of <>:
Bad syntax (Prefix "owl:" not bound) at ^ in:
"...b'fix : <https://www.example.org/olivaw/> .\\n\\n:unknownPrefix a '^b'owl:Ontology .\\n\\n:Unknown a owl:Class ;\\n    rdfs:label "This '...\"""" ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:syntax .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-not-el ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:all-modules ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#disjointWith &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ],
                [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#AllDisjointClasses &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:AllDisjointClasses\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:all-fragments ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notELTermCauseAsymmetric> a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notEL> .""" ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Subject terms not linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Term not referenced to a module"@en ;
                    rdfs:seeAlso """sand:NotReferencedClass a owl:Class ;
    rdfs:label "This class is not linked to a module by a rdfs:isDefinedBy p..." .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    rdfs:seeAlso sh:NodeShape,
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter ;
    rdfs:subPropertyOf sand:domainReferencingOut ;
    owl:equivalentProperty sand:domainReferencingOut .""" ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    rdfs:seeAlso sh:NodeShape,
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter ;
    rdfs:subPropertyOf sand:domainReferencingOut ;
    owl:equivalentProperty sand:domainReferencingOut .""" ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:35161829-957a-41f7-90f4-aea1610fe95a> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheSecond> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b14818 ;
	sh:value 0 .""",
                        """<urn:uuid:54901f7b-9bf4-451f-b13e-c3dd3f5813ea> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/BrokenSubclass> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b14818 ;
	sh:value 0 .""",
                        """<urn:uuid:8df03d73-0015-4e2c-bbaf-95670c9d4910> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheFirst> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b14818 ;
	sh:value 0 .""",
                        """sand:BrokenSubclass a owl:Class ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy sand:inconsistent ;
    rdfs:subClassOf sand:DisjointTheFirst,
        sand:DisjointTheSecond .""",
                        """sand:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheSecond .""",
                        """sand:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheFirst .""" ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:1a174d47-fcb4-4308-bd7c-e845c9d53642> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/domainReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b24249 ;
	sh:value 0 .""",
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter .""" ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/dev6/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-not-el ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/dev6/domains/zedomain/domainout/onto.ttl>,
        src:domain-outer ;
    dcterms:identifier "module-domain-outer-modelet-zedomain-domainout" ;
    dcterms:title "Merged module src/domain-outer.ttl from branch refs/heads/dev6 with related terms from the fragments domains/zedomain/domainout/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/dev6/domains/zedomain/dovrov/onto.ttl>,
        src:domain-outer ;
    dcterms:identifier "module-domain-outer-modelet-zedomain-dovrov" ;
    dcterms:title "Merged module src/domain-outer.ttl from branch refs/heads/dev6 with related terms from the fragments domains/zedomain/dovrov/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/dev6/domains/zedomain/inconsistence/onto.ttl>,
        src:inconsistent ;
    dcterms:identifier "module-inconsistent-modelet-zedomain-inconsistence" ;
    dcterms:title "Merged module src/inconsistent.ttl from branch refs/heads/dev6 with related terms from the fragments domains/zedomain/inconsistence/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/dev6/domains/zedomain/compatEL/onto.ttl>,
        src:not-el ;
    dcterms:identifier "module-not-el-modelet-zedomain-compatEL" ;
    dcterms:title "Merged module src/not-el.ttl from branch refs/heads/dev6 with related terms from the fragments domains/zedomain/compatEL/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/dev6/domains/zedomain/compatQL/onto.ttl>,
        src:not-ql ;
    dcterms:identifier "module-not-ql-modelet-zedomain-compatQL" ;
    dcterms:title "Merged module src/not-ql.ttl from branch refs/heads/dev6 with related terms from the fragments domains/zedomain/compatQL/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart src:not-rl ;
    dcterms:identifier "module-not-rl" ;
    dcterms:title "Standalone module src/not-rl.ttl from branch refs/heads/dev6"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/dev6/domains/zedomain/compatRL/onto.ttl>,
        src:not-rl ;
    dcterms:identifier "module-not-rl-modelet-zedomain-compatRL" ;
    dcterms:title "Merged module src/not-rl.ttl from branch refs/heads/dev6 with related terms from the fragments domains/zedomain/compatRL/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/dev6/domains/zedomain/rangeout/onto.ttl>,
        src:range-outer ;
    dcterms:identifier "module-range-outer-modelet-zedomain-rangeout" ;
    dcterms:title "Merged module src/range-outer.ttl from branch refs/heads/dev6 with related terms from the fragments domains/zedomain/rangeout/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/dev6/domains/zedomain/differenciation/onto.ttl>,
        src:too-close-terms ;
    dcterms:identifier "module-too-close-terms-modelet-zedomain-differenciation" ;
    dcterms:title "Merged module src/too-close-terms.ttl from branch refs/heads/dev6 with related terms from the fragments domains/zedomain/differenciation/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/dev6/domains/zedomain/label/onto.ttl>,
        src:unlabeled ;
    dcterms:identifier "module-unlabeled-modelet-zedomain-label" ;
    dcterms:title "Merged module src/unlabeled.ttl from branch refs/heads/dev6 with related terms from the fragments domains/zedomain/label/onto.ttl"@en .

_:NicoRobertIn a foaf:Person ;
    schema:mainEntityOfPage <https://github.com/NicoRobertIn> .

_:all-fragments a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/dev6/domains/zedomain/compatEL/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/dev6/domains/zedomain/compatQL/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/dev6/domains/zedomain/compatRL/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/dev6/domains/zedomain/differenciation/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/dev6/domains/zedomain/domainout/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/dev6/domains/zedomain/dovrov/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/dev6/domains/zedomain/inconsistence/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/dev6/domains/zedomain/label/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/dev6/domains/zedomain/rangeout/onto.ttl>,
        src:domain-outer,
        src:inconsistent,
        src:not-el,
        src:not-ql,
        src:not-rl,
        src:range-outer,
        src:too-close-terms,
        src:unlabeled,
        src:unreferenced ;
    dcterms:identifier "all-fragments" ;
    dcterms:title "All the fragments from branch refs/heads/dev6 that are syntaxically correct as well as their recursive imports"@en .

_:all-modules a earl:TestSubject ;
    dcterms:hasPart src:domain-outer,
        src:inconsistent,
        src:not-el,
        src:not-ql,
        src:not-rl,
        src:range-outer,
        src:too-close-terms,
        src:unlabeled,
        src:unreferenced ;
    dcterms:identifier "all-modules" ;
    dcterms:title "All the modules from branch refs/heads/dev6 that are syntaxically correct as well as their recursive imports"@en .

_:module-domain-outer a earl:TestSubject ;
    dcterms:hasPart src:domain-outer ;
    dcterms:identifier "module-domain-outer" ;
    dcterms:title "Standalone module src/domain-outer.ttl from branch refs/heads/dev6"@en .

_:module-inconsistent a earl:TestSubject ;
    dcterms:hasPart src:inconsistent ;
    dcterms:identifier "module-inconsistent" ;
    dcterms:title "Standalone module src/inconsistent.ttl from branch refs/heads/dev6"@en .

_:module-not-el a earl:TestSubject ;
    dcterms:hasPart src:not-el ;
    dcterms:identifier "module-not-el" ;
    dcterms:title "Standalone module src/not-el.ttl from branch refs/heads/dev6"@en .

_:module-not-ql a earl:TestSubject ;
    dcterms:hasPart src:not-ql ;
    dcterms:identifier "module-not-ql" ;
    dcterms:title "Standalone module src/not-ql.ttl from branch refs/heads/dev6"@en .

_:module-range-outer a earl:TestSubject ;
    dcterms:hasPart src:range-outer ;
    dcterms:identifier "module-range-outer" ;
    dcterms:title "Standalone module src/range-outer.ttl from branch refs/heads/dev6"@en .

_:module-too-close-terms a earl:TestSubject ;
    dcterms:hasPart src:too-close-terms ;
    dcterms:identifier "module-too-close-terms" ;
    dcterms:title "Standalone module src/too-close-terms.ttl from branch refs/heads/dev6"@en .

_:module-unlabeled a earl:TestSubject ;
    dcterms:hasPart src:unlabeled ;
    dcterms:identifier "module-unlabeled" ;
    dcterms:title "Standalone module src/unlabeled.ttl from branch refs/heads/dev6"@en .

_:module-unreferenced a earl:TestSubject ;
    dcterms:hasPart src:unreferenced ;
    dcterms:identifier "module-unreferenced" ;
    dcterms:title "Standalone module src/unreferenced.ttl from branch refs/heads/dev6"@en .

_:modelet-zedomain-prefix a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/dev6/domains/zedomain/prefix/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-prefix" ;
    dcterms:title "Standalone modelet domains/zedomain/prefix/onto.ttl from branch refs/heads/dev6"@en .

_:modelet-zedomain-syntax a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/dev6/domains/zedomain/syntax/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-syntax" ;
    dcterms:title "Standalone modelet domains/zedomain/syntax/onto.ttl from branch refs/heads/dev6"@en .

_:module-broken a earl:TestSubject ;
    dcterms:hasPart src:broken ;
    dcterms:identifier "module-broken" ;
    dcterms:title "Standalone module src/broken.ttl from branch refs/heads/dev6"@en .

_:module-unknown-prefix a earl:TestSubject ;
    dcterms:hasPart src:unknown-prefix ;
    dcterms:identifier "module-unknown-prefix" ;
    dcterms:title "Standalone module src/unknown-prefix.ttl from branch refs/heads/dev6"@en .

_:modelet-zedomain-compatEL a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/dev6/domains/zedomain/compatEL/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-compatEL" ;
    dcterms:title "Standalone modelet domains/zedomain/compatEL/onto.ttl from branch refs/heads/dev6"@en .

_:modelet-zedomain-compatQL a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/dev6/domains/zedomain/compatQL/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-compatQL" ;
    dcterms:title "Standalone modelet domains/zedomain/compatQL/onto.ttl from branch refs/heads/dev6"@en .

_:modelet-zedomain-compatRL a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/dev6/domains/zedomain/compatRL/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-compatRL" ;
    dcterms:title "Standalone modelet domains/zedomain/compatRL/onto.ttl from branch refs/heads/dev6"@en .

_:modelet-zedomain-differenciation a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/dev6/domains/zedomain/differenciation/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-differenciation" ;
    dcterms:title "Standalone modelet domains/zedomain/differenciation/onto.ttl from branch refs/heads/dev6"@en .

_:modelet-zedomain-domainout a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/dev6/domains/zedomain/domainout/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-domainout" ;
    dcterms:title "Standalone modelet domains/zedomain/domainout/onto.ttl from branch refs/heads/dev6"@en .

_:modelet-zedomain-dovrov a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/dev6/domains/zedomain/dovrov/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-dovrov" ;
    dcterms:title "Standalone modelet domains/zedomain/dovrov/onto.ttl from branch refs/heads/dev6"@en .

_:modelet-zedomain-inconsistence a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/dev6/domains/zedomain/inconsistence/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-inconsistence" ;
    dcterms:title "Standalone modelet domains/zedomain/inconsistence/onto.ttl from branch refs/heads/dev6"@en .

_:modelet-zedomain-label a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/dev6/domains/zedomain/label/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-label" ;
    dcterms:title "Standalone modelet domains/zedomain/label/onto.ttl from branch refs/heads/dev6"@en .

_:modelet-zedomain-rangeout a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/dev6/domains/zedomain/rangeout/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-rangeout" ;
    dcterms:title "Standalone modelet domains/zedomain/rangeout/onto.ttl from branch refs/heads/dev6"@en .

_:NicoRobertIn-actions a foaf:OnlineAccount ;
    dcterms:date "2024-05-13T15:17:32.144542"^^xsd:dateTime ;
    dcterms:description "Test triggered by @NicoRobertIn by actions trigger"@en ;
    dcterms:title "NicoRobertIn using actions script"@en ;
    earl:mainAssertor _:NicoRobertIn ;
    foaf:member <https://github.com/Wimmics/olivaw/blob/main/olivaw/test/model/suite.py> .

