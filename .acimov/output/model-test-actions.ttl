@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix earl: <http://www.w3.org/ns/earl#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix olivaw-earl: <https://raw.githubusercontent.com/Wimmics/olivaw/main/olivaw/test/olivaw-earl.ttl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix src: <https://github.com/acimov-tools/model-test/blob/refs/heads/main/src/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:beb70fed-7542-421b-a5e0-e7e130e92db6> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notQLTermCauseTransitive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b8079 ;
	sh:value 0 .""",
                        """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""" ] ] ;
    earl:subject _:module-not-ql ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:5b892fcd-bbeb-422b-bd26-e8a360c980f5> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notQLTermCauseTransitive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b26941 ;
	sh:value 0 .""",
                        """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""" ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:04055ca7-f135-48cf-b623-c50e426fc080> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassB> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36381 ;
	sh:value 0 .""",
                        """<urn:uuid:05ed9382-9507-4b55-95c3-800e31ea564a> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/BrokenSubclass> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36381 ;
	sh:value 0 .""",
                        """<urn:uuid:1f40ee3e-5f15-4cb5-b1a6-8e2d574e4a46> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassA> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36381 ;
	sh:value 0 .""",
                        """<urn:uuid:442bc0ae-870c-4a3c-a2d6-1afa94ac015c> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/unlabeledTerm> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36381 ;
	sh:value 0 .""",
                        """<urn:uuid:4613d96e-9de1-4081-944c-6eaac2165965> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/rangeReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36381 ;
	sh:value 0 .""",
                        """<urn:uuid:5e941fea-024b-4007-8bff-3e7767576ea4> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheFirst> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36381 ;
	sh:value 0 .""",
                        """<urn:uuid:5ef74d35-2ceb-4ce8-a6ba-6445b15eefcb> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheSecond> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36381 ;
	sh:value 0 .""",
                        """<urn:uuid:7e22fa3d-3d0d-4f32-8061-b50bb433575a> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/domainReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36381 ;
	sh:value 0 .""",
                        """<urn:uuid:88e77bff-477e-40e0-8b3e-eca0e4b44ac2> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notQLTermCauseTransitive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36381 ;
	sh:value 0 .""",
                        """<urn:uuid:e2c32999-9471-4337-b3c0-f31d4e7443e6> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notELTermCauseAsymmetric> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36381 ;
	sh:value 0 .""",
                        """<urn:uuid:f3275ae1-a02e-4d00-af27-a1876a79c349> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notRLTermCauseReflexive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36381 ;
	sh:value 0 .""",
                        """sand:BrokenSubclass a owl:Class,
        sand:DisjointTheFirst,
        sand:DisjointTheSecond ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy sand:inconsistent ;
    rdfs:subClassOf sand:DisjointTheFirst,
        sand:DisjointTheSecond .""",
                        """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheSecond .""",
                        """sand:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheFirst .""",
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter .""",
                        """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""",
                        """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""",
                        """sand:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy sand:notRL .""",
                        """sand:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy sand:rangeOuter ;
    rdfs:range shacl:NodeShape .""",
                        """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:13ba3884-f0e6-4572-baf7-8d8362963a0b> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/BrokenSubclass> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b10780 ;
	sh:value 0 .""",
                        """<urn:uuid:66bbd656-926d-4ebe-b1b6-3ff0c945293c> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheFirst> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b10780 ;
	sh:value 0 .""",
                        """<urn:uuid:a5948e74-407b-410d-a397-ec9106af45ee> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheSecond> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b10780 ;
	sh:value 0 .""",
                        """sand:BrokenSubclass a sand:DisjointTheFirst,
        sand:DisjointTheSecond ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy sand:inconsistent .""",
                        """sand:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheSecond .""",
                        """sand:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheFirst .""" ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#AllDisjointClasses &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:AllDisjointClasses\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ],
                [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#disjointWith &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notELTermCauseAsymmetric> a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notEL> .""" ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:module-not-el ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notELTermCauseAsymmetric> a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notEL> .""" ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Subject terms not linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Term not referenced to a module"@en ;
                    rdfs:seeAlso """sand:NotReferencedClass a owl:Class ;
    rdfs:label "This class is not linked to a module by a rdfs:isDefinedBy p..." .""" ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    rdfs:seeAlso """at line 3 of <>:
Bad syntax (Prefix "owl:" not bound) at ^ in:
"...b'fix : <https://www.example.org/olivaw/> .\\n\\n:unknownPrefix a '^b'owl:Ontology .\\n\\n:Unknown a owl:Class ;\\n    rdfs:label "This '...\"""" ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:syntax .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:2127bc64-46f9-414c-8e1d-1d2733d14b51> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassA> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b6733 ;
	sh:value 0 .""",
                        """<urn:uuid:887f30be-3b77-4f39-85ba-4c2225b09fc2> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassB> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b6733 ;
	sh:value 0 .""",
                        """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:title "Too close terms"@en ;
                    rdfs:seeAlso """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:title "Terms not labeled"@en ;
                    rdfs:seeAlso """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    rdfs:seeAlso "Encountered \"a\" at line 7, column 23." ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:syntax .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:d320f8c0-abe0-4a69-817d-9009927392f4> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/domainReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b35017 ;
	sh:value 0 .""",
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter .""" ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:all-fragments ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    rdfs:seeAlso sh:NodeShape,
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter ;
    rdfs:subPropertyOf sand:domainReferencingOut ;
    owl:equivalentProperty sand:domainReferencingOut .""" ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    rdfs:seeAlso sh:NodeShape,
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter ;
    rdfs:subPropertyOf sand:domainReferencingOut ;
    owl:equivalentProperty sand:domainReferencingOut .""" ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notQLTermCauseTransitive> a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notQL> .""" ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-not-el ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notQLTermCauseTransitive> a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notQL> .""" ],
                [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notELTermCauseAsymmetric> a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notEL> .""" ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:313d29b1-3d70-4403-bc67-bf5bbf5941aa> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/domainReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b22903 ;
	sh:value 0 .""",
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter .""" ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:5b8ec712-b124-4ce6-9c97-7193ad4e56d1> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/BrokenSubclass> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b16173 ;
	sh:value 0 .""",
                        """<urn:uuid:7ec25a11-e722-43ce-a7de-9350265a48e6> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheFirst> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b16173 ;
	sh:value 0 .""",
                        """<urn:uuid:cbdc5d6e-f546-41da-ae83-55da42583a7a> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheSecond> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b16173 ;
	sh:value 0 .""",
                        """sand:BrokenSubclass a owl:Class,
        sand:DisjointTheFirst,
        sand:DisjointTheSecond ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy sand:inconsistent ;
    rdfs:subClassOf sand:DisjointTheFirst,
        sand:DisjointTheSecond .""",
                        """sand:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheSecond .""",
                        """sand:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheFirst .""" ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-not-ql ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-not-el ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:cda895b8-a327-4991-8cae-899d117bf320> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/rangeReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b29633 ;
	sh:value 0 .""",
                        """sand:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy sand:rangeOuter ;
    rdfs:range shacl:NodeShape .""" ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-not-el ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:2bb87c4c-fd1e-4c33-ad5d-600e909984b1> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/domainReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b24249 ;
	sh:value 0 .""",
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter .""" ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notQLTermCauseTransitive> a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notQL> .""" ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Subject terms not linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Term not referenced to a module"@en ;
                    rdfs:seeAlso """sand:NotReferencedClass a owl:Class ;
    rdfs:label "This class is not linked to a module by a rdfs:isDefinedBy p..." .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:title "Terms not labeled"@en ;
                    rdfs:seeAlso """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:028b505b-bad1-4091-a65f-7f5e0947a2fd> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassA> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b21557 ;
	sh:value 0 .""",
                        """<urn:uuid:b5739a2c-3771-43f9-9875-a97936209c52> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassB> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b21557 ;
	sh:value 0 .""",
                        """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:12ce34a4-75ad-4215-a4be-b0d7c66d3fdf> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/domainReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b33671 ;
	sh:value 0 .""",
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter .""" ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:dca445d5-6c3d-4b61-bb96-f6e2d9bff2e1> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/rangeReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b5387 ;
	sh:value 0 .""",
                        """sand:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy sand:rangeOuter ;
    rdfs:range shacl:NodeShape .""" ] ] ;
    earl:subject _:module-range-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-not-ql ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-not-ql ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:1a737c14-35ba-4b85-a352-6b855c3de50f> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notELTermCauseAsymmetric> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b32325 ;
	sh:value 0 .""",
                        """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""" ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    rdfs:seeAlso sh:NodeShape,
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter ;
    rdfs:subPropertyOf sand:domainReferencingOut ;
    owl:equivalentProperty sand:domainReferencingOut .""" ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:ab49b05c-6efb-481c-979a-fdcb61eda095> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/unlabeledTerm> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b13472 ;
	sh:value 0 .""",
                        """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-not-ql ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notELTermCauseAsymmetric> a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notEL> .""" ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:f4cf498b-56f3-43b3-a4a3-1eaecbd75827> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/unlabeledTerm> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b2695 ;
	sh:value 0 .""",
                        """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#AllDisjointClasses &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:AllDisjointClasses\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ],
                [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#disjointWith &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:9e7765a8-9d6b-4f91-8acb-b501a743d6d7> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/domainReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b9425 ;
	sh:value 0 .""",
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter .""" ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:title "Too close terms"@en ;
                    rdfs:seeAlso """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:title "Terms not labeled"@en ;
                    rdfs:seeAlso """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-not-ql ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    rdfs:seeAlso "Encountered \"a\" at line 7, column 23." ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:syntax .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:title "Too close terms"@en ;
                    rdfs:seeAlso """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#AllDisjointClasses &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:AllDisjointClasses\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ],
                [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#disjointWith &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:d6bcde48-df25-45af-8421-bb3224b2c6c4> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notELTermCauseAsymmetric> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b30979 ;
	sh:value 0 .""",
                        """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""" ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    rdfs:seeAlso sh:NodeShape,
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter ;
    rdfs:subPropertyOf sand:domainReferencingOut ;
    owl:equivalentProperty sand:domainReferencingOut .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:c77038ce-3db7-4132-ac2a-53c86ad29dbf> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notQLTermCauseTransitive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b25595 ;
	sh:value 0 .""",
                        """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""" ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-not-el ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:title "Terms not labeled"@en ;
                    rdfs:seeAlso """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-not-ql ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    rdfs:seeAlso """at line 3 of <>:
Bad syntax (Prefix "owl:" not bound) at ^ in:
"...b'fix : <https://www.example.org/olivaw/> .\\n\\n:unknownPrefix a '^b'owl:Ontology .\\n\\n:Unknown a owl:Class ;\\n    rdfs:label "This '...\"""" ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:syntax .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-not-el ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:0b8db21c-0246-42bc-8379-e0311c95c23c> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notRLTermCauseReflexive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b18865 ;
	sh:value 0 .""",
                        """sand:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy sand:notRL .""" ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:9e86976d-5f3c-4d28-a836-b456bac69e66> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassA> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b20211 ;
	sh:value 0 .""",
                        """<urn:uuid:d15982a3-cbe8-47ef-92ec-bfc36be4d120> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassB> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b20211 ;
	sh:value 0 .""",
                        """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:dc5ffc27-efdd-4688-a9ca-23fcdf1b89b9> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notELTermCauseAsymmetric> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b4041 ;
	sh:value 0 .""",
                        """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""" ] ] ;
    earl:subject _:module-not-el ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:1cef9c8d-dce8-4851-b91f-3e815a8645b7> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notRLTermCauseReflexive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b17519 ;
	sh:value 0 .""",
                        """sand:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy sand:notRL .""" ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:title "Too close terms"@en ;
                    rdfs:seeAlso """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    rdfs:seeAlso sh:NodeShape,
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter ;
    rdfs:subPropertyOf sand:domainReferencingOut ;
    owl:equivalentProperty sand:domainReferencingOut .""" ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:3f2a0b39-f5e1-47c0-9dc8-be592eadbbbe> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheSecond> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b14818 ;
	sh:value 0 .""",
                        """<urn:uuid:776e71ec-7d61-449b-b855-6d6f3b22d90b> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/BrokenSubclass> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b14818 ;
	sh:value 0 .""",
                        """<urn:uuid:9c984ffc-0ea4-41c0-9c22-cc745f8da625> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheFirst> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b14818 ;
	sh:value 0 .""",
                        """sand:BrokenSubclass a owl:Class ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy sand:inconsistent ;
    rdfs:subClassOf sand:DisjointTheFirst,
        sand:DisjointTheSecond .""",
                        """sand:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheSecond .""",
                        """sand:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheFirst .""" ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notQLTermCauseTransitive> a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notQL> .""" ],
                [ a earl:Pass ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:module-not-ql ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    rdfs:seeAlso sh:NodeShape,
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter ;
    rdfs:subPropertyOf sand:domainReferencingOut ;
    owl:equivalentProperty sand:domainReferencingOut .""" ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:4308d288-36c5-422e-9377-816484ed4d31> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/unlabeledTerm> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b12126 ;
	sh:value 0 .""",
                        """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:497f9d4d-6c25-40d4-a694-fe12681325c2> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/rangeReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b28287 ;
	sh:value 0 .""",
                        """sand:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy sand:rangeOuter ;
    rdfs:range shacl:NodeShape .""" ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-not-el ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:TestSubject ;
    dcterms:hasPart src:domain-outer,
        src:inconsistent,
        src:not-el,
        src:not-ql,
        src:not-rl,
        src:range-outer,
        src:too-close-terms,
        src:unlabeled,
        src:unreferenced ;
    dcterms:identifier "all-modules" ;
    dcterms:title "All the modules from branch refs/heads/main that are syntaxically correct as well as their recursive imports"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/domainout/onto.ttl>,
        src:domain-outer ;
    dcterms:identifier "module-domain-outer-modelet-zedomain-domainout" ;
    dcterms:title "Merged module src/domain-outer.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/domainout/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/dovrov/onto.ttl>,
        src:domain-outer ;
    dcterms:identifier "module-domain-outer-modelet-zedomain-dovrov" ;
    dcterms:title "Merged module src/domain-outer.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/dovrov/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/inconsistence/onto.ttl>,
        src:inconsistent ;
    dcterms:identifier "module-inconsistent-modelet-zedomain-inconsistence" ;
    dcterms:title "Merged module src/inconsistent.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/inconsistence/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatEL/onto.ttl>,
        src:not-el ;
    dcterms:identifier "module-not-el-modelet-zedomain-compatEL" ;
    dcterms:title "Merged module src/not-el.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/compatEL/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatQL/onto.ttl>,
        src:not-ql ;
    dcterms:identifier "module-not-ql-modelet-zedomain-compatQL" ;
    dcterms:title "Merged module src/not-ql.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/compatQL/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart src:not-rl ;
    dcterms:identifier "module-not-rl" ;
    dcterms:title "Standalone module src/not-rl.ttl from branch refs/heads/main"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatRL/onto.ttl>,
        src:not-rl ;
    dcterms:identifier "module-not-rl-modelet-zedomain-compatRL" ;
    dcterms:title "Merged module src/not-rl.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/compatRL/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/rangeout/onto.ttl>,
        src:range-outer ;
    dcterms:identifier "module-range-outer-modelet-zedomain-rangeout" ;
    dcterms:title "Merged module src/range-outer.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/rangeout/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/differenciation/onto.ttl>,
        src:too-close-terms ;
    dcterms:identifier "module-too-close-terms-modelet-zedomain-differenciation" ;
    dcterms:title "Merged module src/too-close-terms.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/differenciation/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/label/onto.ttl>,
        src:unlabeled ;
    dcterms:identifier "module-unlabeled-modelet-zedomain-label" ;
    dcterms:title "Merged module src/unlabeled.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/label/onto.ttl"@en .

_:NicoRobertIn a foaf:Person ;
    schema:mainEntityOfPage <https://github.com/NicoRobertIn> .

_:all-fragments a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatEL/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatQL/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatRL/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/differenciation/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/domainout/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/dovrov/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/inconsistence/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/label/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/rangeout/onto.ttl>,
        src:domain-outer,
        src:inconsistent,
        src:not-el,
        src:not-ql,
        src:not-rl,
        src:range-outer,
        src:too-close-terms,
        src:unlabeled,
        src:unreferenced ;
    dcterms:identifier "all-fragments" ;
    dcterms:title "All the fragments from branch refs/heads/main that are syntaxically correct as well as their recursive imports"@en .

_:module-domain-outer a earl:TestSubject ;
    dcterms:hasPart src:domain-outer ;
    dcterms:identifier "module-domain-outer" ;
    dcterms:title "Standalone module src/domain-outer.ttl from branch refs/heads/main"@en .

_:module-inconsistent a earl:TestSubject ;
    dcterms:hasPart src:inconsistent ;
    dcterms:identifier "module-inconsistent" ;
    dcterms:title "Standalone module src/inconsistent.ttl from branch refs/heads/main"@en .

_:module-not-el a earl:TestSubject ;
    dcterms:hasPart src:not-el ;
    dcterms:identifier "module-not-el" ;
    dcterms:title "Standalone module src/not-el.ttl from branch refs/heads/main"@en .

_:module-not-ql a earl:TestSubject ;
    dcterms:hasPart src:not-ql ;
    dcterms:identifier "module-not-ql" ;
    dcterms:title "Standalone module src/not-ql.ttl from branch refs/heads/main"@en .

_:module-range-outer a earl:TestSubject ;
    dcterms:hasPart src:range-outer ;
    dcterms:identifier "module-range-outer" ;
    dcterms:title "Standalone module src/range-outer.ttl from branch refs/heads/main"@en .

_:module-too-close-terms a earl:TestSubject ;
    dcterms:hasPart src:too-close-terms ;
    dcterms:identifier "module-too-close-terms" ;
    dcterms:title "Standalone module src/too-close-terms.ttl from branch refs/heads/main"@en .

_:module-unlabeled a earl:TestSubject ;
    dcterms:hasPart src:unlabeled ;
    dcterms:identifier "module-unlabeled" ;
    dcterms:title "Standalone module src/unlabeled.ttl from branch refs/heads/main"@en .

_:module-unreferenced a earl:TestSubject ;
    dcterms:hasPart src:unreferenced ;
    dcterms:identifier "module-unreferenced" ;
    dcterms:title "Standalone module src/unreferenced.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-prefix a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/prefix/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-prefix" ;
    dcterms:title "Standalone modelet domains/zedomain/prefix/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-syntax a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/syntax/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-syntax" ;
    dcterms:title "Standalone modelet domains/zedomain/syntax/onto.ttl from branch refs/heads/main"@en .

_:module-broken a earl:TestSubject ;
    dcterms:hasPart src:broken ;
    dcterms:identifier "module-broken" ;
    dcterms:title "Standalone module src/broken.ttl from branch refs/heads/main"@en .

_:module-unknown-prefix a earl:TestSubject ;
    dcterms:hasPart src:unknown-prefix ;
    dcterms:identifier "module-unknown-prefix" ;
    dcterms:title "Standalone module src/unknown-prefix.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-compatEL a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatEL/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-compatEL" ;
    dcterms:title "Standalone modelet domains/zedomain/compatEL/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-compatQL a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatQL/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-compatQL" ;
    dcterms:title "Standalone modelet domains/zedomain/compatQL/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-compatRL a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatRL/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-compatRL" ;
    dcterms:title "Standalone modelet domains/zedomain/compatRL/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-differenciation a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/differenciation/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-differenciation" ;
    dcterms:title "Standalone modelet domains/zedomain/differenciation/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-domainout a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/domainout/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-domainout" ;
    dcterms:title "Standalone modelet domains/zedomain/domainout/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-dovrov a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/dovrov/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-dovrov" ;
    dcterms:title "Standalone modelet domains/zedomain/dovrov/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-inconsistence a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/inconsistence/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-inconsistence" ;
    dcterms:title "Standalone modelet domains/zedomain/inconsistence/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-label a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/label/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-label" ;
    dcterms:title "Standalone modelet domains/zedomain/label/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-rangeout a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/rangeout/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-rangeout" ;
    dcterms:title "Standalone modelet domains/zedomain/rangeout/onto.ttl from branch refs/heads/main"@en .

_:NicoRobertIn-actions a foaf:OnlineAccount ;
    dcterms:date "2024-05-12T23:55:32.746569"^^xsd:dateTime ;
    dcterms:description "Test triggered by @NicoRobertIn by actions trigger"@en ;
    dcterms:title "NicoRobertIn using actions script"@en ;
    earl:mainAssertor _:NicoRobertIn ;
    foaf:member <https://github.com/Wimmics/olivaw/blob/main/olivaw/test/model/suite.py> .

