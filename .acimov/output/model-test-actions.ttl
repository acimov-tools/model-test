@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix earl: <http://www.w3.org/ns/earl#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix olivaw-earl: <https://raw.githubusercontent.com/Wimmics/olivaw/main/olivaw/test/olivaw-earl.ttl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix src: <https://github.com/acimov-tools/model-test/blob/refs/heads/main/src/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:title "Terms not labeled"@en ;
                    rdfs:seeAlso """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:2fbeb9d9-46fe-4ff5-9ca9-acdf6e58cebf> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notRLTermCauseReflexive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b18865 ;
	sh:value 0 .""",
                        """sand:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy sand:notRL .""" ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:title "Terms not labeled"@en ;
                    rdfs:seeAlso """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:25801e8a-f383-4263-aeff-6242089b1759> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheFirst> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b10780 ;
	sh:value 0 .""",
                        """<urn:uuid:4ea7f827-9bba-470f-802d-824fbf1f4c04> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/BrokenSubclass> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b10780 ;
	sh:value 0 .""",
                        """<urn:uuid:a7fb309e-6a49-43ae-9433-430651697539> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheSecond> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b10780 ;
	sh:value 0 .""",
                        """sand:BrokenSubclass a sand:DisjointTheFirst,
        sand:DisjointTheSecond ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy sand:inconsistent .""",
                        """sand:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheSecond .""",
                        """sand:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheFirst .""" ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:0689d1fc-6fae-4130-8808-334351309806> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/unlabeledTerm> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b13472 ;
	sh:value 0 .""",
                        """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notQLTermCauseTransitive> a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notQL> .""" ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notELTermCauseAsymmetric> a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notEL> .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:title "Terms not labeled"@en ;
                    rdfs:seeAlso """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Subject terms not linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Term not referenced to a module"@en ;
                    rdfs:seeAlso """sand:NotReferencedClass a owl:Class ;
    rdfs:label "This class is not linked to a module by a rdfs:isDefinedBy p..." .""" ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-not-el ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:title "Too close terms"@en ;
                    rdfs:seeAlso """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#disjointWith &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ],
                [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#AllDisjointClasses &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:AllDisjointClasses\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:820b4c22-9a14-40ab-bd31-56da092c700c> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassA> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b20211 ;
	sh:value 0 .""",
                        """<urn:uuid:f4688639-9e15-494b-ae86-145f3a22ff96> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassB> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b20211 ;
	sh:value 0 .""",
                        """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:f1ca45a7-7f85-45f1-930c-8dbfc50075df> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notELTermCauseAsymmetric> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b32325 ;
	sh:value 0 .""",
                        """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""" ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:title "Too close terms"@en ;
                    rdfs:seeAlso """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:543f2153-e546-4ce6-8f72-2149e728d408> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notRLTermCauseReflexive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b17519 ;
	sh:value 0 .""",
                        """sand:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy sand:notRL .""" ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:5fc9061c-8c90-493d-a1c7-7b28395457c2> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheSecond> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b16173 ;
	sh:value 0 .""",
                        """<urn:uuid:75382a0e-dfe6-4065-9e1c-37dce8823737> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheFirst> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b16173 ;
	sh:value 0 .""",
                        """<urn:uuid:81968de1-de9c-40c2-a551-f2a3f378d3a2> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/BrokenSubclass> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b16173 ;
	sh:value 0 .""",
                        """sand:BrokenSubclass a owl:Class,
        sand:DisjointTheFirst,
        sand:DisjointTheSecond ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy sand:inconsistent ;
    rdfs:subClassOf sand:DisjointTheFirst,
        sand:DisjointTheSecond .""",
                        """sand:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheSecond .""",
                        """sand:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheFirst .""" ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:21124f87-1592-4915-ac5c-de59b76383c7> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/domainReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b35017 ;
	sh:value 0 .""",
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter .""" ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notELTermCauseAsymmetric> a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notEL> .""" ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:module-not-el ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:title "Terms not labeled"@en ;
                    rdfs:seeAlso """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:title "Too close terms"@en ;
                    rdfs:seeAlso """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    rdfs:seeAlso sh:NodeShape,
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter ;
    rdfs:subPropertyOf sand:domainReferencingOut ;
    owl:equivalentProperty sand:domainReferencingOut .""" ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-not-el ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:title "Too close terms"@en ;
                    rdfs:seeAlso """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-not-ql ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:26a11260-d34a-47eb-9207-a2359a8ed093> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/rangeReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b28287 ;
	sh:value 0 .""",
                        """sand:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy sand:rangeOuter ;
    rdfs:range shacl:NodeShape .""" ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-not-el ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:004069b0-90e0-4ca0-90e6-a68d2c100b1e> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheFirst> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b14818 ;
	sh:value 0 .""",
                        """<urn:uuid:408dddbe-a6a6-4b88-b6eb-00fb585320a5> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheSecond> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b14818 ;
	sh:value 0 .""",
                        """<urn:uuid:bd07c077-d4a5-4299-8b36-a8686cfa358b> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/BrokenSubclass> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b14818 ;
	sh:value 0 .""",
                        """sand:BrokenSubclass a owl:Class ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy sand:inconsistent ;
    rdfs:subClassOf sand:DisjointTheFirst,
        sand:DisjointTheSecond .""",
                        """sand:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheSecond .""",
                        """sand:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheFirst .""" ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:0763aa29-2581-46fb-b453-950fdf6c508e> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notELTermCauseAsymmetric> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b4041 ;
	sh:value 0 .""",
                        """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""" ] ] ;
    earl:subject _:module-not-el ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:b0607e54-1f2d-4072-b4e9-52ffdac87ed5> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notELTermCauseAsymmetric> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b30979 ;
	sh:value 0 .""",
                        """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""" ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    rdfs:seeAlso "Encountered \"a\" at line 7, column 23." ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:syntax .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    rdfs:seeAlso """at line 3 of <>:
Bad syntax (Prefix "owl:" not bound) at ^ in:
"...b'fix : <https://www.example.org/olivaw/> .\\n\\n:unknownPrefix a '^b'owl:Ontology .\\n\\n:Unknown a owl:Class ;\\n    rdfs:label "This '...\"""" ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:syntax .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notELTermCauseAsymmetric> a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notEL> .""" ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-not-el ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notELTermCauseAsymmetric> a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notEL> .""" ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-not-el ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:89f966e4-9fe2-4318-afc6-d9e7451f2201> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notQLTermCauseTransitive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b25595 ;
	sh:value 0 .""",
                        """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""" ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:53ee50fe-d32f-492f-9e4c-e40dc5c7b6c7> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/domainReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b9425 ;
	sh:value 0 .""",
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter .""" ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-not-ql ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    rdfs:seeAlso sh:NodeShape,
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter ;
    rdfs:subPropertyOf sand:domainReferencingOut ;
    owl:equivalentProperty sand:domainReferencingOut .""" ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    rdfs:seeAlso """at line 3 of <>:
Bad syntax (Prefix "owl:" not bound) at ^ in:
"...b'fix : <https://www.example.org/olivaw/> .\\n\\n:unknownPrefix a '^b'owl:Ontology .\\n\\n:Unknown a owl:Class ;\\n    rdfs:label "This '...\"""" ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:syntax .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:265c8704-f4d8-40a6-abfb-110ea3f43b91> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/unlabeledTerm> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b2695 ;
	sh:value 0 .""",
                        """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:130d77d0-76f1-4e63-a75d-752c10677ccb> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/rangeReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36372 ;
	sh:value 0 .""",
                        """<urn:uuid:2bb4c501-9f43-4015-ad6e-3b8bdbe750ae> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassB> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36372 ;
	sh:value 0 .""",
                        """<urn:uuid:3ea3a145-bfab-4c9f-8b48-4690af6df8a9> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/BrokenSubclass> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36372 ;
	sh:value 0 .""",
                        """<urn:uuid:55371d46-4992-4b45-99ee-095e89d5e630> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notQLTermCauseTransitive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36372 ;
	sh:value 0 .""",
                        """<urn:uuid:76b56ba4-0898-401e-9431-fb8e0a0d4923> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/domainReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36372 ;
	sh:value 0 .""",
                        """<urn:uuid:9e1fc698-e1a9-456f-a800-94a25474d8ae> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notRLTermCauseReflexive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36372 ;
	sh:value 0 .""",
                        """<urn:uuid:a7a7adaf-2591-48d7-879b-815d52c32b4d> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheFirst> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36372 ;
	sh:value 0 .""",
                        """<urn:uuid:d1fb48dc-6969-4240-b575-33877086bbf3> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notELTermCauseAsymmetric> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36372 ;
	sh:value 0 .""",
                        """<urn:uuid:db3880bb-e6fe-4402-9f7e-4d295c72a5ad> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassA> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36372 ;
	sh:value 0 .""",
                        """<urn:uuid:e20d3966-8067-41e5-863e-5e3c6d07dba3> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheSecond> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36372 ;
	sh:value 0 .""",
                        """<urn:uuid:ec0bc5e1-5e33-4a00-9a04-11f1c0f1e8c8> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/unlabeledTerm> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36372 ;
	sh:value 0 .""",
                        """sand:BrokenSubclass a sand:DisjointTheFirst,
        sand:DisjointTheSecond ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy sand:inconsistent .""",
                        """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheSecond .""",
                        """sand:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheFirst .""",
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter .""",
                        """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""",
                        """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""",
                        """sand:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy sand:notRL .""",
                        """sand:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy sand:rangeOuter ;
    rdfs:range shacl:NodeShape .""",
                        """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:edcd9adf-ba90-44d4-a2bb-22468f85ee61> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/unlabeledTerm> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b12126 ;
	sh:value 0 .""",
                        """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    rdfs:seeAlso sh:NodeShape,
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter ;
    rdfs:subPropertyOf sand:domainReferencingOut ;
    owl:equivalentProperty sand:domainReferencingOut .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    rdfs:seeAlso "Encountered \"a\" at line 9, column 23." ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:syntax .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:67a895fd-c988-4d5a-af5a-5158d9e64ef2> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notQLTermCauseTransitive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b8079 ;
	sh:value 0 .""",
                        """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""" ] ] ;
    earl:subject _:module-not-ql ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:706cb131-9fa1-4b8c-b6b3-b9484a658c1f> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/rangeReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b5387 ;
	sh:value 0 .""",
                        """sand:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy sand:rangeOuter ;
    rdfs:range shacl:NodeShape .""" ] ] ;
    earl:subject _:module-range-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notQLTermCauseTransitive> a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notQL> .""" ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:module-not-ql ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:9ad5ae78-7d89-40cf-bf31-40e4c8b70647> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/domainReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b22903 ;
	sh:value 0 .""",
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter .""" ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    rdfs:seeAlso sh:NodeShape,
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter ;
    rdfs:subPropertyOf sand:domainReferencingOut ;
    owl:equivalentProperty sand:domainReferencingOut .""" ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#AllDisjointClasses &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:AllDisjointClasses\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ],
                [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#disjointWith &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:50e05be0-a300-484e-b389-8fc98889077a> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassB> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b21557 ;
	sh:value 0 .""",
                        """<urn:uuid:7f0681f7-46c6-448d-addc-0f8ca1805239> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassA> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b21557 ;
	sh:value 0 .""",
                        """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:8bdb1083-c3f4-45ad-b3bd-e73b2992c5e6> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notQLTermCauseTransitive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b26941 ;
	sh:value 0 .""",
                        """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""" ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notQLTermCauseTransitive> a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notQL> .""" ],
                [ a earl:Pass ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-not-ql ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:title "Too close terms"@en ;
                    rdfs:seeAlso """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    rdfs:seeAlso sh:NodeShape,
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter ;
    rdfs:subPropertyOf sand:domainReferencingOut ;
    owl:equivalentProperty sand:domainReferencingOut .""" ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Subject terms not linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Term not referenced to a module"@en ;
                    rdfs:seeAlso """sand:NotReferencedClass a owl:Class ;
    rdfs:label "This class is not linked to a module by a rdfs:isDefinedBy p..." .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:24eacbbc-6fd6-4333-8758-36e7af6aa4c7> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/domainReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b33671 ;
	sh:value 0 .""",
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter .""" ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:08831d7b-43a6-4ac2-9a33-525781b89f15> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/unlabeledTerm> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b37727 ;
	sh:value 0 .""",
                        """<urn:uuid:2972017c-92e9-4bdd-8658-4c1c98b06bf5> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/rangeReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b37727 ;
	sh:value 0 .""",
                        """<urn:uuid:45571521-80c6-4205-8da7-b55419abb658> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/BrokenSubclass> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b37727 ;
	sh:value 0 .""",
                        """<urn:uuid:740bc49a-5e4b-4652-9c79-e6614107e368> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/domainReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b37727 ;
	sh:value 0 .""",
                        """<urn:uuid:84539b27-5a42-42f5-a670-e24e8f885151> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassB> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b37727 ;
	sh:value 0 .""",
                        """<urn:uuid:88f60a60-f7aa-42de-aa26-d81e77f6754c> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notELTermCauseAsymmetric> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b37727 ;
	sh:value 0 .""",
                        """<urn:uuid:b5c8b354-5bba-4d68-910c-ed014fbeda49> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notRLTermCauseReflexive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b37727 ;
	sh:value 0 .""",
                        """<urn:uuid:b7fe4f17-fa46-44a9-9e63-33d576b90041> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassA> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b37727 ;
	sh:value 0 .""",
                        """<urn:uuid:dafb90c9-022c-4fa6-84d2-8452bd77b72d> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheFirst> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b37727 ;
	sh:value 0 .""",
                        """<urn:uuid:de7e506f-2b96-43c5-8356-60edff3e1011> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheSecond> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b37727 ;
	sh:value 0 .""",
                        """<urn:uuid:f947f8b4-686f-4722-bef7-19b6cba6587f> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notQLTermCauseTransitive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b37727 ;
	sh:value 0 .""",
                        """sand:BrokenSubclass a owl:Class,
        sand:DisjointTheFirst,
        sand:DisjointTheSecond ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy sand:inconsistent ;
    rdfs:subClassOf sand:DisjointTheFirst,
        sand:DisjointTheSecond .""",
                        """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheSecond .""",
                        """sand:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheFirst .""",
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter .""",
                        """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""",
                        """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""",
                        """sand:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy sand:notRL .""",
                        """sand:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy sand:rangeOuter ;
    rdfs:range shacl:NodeShape .""",
                        """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:all-fragments ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notQLTermCauseTransitive> a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notQL> .""" ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-not-ql ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#disjointWith &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ],
                [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#AllDisjointClasses &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:AllDisjointClasses\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:61998b96-33f7-42b2-82f1-8d5b3885efac> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/rangeReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b29633 ;
	sh:value 0 .""",
                        """sand:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy sand:rangeOuter ;
    rdfs:range shacl:NodeShape .""" ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-not-ql ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    rdfs:seeAlso sh:NodeShape,
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter ;
    rdfs:subPropertyOf sand:domainReferencingOut ;
    owl:equivalentProperty sand:domainReferencingOut .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    rdfs:seeAlso sh:NodeShape,
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter ;
    rdfs:subPropertyOf sand:domainReferencingOut ;
    owl:equivalentProperty sand:domainReferencingOut .""" ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:title "Terms not labeled"@en ;
                    rdfs:seeAlso """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#AllDisjointClasses &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:AllDisjointClasses\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ],
                [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#disjointWith &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-not-ql ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:3ff0baa5-d800-45a7-b0a8-ff421aee6cd8> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/domainReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b24249 ;
	sh:value 0 .""",
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter .""" ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-not-el ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:0836719c-1941-404a-a599-8321163e3a8b> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassA> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b6733 ;
	sh:value 0 .""",
                        """<urn:uuid:ab63b860-e10c-4da0-9fa3-9a476c1557aa> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassB> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b6733 ;
	sh:value 0 .""",
                        """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notELTermCauseAsymmetric> a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notEL> .""" ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notQLTermCauseTransitive> a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notQL> .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Subject terms not linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Term not referenced to a module"@en ;
                    rdfs:seeAlso """sand:NotReferencedClass a owl:Class ;
    rdfs:label "This class is not linked to a module by a rdfs:isDefinedBy p..." .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:all-modules ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/domainout/onto.ttl>,
        src:domain-outer ;
    dcterms:identifier "module-domain-outer-modelet-zedomain-domainout" ;
    dcterms:title "Merged module src/domain-outer.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/domainout/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/dovrov/onto.ttl>,
        src:domain-outer ;
    dcterms:identifier "module-domain-outer-modelet-zedomain-dovrov" ;
    dcterms:title "Merged module src/domain-outer.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/dovrov/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/inconsistence/onto.ttl>,
        src:inconsistent ;
    dcterms:identifier "module-inconsistent-modelet-zedomain-inconsistence" ;
    dcterms:title "Merged module src/inconsistent.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/inconsistence/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatEL/onto.ttl>,
        src:not-el ;
    dcterms:identifier "module-not-el-modelet-zedomain-compatEL" ;
    dcterms:title "Merged module src/not-el.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/compatEL/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatQL/onto.ttl>,
        src:not-ql ;
    dcterms:identifier "module-not-ql-modelet-zedomain-compatQL" ;
    dcterms:title "Merged module src/not-ql.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/compatQL/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart src:not-rl ;
    dcterms:identifier "module-not-rl" ;
    dcterms:title "Standalone module src/not-rl.ttl from branch refs/heads/main"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatRL/onto.ttl>,
        src:not-rl ;
    dcterms:identifier "module-not-rl-modelet-zedomain-compatRL" ;
    dcterms:title "Merged module src/not-rl.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/compatRL/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/rangeout/onto.ttl>,
        src:range-outer ;
    dcterms:identifier "module-range-outer-modelet-zedomain-rangeout" ;
    dcterms:title "Merged module src/range-outer.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/rangeout/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/differenciation/onto.ttl>,
        src:too-close-terms ;
    dcterms:identifier "module-too-close-terms-modelet-zedomain-differenciation" ;
    dcterms:title "Merged module src/too-close-terms.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/differenciation/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/label/onto.ttl>,
        src:unlabeled ;
    dcterms:identifier "module-unlabeled-modelet-zedomain-label" ;
    dcterms:title "Merged module src/unlabeled.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/label/onto.ttl"@en .

_:NicoRobertIn a foaf:Person ;
    schema:mainEntityOfPage <https://github.com/NicoRobertIn> .

_:all-fragments a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatEL/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatQL/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatRL/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/differenciation/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/domainout/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/dovrov/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/inconsistence/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/label/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/rangeout/onto.ttl>,
        src:domain-outer,
        src:inconsistent,
        src:not-el,
        src:not-ql,
        src:not-rl,
        src:range-outer,
        src:too-close-terms,
        src:unlabeled,
        src:unreferenced ;
    dcterms:identifier "all-fragments" ;
    dcterms:title "All the fragments from branch refs/heads/main that are syntaxically correct as well as their recursive imports"@en .

_:all-modules a earl:TestSubject ;
    dcterms:hasPart src:domain-outer,
        src:inconsistent,
        src:not-el,
        src:not-ql,
        src:not-rl,
        src:range-outer,
        src:too-close-terms,
        src:unlabeled,
        src:unreferenced ;
    dcterms:identifier "all-modules" ;
    dcterms:title "All the modules from branch refs/heads/main that are syntaxically correct as well as their recursive imports"@en .

_:module-domain-outer a earl:TestSubject ;
    dcterms:hasPart src:domain-outer ;
    dcterms:identifier "module-domain-outer" ;
    dcterms:title "Standalone module src/domain-outer.ttl from branch refs/heads/main"@en .

_:module-inconsistent a earl:TestSubject ;
    dcterms:hasPart src:inconsistent ;
    dcterms:identifier "module-inconsistent" ;
    dcterms:title "Standalone module src/inconsistent.ttl from branch refs/heads/main"@en .

_:module-not-el a earl:TestSubject ;
    dcterms:hasPart src:not-el ;
    dcterms:identifier "module-not-el" ;
    dcterms:title "Standalone module src/not-el.ttl from branch refs/heads/main"@en .

_:module-not-ql a earl:TestSubject ;
    dcterms:hasPart src:not-ql ;
    dcterms:identifier "module-not-ql" ;
    dcterms:title "Standalone module src/not-ql.ttl from branch refs/heads/main"@en .

_:module-range-outer a earl:TestSubject ;
    dcterms:hasPart src:range-outer ;
    dcterms:identifier "module-range-outer" ;
    dcterms:title "Standalone module src/range-outer.ttl from branch refs/heads/main"@en .

_:module-too-close-terms a earl:TestSubject ;
    dcterms:hasPart src:too-close-terms ;
    dcterms:identifier "module-too-close-terms" ;
    dcterms:title "Standalone module src/too-close-terms.ttl from branch refs/heads/main"@en .

_:module-unlabeled a earl:TestSubject ;
    dcterms:hasPart src:unlabeled ;
    dcterms:identifier "module-unlabeled" ;
    dcterms:title "Standalone module src/unlabeled.ttl from branch refs/heads/main"@en .

_:module-unreferenced a earl:TestSubject ;
    dcterms:hasPart src:unreferenced ;
    dcterms:identifier "module-unreferenced" ;
    dcterms:title "Standalone module src/unreferenced.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-prefix a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/prefix/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-prefix" ;
    dcterms:title "Standalone modelet domains/zedomain/prefix/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-syntax a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/syntax/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-syntax" ;
    dcterms:title "Standalone modelet domains/zedomain/syntax/onto.ttl from branch refs/heads/main"@en .

_:module-broken a earl:TestSubject ;
    dcterms:hasPart src:broken ;
    dcterms:identifier "module-broken" ;
    dcterms:title "Standalone module src/broken.ttl from branch refs/heads/main"@en .

_:module-unknown-prefix a earl:TestSubject ;
    dcterms:hasPart src:unknown-prefix ;
    dcterms:identifier "module-unknown-prefix" ;
    dcterms:title "Standalone module src/unknown-prefix.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-compatEL a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatEL/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-compatEL" ;
    dcterms:title "Standalone modelet domains/zedomain/compatEL/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-compatQL a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatQL/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-compatQL" ;
    dcterms:title "Standalone modelet domains/zedomain/compatQL/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-compatRL a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatRL/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-compatRL" ;
    dcterms:title "Standalone modelet domains/zedomain/compatRL/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-differenciation a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/differenciation/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-differenciation" ;
    dcterms:title "Standalone modelet domains/zedomain/differenciation/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-domainout a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/domainout/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-domainout" ;
    dcterms:title "Standalone modelet domains/zedomain/domainout/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-dovrov a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/dovrov/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-dovrov" ;
    dcterms:title "Standalone modelet domains/zedomain/dovrov/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-inconsistence a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/inconsistence/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-inconsistence" ;
    dcterms:title "Standalone modelet domains/zedomain/inconsistence/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-label a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/label/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-label" ;
    dcterms:title "Standalone modelet domains/zedomain/label/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-rangeout a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/rangeout/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-rangeout" ;
    dcterms:title "Standalone modelet domains/zedomain/rangeout/onto.ttl from branch refs/heads/main"@en .

_:NicoRobertIn-actions a foaf:OnlineAccount ;
    dcterms:date "2024-05-13T15:17:01.631163"^^xsd:dateTime ;
    dcterms:description "Test triggered by @NicoRobertIn by actions trigger"@en ;
    dcterms:title "NicoRobertIn using actions script"@en ;
    earl:mainAssertor _:NicoRobertIn ;
    foaf:member <https://github.com/Wimmics/olivaw/blob/main/olivaw/test/model/suite.py> .

