@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix earl: <http://www.w3.org/ns/earl#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix git-platform: <https://github.com/> .
@prefix olivaw: <https://ns.inria.fr/olivaw#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<file:////home/runner/work/model-test/model-test/.acimov/output/model-test-actions.md> a prov:Entity ;
    prov:generatedAtTime "2024-09-20T08:52:31.951336"^^xsd:dateTime ;
    prov:qualifiedGeneration [ a prov:Generation ;
            prov:activity _:assertor ;
            olivaw:generatedAs olivaw:markdown_report ] .

<file:////home/runner/work/model-test/model-test/.acimov/output/model-test-actions.ttl> a prov:Entity ;
    prov:generatedAtTime "2024-09-20T08:52:31.951336"^^xsd:dateTime ;
    prov:qualifiedGeneration [ a prov:Generation ;
            prov:activity _:assertor ;
            olivaw:generatedAs olivaw:turtle_report ] .

<https://github.com/Wimmics/olivaw/blob/v0.0.6/olivaw/test/model/suite.py> a olivaw:VersionedEntity ;
    dcterms:hasVersion "v0.0.6" ;
    olivaw:hostedAt <https://github.com/Wimmics/olivaw/blob/main/olivaw/test/model/suite.py> .

<https://github.com/acimov-tools/model-test/tree/00317205ded284b31fa0b43eb0b0b97efc97ce83> a olivaw:VersionedEntity ;
    dcterms:date "2024-09-20T10:51:13"^^xsd:dateTime ;
    dcterms:hasVersion "00317205ded284b31fa0b43eb0b0b97efc97ce83" ;
    olivaw:hostedAt <https://github.com/acimov-tools/model-test> ;
    olivaw:isOnBranch "main" ;
    olivaw:patchedBy _:tester .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter ;
    rdfs:subPropertyOf :domainReferencingOut ;
    owl:equivalentProperty :domainReferencingOut .""" ;
                    earl:pointer sh:NodeShape ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    earl:info """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""" ],
                [ a earl:Pass ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Custom test  could not be run because the subject could not be loaded in the engine"@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw:comment-format .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    earl:info """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""" ],
                [ a olivaw:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    earl:info """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""" ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy :notQL .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:ea699d4a-3a30-43ed-841b-91c18cd138ca a sh:ValidationResult ;
    sh:focusNode sand:notQLTermCauseTransitive ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter ;
    rdfs:subPropertyOf :domainReferencingOut ;
    owl:equivalentProperty :domainReferencingOut .""" ;
                    earl:pointer sh:NodeShape ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    earl:info """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""" ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Custom test  could not be run because the subject could not be loaded in the engine"@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw:comment-format .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:3d0a2043-c5f6-4d96-8375-a5a0277a5075 a sh:ValidationResult ;
    sh:focusNode sand:ClassB ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:a2679d7e-138d-4901-828b-cf2bd0ba7a33 a sh:ValidationResult ;
    sh:focusNode sand:ClassA ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter ;
    rdfs:subPropertyOf :domainReferencingOut ;
    owl:equivalentProperty :domainReferencingOut .""" ;
                    earl:pointer sh:NodeShape ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:546b93e1-1e1c-49f8-84e5-9f477834c9bf a sh:ValidationResult ;
    sh:focusNode sand:ClassB ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:fe10e137-2334-4fd1-8417-ac9dc6bfa266 a sh:ValidationResult ;
    sh:focusNode sand:ClassA ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Subject terms not linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Term not referenced to a module"@en ;
                    earl:info """:NotReferencedClass a owl:Class ;
    rdfs:label "This class is not linked to a module by a rdfs:isDefinedBy p..." .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:identifier "syntax-error" ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    earl:info """at line 3 of <>:
Bad syntax (Prefix "owl:" not bound) at ^ in:
"...b'fix : <https://www.example.org/olivaw/> .\\n\\n:unknownPrefix a '^b'owl:Ontology .\\n\\n:Unknown a owl:Class ;\\n    rdfs:label "This '...\"""" ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy :rangeOuter ;
    rdfs:range sh:NodeShape .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:985efadb-a73e-4cb8-949a-48a0486db7d9 a sh:ValidationResult ;
    sh:focusNode sand:rangeReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Too close terms"@en ;
                    earl:info """:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:BrokenSubclass a owl:Class,
        :DisjointTheFirst,
        :DisjointTheSecond ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy :inconsistent ;
    rdfs:subClassOf :DisjointTheFirst,
        :DisjointTheSecond .""",
                        """:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy :inconsistent ;
    owl:disjointWith :DisjointTheSecond .""",
                        """:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy :inconsistent ;
    owl:disjointWith :DisjointTheFirst .""",
                        """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter .""",
                        """:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy :notEL .""",
                        """:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy :notQL .""",
                        """:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy :notRL .""",
                        """:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy :rangeOuter ;
    rdfs:range sh:NodeShape .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy :unlabeled .""",
                        """violation:082f5afa-b146-4b07-b45d-46317d20bf73 a sh:ValidationResult ;
    sh:focusNode sand:notRLTermCauseReflexive ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:09f8136b-481a-44df-80b8-9f11b61e0628 a sh:ValidationResult ;
    sh:focusNode sand:domainReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:102877b9-e8dd-4447-9a60-c23e7dd6fabb a sh:ValidationResult ;
    sh:focusNode sand:ClassB ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:1d0d08a6-9617-45b4-80a0-5372a32b3527 a sh:ValidationResult ;
    sh:focusNode sand:DisjointTheSecond ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:2eabd029-ed8e-4902-93fa-04ad0733cfe2 a sh:ValidationResult ;
    sh:focusNode sand:DisjointTheFirst ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:7986e873-15f8-45e2-92a5-c43243f0b3d5 a sh:ValidationResult ;
    sh:focusNode sand:unlabeledTerm ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:8c0e0510-9ea7-4735-922d-15078a407e9d a sh:ValidationResult ;
    sh:focusNode sand:BrokenSubclass ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:9ff14e22-83a8-4ade-b005-edce3027f452 a sh:ValidationResult ;
    sh:focusNode sand:notQLTermCauseTransitive ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:dc99a8e6-3f7c-48ca-bae2-46325ba43066 a sh:ValidationResult ;
    sh:focusNode sand:ClassA ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:e4989f7e-53d1-4dfb-8148-d6fc0faf9350 a sh:ValidationResult ;
    sh:focusNode sand:rangeReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:fd224c09-138d-40e0-8bf5-51eb7682fec2 a sh:ValidationResult ;
    sh:focusNode sand:notELTermCauseAsymmetric ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:4a0e5404-5a8d-4f2a-a038-82d5d715c511 a sh:ValidationResult ;
    sh:focusNode sand:domainReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter ;
    rdfs:subPropertyOf :domainReferencingOut ;
    owl:equivalentProperty :domainReferencingOut .""" ;
                    earl:pointer sh:NodeShape ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:all-modules ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy :rangeOuter ;
    rdfs:range sh:NodeShape .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:55deb7ae-4be4-4089-9c83-839e87255d0f a sh:ValidationResult ;
    sh:focusNode sand:rangeReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy :unlabeled .""",
                        """violation:6b2f07e1-615b-4499-a718-f3286597b5a6 a sh:ValidationResult ;
    sh:focusNode sand:unlabeledTerm ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a olivaw:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    earl:info """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""" ],
                [ a olivaw:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    earl:info """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Custom test  could not be run because the subject could not be loaded in the engine"@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-src-unknown-prefix ;
    earl:test olivaw:comment-format .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Too close terms"@en ;
                    earl:info """:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""" ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#AllDisjointClasses &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:AllDisjointClasses\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10; &#10;"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL Constraint violation"@en ],
                [ a olivaw:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#disjointWith &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10; &#10;"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL Constraint violation"@en ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy :notEL .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:9993edae-e27f-4660-b9a2-93424f41042a a sh:ValidationResult ;
    sh:focusNode sand:notELTermCauseAsymmetric ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:894c6b91-e0a7-4f8e-bb5f-e36f1144e759 a sh:ValidationResult ;
    sh:focusNode sand:domainReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Custom test  could not be run because the subject could not be loaded in the engine"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-src-broken ;
    earl:test olivaw:subclass-cycle .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Custom test  could not be run because the subject could not be loaded in the engine"@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-src-broken ;
    earl:test olivaw:comment-format .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Subject terms not linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Term not referenced to a module"@en ;
                    earl:info """:NotReferencedClass a owl:Class ;
    rdfs:label "This class is not linked to a module by a rdfs:isDefinedBy p..." .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "Terms not labeled"@en ;
                    earl:info """:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy :unlabeled .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy :notEL .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:dbd2a6dc-7fcc-45ed-afc0-f4d636418640 a sh:ValidationResult ;
    sh:focusNode sand:notELTermCauseAsymmetric ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:all-fragments ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a olivaw:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    earl:info """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""" ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Subject terms not linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Term not referenced to a module"@en ;
                    earl:info """:NotReferencedClass a owl:Class ;
    rdfs:label "This class is not linked to a module by a rdfs:isDefinedBy p..." .""" ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a olivaw:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    earl:info """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""" ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "Terms not labeled"@en ;
                    earl:info """:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy :unlabeled .""" ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "Terms not labeled"@en ;
                    earl:info """:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy :unlabeled .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:identifier "syntax-error" ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    earl:info "Encountered \"a\" at line 7, column 23." ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Too close terms"@en ;
                    earl:info """:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""" ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Custom test  could not be run because the subject could not be loaded in the engine"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw:subclass-cycle .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy :notRL .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:5a959bcb-19d9-4581-b7d7-2e840c215db2 a sh:ValidationResult ;
    sh:focusNode sand:notRLTermCauseReflexive ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy :unlabeled .""",
                        """violation:0d4ae92a-aa6d-4385-bc6b-62051c27f357 a sh:ValidationResult ;
    sh:focusNode sand:unlabeledTerm ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:BrokenSubclass a :DisjointTheFirst,
        :DisjointTheSecond ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy :inconsistent .""",
                        """:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy :inconsistent ;
    owl:disjointWith :DisjointTheSecond .""",
                        """:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy :inconsistent ;
    owl:disjointWith :DisjointTheFirst .""",
                        """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter .""",
                        """:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy :notEL .""",
                        """:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy :notQL .""",
                        """:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy :notRL .""",
                        """:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy :rangeOuter ;
    rdfs:range sh:NodeShape .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy :unlabeled .""",
                        """violation:1750766e-9ace-4f01-98a7-60717eb8296c a sh:ValidationResult ;
    sh:focusNode sand:ClassA ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:36bebec4-afae-4676-b991-99915420d8e8 a sh:ValidationResult ;
    sh:focusNode sand:domainReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:3b2f6202-c3ab-4712-a117-8d67dc6ef2f0 a sh:ValidationResult ;
    sh:focusNode sand:rangeReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:3d48c95a-1ce2-4f84-be52-9f9be57d74a4 a sh:ValidationResult ;
    sh:focusNode sand:notQLTermCauseTransitive ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:6044ca29-0867-41d9-bf67-acc9d35ede75 a sh:ValidationResult ;
    sh:focusNode sand:DisjointTheFirst ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:72f617ea-f572-41da-8500-48e9923c2168 a sh:ValidationResult ;
    sh:focusNode sand:BrokenSubclass ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:75d9a2d0-a871-48c8-9217-cde3d2cdc999 a sh:ValidationResult ;
    sh:focusNode sand:unlabeledTerm ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:7f6e2956-aa51-4926-9206-d0ac992c94c9 a sh:ValidationResult ;
    sh:focusNode sand:notRLTermCauseReflexive ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:a1443792-6a89-4c96-b350-6a85e1c57a55 a sh:ValidationResult ;
    sh:focusNode sand:DisjointTheSecond ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:af442957-855f-4ae3-96dd-570f0dbf449a a sh:ValidationResult ;
    sh:focusNode sand:notELTermCauseAsymmetric ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:c9f4ae61-ae68-4cb8-a786-9c21a2efa2f1 a sh:ValidationResult ;
    sh:focusNode sand:ClassB ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Too close terms"@en ;
                    earl:info """:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:BrokenSubclass a owl:Class ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy :inconsistent ;
    rdfs:subClassOf :DisjointTheFirst,
        :DisjointTheSecond .""",
                        """:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy :inconsistent ;
    owl:disjointWith :DisjointTheSecond .""",
                        """:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy :inconsistent ;
    owl:disjointWith :DisjointTheFirst .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:70468f6d-78a4-45c0-9f77-ab3019bdc2c7 a sh:ValidationResult ;
    sh:focusNode sand:BrokenSubclass ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:82a705ce-2974-4cf3-83a8-24d5e9da0213 a sh:ValidationResult ;
    sh:focusNode sand:DisjointTheFirst ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:94b07da5-4c18-4b3a-82db-825d7e575e6f a sh:ValidationResult ;
    sh:focusNode sand:DisjointTheSecond ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#AllDisjointClasses &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:AllDisjointClasses\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10; &#10;"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL Constraint violation"@en ],
                [ a olivaw:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#disjointWith &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10; &#10;"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL Constraint violation"@en ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy :notRL .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:1c6367e6-ac42-44b7-a5d8-cf169d72ed4b a sh:ValidationResult ;
    sh:focusNode sand:notRLTermCauseReflexive ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Custom test  could not be run because the subject could not be loaded in the engine"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw:subclass-cycle .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "Terms not labeled"@en ;
                    earl:info """:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy :unlabeled .""" ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Custom test  could not be run because the subject could not be loaded in the engine"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-src-unknown-prefix ;
    earl:test olivaw:subclass-cycle .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:bcd0591f-db42-4d17-a80a-c4d3f65cf733 a sh:ValidationResult ;
    sh:focusNode sand:domainReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#disjointWith &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10; &#10;"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL Constraint violation"@en ],
                [ a olivaw:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#AllDisjointClasses &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:AllDisjointClasses\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10; &#10;"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL Constraint violation"@en ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:BrokenSubclass a :DisjointTheFirst,
        :DisjointTheSecond ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy :inconsistent .""",
                        """:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy :inconsistent ;
    owl:disjointWith :DisjointTheSecond .""",
                        """:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy :inconsistent ;
    owl:disjointWith :DisjointTheFirst .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:9a1f516f-b314-43e1-a845-c35f2f4b7942 a sh:ValidationResult ;
    sh:focusNode sand:DisjointTheSecond ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:cc0ccf78-1c33-46a2-92e5-313e49f1ad9a a sh:ValidationResult ;
    sh:focusNode sand:DisjointTheFirst ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:f1d09d42-8489-4526-b59a-296e9c8a19a8 a sh:ValidationResult ;
    sh:focusNode sand:BrokenSubclass ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter ;
    rdfs:subPropertyOf :domainReferencingOut ;
    owl:equivalentProperty :domainReferencingOut .""" ;
                    earl:pointer sh:NodeShape ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy :notQL .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:eb553b23-d307-452c-ac0a-6c2c64f306b2 a sh:ValidationResult ;
    sh:focusNode sand:notQLTermCauseTransitive ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:identifier "syntax-error" ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    earl:info """at line 3 of <>:
Bad syntax (Prefix "owl:" not bound) at ^ in:
"...b'fix : <https://www.example.org/olivaw/> .\\n\\n:unknownPrefix a '^b'owl:Ontology .\\n\\n:Unknown a owl:Class ;\\n    rdfs:label "This '...\"""" ] ] ;
    earl:subject _:module-src-unknown-prefix ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:identifier "syntax-error" ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    earl:info "Encountered \"a\" at line 9, column 23." ] ] ;
    earl:subject _:module-src-broken ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/linked-schema.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

_:testSuiteUsage a prov:Usage ;
    prov:entity <https://github.com/Wimmics/olivaw/blob/v0.0.6/olivaw/test/model/suite.py> ;
    prov:hadRole olivaw:test_suite .

_:testedProjectUsage a prov:Usage ;
    prov:entity <https://github.com/acimov-tools/model-test/tree/00317205ded284b31fa0b43eb0b0b97efc97ce83> ;
    prov:hadRole olivaw:tested_project .

_:testerAssociation a prov:Association ;
    prov:agent _:tester ;
    prov:hadRole olivaw:tester .

_:modelet-zedomain-prefix a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/prefix/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-prefix" ;
    dcterms:title "Standalone modelet domains/zedomain/prefix/onto.ttl from branch main"@en .

_:modelet-zedomain-syntax a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/syntax/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-syntax" ;
    dcterms:title "Standalone modelet domains/zedomain/syntax/onto.ttl from branch main"@en .

_:module-src-broken a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/broken.ttl> ;
    dcterms:identifier "module-src-broken" ;
    dcterms:title "Standalone module src/broken.ttl from branch main"@en .

_:module-src-unknown-prefix a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/unknown-prefix.ttl> ;
    dcterms:identifier "module-src-unknown-prefix" ;
    dcterms:title "Standalone module src/unknown-prefix.ttl from branch main"@en .

_:tester a prov:Agent,
        foaf:Person ;
    foaf:homepage git-platform:NicoRobertIn ;
    foaf:nick "NicoRobertIn" .

_:all-fragments a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/compatEL/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/compatQL/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/compatRL/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/differenciation/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/domainout/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/dovrov/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/inconsistence/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/label/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/rangeout/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/domain-outer.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/inconsistent.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/not-el.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/not-ql.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/not-rl.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/range-outer.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/too-close-terms.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/unlabeled.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/unreferenced.ttl> ;
    dcterms:identifier "all-fragments" ;
    dcterms:title "All the fragments from branch main that are syntaxically correct as well as their recursive imports"@en .

_:all-modules a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/domain-outer.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/inconsistent.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/not-el.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/not-ql.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/not-rl.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/range-outer.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/too-close-terms.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/unlabeled.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/unreferenced.ttl> ;
    dcterms:identifier "all-modules" ;
    dcterms:title "All the modules from branch main that are syntaxically correct as well as their recursive imports"@en .

_:modelet-zedomain-compatEL a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/compatEL/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-compatEL" ;
    dcterms:title "Standalone modelet domains/zedomain/compatEL/onto.ttl from branch main"@en .

_:modelet-zedomain-compatQL a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/compatQL/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-compatQL" ;
    dcterms:title "Standalone modelet domains/zedomain/compatQL/onto.ttl from branch main"@en .

_:modelet-zedomain-compatRL a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/compatRL/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-compatRL" ;
    dcterms:title "Standalone modelet domains/zedomain/compatRL/onto.ttl from branch main"@en .

_:modelet-zedomain-differenciation a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/differenciation/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-differenciation" ;
    dcterms:title "Standalone modelet domains/zedomain/differenciation/onto.ttl from branch main"@en .

_:modelet-zedomain-domainout a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/domainout/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-domainout" ;
    dcterms:title "Standalone modelet domains/zedomain/domainout/onto.ttl from branch main"@en .

_:modelet-zedomain-dovrov a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/dovrov/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-dovrov" ;
    dcterms:title "Standalone modelet domains/zedomain/dovrov/onto.ttl from branch main"@en .

_:modelet-zedomain-inconsistence a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/inconsistence/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-inconsistence" ;
    dcterms:title "Standalone modelet domains/zedomain/inconsistence/onto.ttl from branch main"@en .

_:modelet-zedomain-label a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/label/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-label" ;
    dcterms:title "Standalone modelet domains/zedomain/label/onto.ttl from branch main"@en .

_:modelet-zedomain-rangeout a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/rangeout/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-rangeout" ;
    dcterms:title "Standalone modelet domains/zedomain/rangeout/onto.ttl from branch main"@en .

_:module-src-domain-outer a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/domain-outer.ttl> ;
    dcterms:identifier "module-src-domain-outer" ;
    dcterms:title "Standalone module src/domain-outer.ttl from branch main"@en .

_:module-src-inconsistent a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/inconsistent.ttl> ;
    dcterms:identifier "module-src-inconsistent" ;
    dcterms:title "Standalone module src/inconsistent.ttl from branch main"@en .

_:module-src-not-el a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/not-el.ttl> ;
    dcterms:identifier "module-src-not-el" ;
    dcterms:title "Standalone module src/not-el.ttl from branch main"@en .

_:module-src-not-ql a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/not-ql.ttl> ;
    dcterms:identifier "module-src-not-ql" ;
    dcterms:title "Standalone module src/not-ql.ttl from branch main"@en .

_:module-src-not-rl a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/not-rl.ttl> ;
    dcterms:identifier "module-src-not-rl" ;
    dcterms:title "Standalone module src/not-rl.ttl from branch main"@en .

_:module-src-range-outer a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/range-outer.ttl> ;
    dcterms:identifier "module-src-range-outer" ;
    dcterms:title "Standalone module src/range-outer.ttl from branch main"@en .

_:module-src-too-close-terms a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/too-close-terms.ttl> ;
    dcterms:identifier "module-src-too-close-terms" ;
    dcterms:title "Standalone module src/too-close-terms.ttl from branch main"@en .

_:module-src-unlabeled a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/unlabeled.ttl> ;
    dcterms:identifier "module-src-unlabeled" ;
    dcterms:title "Standalone module src/unlabeled.ttl from branch main"@en .

_:module-src-unreferenced a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/unreferenced.ttl> ;
    dcterms:identifier "module-src-unreferenced" ;
    dcterms:title "Standalone module src/unreferenced.ttl from branch main"@en .

_:assertor a earl:Assertor,
        prov:Activity ;
    dcterms:description "NicoRobertIn launch actions run of model tests against acimov-tools/model-test on branch main" ;
    dcterms:title "Model tests of acimov-tools/model-test on branch main" ;
    prov:endedAtTime "2024-09-20T08:52:31.951336"^^xsd:dateTime ;
    prov:generated <file:////home/runner/work/model-test/model-test/.acimov/output/model-test-actions.md>,
        <file:////home/runner/work/model-test/model-test/.acimov/output/model-test-actions.ttl> ;
    prov:qualifiedAssociation _:testerAssociation ;
    prov:qualifiedUsage _:testSuiteUsage,
        _:testedProjectUsage ;
    prov:used <https://github.com/Wimmics/olivaw/blob/v0.0.6/olivaw/test/model/suite.py>,
        <https://github.com/acimov-tools/model-test/tree/00317205ded284b31fa0b43eb0b0b97efc97ce83> ;
    prov:wasAssociatedWith _:tester .

