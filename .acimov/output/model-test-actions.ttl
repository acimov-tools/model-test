@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix earl: <http://www.w3.org/ns/earl#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix olivaw-earl: <https://raw.githubusercontent.com/Wimmics/olivaw/main/olivaw/test/olivaw-earl.ttl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix src: <https://github.com/acimov-tools/model-test/blob/refs/heads/main/src/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:all-fragments ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-not-ql ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-not-el ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notQLTermCauseTransitive> a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notQL> .""" ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:module-not-ql ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:ebb886c4-e5cf-4491-8d0b-1f0f5b31c80b> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/domainReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b24249 ;
	sh:value 0 .""",
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter .""" ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    rdfs:seeAlso sh:NodeShape,
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter ;
    rdfs:subPropertyOf sand:domainReferencingOut ;
    owl:equivalentProperty sand:domainReferencingOut .""" ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-not-ql ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#disjointWith &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ],
                [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#AllDisjointClasses &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:AllDisjointClasses\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:049d2d58-54d1-4360-a532-cfcb619a1483> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notRLTermCauseReflexive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b18865 ;
	sh:value 0 .""",
                        """sand:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy sand:notRL .""" ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:e39afe83-a100-480d-a7db-7a5555bd6623> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notELTermCauseAsymmetric> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b4041 ;
	sh:value 0 .""",
                        """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""" ] ] ;
    earl:subject _:module-not-el ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:515d50fa-45e5-4248-8dd7-325db96cc97d> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/unlabeledTerm> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b12126 ;
	sh:value 0 .""",
                        """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-not-ql ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-not-el ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notELTermCauseAsymmetric> a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notEL> .""" ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:81370b95-1d3b-47a0-b890-993ba1d586f8> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/unlabeledTerm> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b2695 ;
	sh:value 0 .""",
                        """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:a0a207cd-638f-4f8c-9082-cf5784372660> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/domainReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b22903 ;
	sh:value 0 .""",
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter .""" ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notQLTermCauseTransitive> a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notQL> .""" ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notELTermCauseAsymmetric> a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notEL> .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-not-el ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notQLTermCauseTransitive> a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notQL> .""" ],
                [ a earl:Pass ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-not-ql ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:all-modules ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    rdfs:seeAlso sh:NodeShape,
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter ;
    rdfs:subPropertyOf sand:domainReferencingOut ;
    owl:equivalentProperty sand:domainReferencingOut .""" ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notELTermCauseAsymmetric> a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notEL> .""" ] ] ;
    earl:subject _:module-not-el ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    rdfs:seeAlso """at line 3 of <>:
Bad syntax (Prefix "owl:" not bound) at ^ in:
"...b'fix : <https://www.example.org/olivaw/> .\\n\\n:unknownPrefix a '^b'owl:Ontology .\\n\\n:Unknown a owl:Class ;\\n    rdfs:label "This '...\"""" ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:syntax .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:980f5620-e94d-4d65-b3fe-531945ad5840> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/rangeReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b5387 ;
	sh:value 0 .""",
                        """sand:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy sand:rangeOuter ;
    rdfs:range shacl:NodeShape .""" ] ] ;
    earl:subject _:module-range-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:10f92bab-144d-4a44-a777-7169c807c27e> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/domainReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b35017 ;
	sh:value 0 .""",
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter .""" ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:66c02db2-4477-4f8d-8f11-561bb1f066b5> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/domainReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b33671 ;
	sh:value 0 .""",
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter .""" ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:4b4818c6-6de1-48c5-ad3c-7fdcb5e12a22> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassA> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b6733 ;
	sh:value 0 .""",
                        """<urn:uuid:edeb3fff-1bfc-4ffe-9732-fe8999d860fb> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassB> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b6733 ;
	sh:value 0 .""",
                        """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:05dd1cc7-c6e2-4ec5-9c45-f4ae52f9d19d> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheFirst> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b37727 ;
	sh:value 0 .""",
                        """<urn:uuid:05f557f4-aad0-452d-b781-0b12e24900f3> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notQLTermCauseTransitive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b37727 ;
	sh:value 0 .""",
                        """<urn:uuid:234fd6ec-c293-42f5-8e8c-2d7483e66209> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/rangeReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b37727 ;
	sh:value 0 .""",
                        """<urn:uuid:2a9283fd-1822-498c-86f9-4ecc7527a6a1> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/unlabeledTerm> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b37727 ;
	sh:value 0 .""",
                        """<urn:uuid:3de94bdb-ac51-414a-bb37-b6d40f42a18c> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notELTermCauseAsymmetric> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b37727 ;
	sh:value 0 .""",
                        """<urn:uuid:88f071b8-666b-4fd5-9419-4fee3030df70> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/BrokenSubclass> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b37727 ;
	sh:value 0 .""",
                        """<urn:uuid:9150b7db-c906-4479-96b9-40794cad6314> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheSecond> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b37727 ;
	sh:value 0 .""",
                        """<urn:uuid:c2a8a099-1f88-4809-8720-c7089b0ba8f8> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notRLTermCauseReflexive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b37727 ;
	sh:value 0 .""",
                        """<urn:uuid:c7a084a8-784d-4e08-a4fe-18ec98e96948> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassB> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b37727 ;
	sh:value 0 .""",
                        """<urn:uuid:cb67a937-caf6-4891-be65-437102143fa6> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassA> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b37727 ;
	sh:value 0 .""",
                        """<urn:uuid:ec119449-66c3-4b5e-a4f4-a1ba27ec632b> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/domainReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b37727 ;
	sh:value 0 .""",
                        """sand:BrokenSubclass a owl:Class,
        sand:DisjointTheFirst,
        sand:DisjointTheSecond ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy sand:inconsistent ;
    rdfs:subClassOf sand:DisjointTheFirst,
        sand:DisjointTheSecond .""",
                        """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheSecond .""",
                        """sand:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheFirst .""",
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter .""",
                        """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""",
                        """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""",
                        """sand:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy sand:notRL .""",
                        """sand:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy sand:rangeOuter ;
    rdfs:range shacl:NodeShape .""",
                        """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:160c83a3-a7e8-4f3c-9912-4e825d4fe8d2> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassB> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b21557 ;
	sh:value 0 .""",
                        """<urn:uuid:6ef3b9f5-757e-4af2-88fd-1d1002a76d53> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassA> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b21557 ;
	sh:value 0 .""",
                        """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:title "Terms not labeled"@en ;
                    rdfs:seeAlso """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    rdfs:seeAlso "Encountered \"a\" at line 9, column 23." ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:syntax .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    rdfs:seeAlso sh:NodeShape,
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter ;
    rdfs:subPropertyOf sand:domainReferencingOut ;
    owl:equivalentProperty sand:domainReferencingOut .""" ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:a884af8e-ce48-4112-9bb7-1849056be61c> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notELTermCauseAsymmetric> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b30979 ;
	sh:value 0 .""",
                        """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""" ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-not-el ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Subject terms not linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Term not referenced to a module"@en ;
                    rdfs:seeAlso """sand:NotReferencedClass a owl:Class ;
    rdfs:label "This class is not linked to a module by a rdfs:isDefinedBy p..." .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notQLTermCauseTransitive> a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notQL> .""" ],
                [ a earl:Pass ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:title "Too close terms"@en ;
                    rdfs:seeAlso """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    rdfs:seeAlso sh:NodeShape,
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter ;
    rdfs:subPropertyOf sand:domainReferencingOut ;
    owl:equivalentProperty sand:domainReferencingOut .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#disjointWith &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ],
                [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#AllDisjointClasses &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:AllDisjointClasses\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:title "Terms not labeled"@en ;
                    rdfs:seeAlso """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    rdfs:seeAlso sh:NodeShape,
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter ;
    rdfs:subPropertyOf sand:domainReferencingOut ;
    owl:equivalentProperty sand:domainReferencingOut .""" ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:title "Too close terms"@en ;
                    rdfs:seeAlso """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:title "Too close terms"@en ;
                    rdfs:seeAlso """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:be22e3b7-d15a-4834-a6e4-490bfcd3c7c6> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notQLTermCauseTransitive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b26941 ;
	sh:value 0 .""",
                        """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""" ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:e2ff4bfc-5c3c-4d76-bb21-7b730eded642> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/domainReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b9425 ;
	sh:value 0 .""",
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter .""" ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:de4c8aaf-8af7-4592-a556-63e93b470680> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notELTermCauseAsymmetric> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b32325 ;
	sh:value 0 .""",
                        """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""" ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Subject terms not linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Term not referenced to a module"@en ;
                    rdfs:seeAlso """sand:NotReferencedClass a owl:Class ;
    rdfs:label "This class is not linked to a module by a rdfs:isDefinedBy p..." .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:title "Terms not labeled"@en ;
                    rdfs:seeAlso """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:3ec4149f-e0cb-4414-9b7a-3570a71512c2> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/BrokenSubclass> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b16173 ;
	sh:value 0 .""",
                        """<urn:uuid:62a2abe6-afec-41ea-a75f-f5f8cd25797f> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheFirst> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b16173 ;
	sh:value 0 .""",
                        """<urn:uuid:c42a1bfe-7367-4987-b0a0-2d73c58c8d7e> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheSecond> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b16173 ;
	sh:value 0 .""",
                        """sand:BrokenSubclass a owl:Class,
        sand:DisjointTheFirst,
        sand:DisjointTheSecond ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy sand:inconsistent ;
    rdfs:subClassOf sand:DisjointTheFirst,
        sand:DisjointTheSecond .""",
                        """sand:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheSecond .""",
                        """sand:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheFirst .""" ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    rdfs:seeAlso "Encountered \"a\" at line 7, column 23." ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:syntax .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:title "Too close terms"@en ;
                    rdfs:seeAlso """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:66e77dde-8dbb-4087-9402-34cec92811f5> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notQLTermCauseTransitive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b25595 ;
	sh:value 0 .""",
                        """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""" ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:5ca49737-c0dd-4f9e-a32f-c699055c53bf> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheSecond> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b14818 ;
	sh:value 0 .""",
                        """<urn:uuid:5daef2a2-2c25-4f12-8607-7dc1ce13c987> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheFirst> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b14818 ;
	sh:value 0 .""",
                        """<urn:uuid:c2ba8534-69fa-48d6-a502-44f30a1c955b> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/BrokenSubclass> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b14818 ;
	sh:value 0 .""",
                        """sand:BrokenSubclass a owl:Class ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy sand:inconsistent ;
    rdfs:subClassOf sand:DisjointTheFirst,
        sand:DisjointTheSecond .""",
                        """sand:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheSecond .""",
                        """sand:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheFirst .""" ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-not-ql ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:title "Too close terms"@en ;
                    rdfs:seeAlso """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:e43c998e-5430-4f42-809d-f872ad3773d7> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notRLTermCauseReflexive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b17519 ;
	sh:value 0 .""",
                        """sand:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy sand:notRL .""" ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:32cdf6ef-fa1c-43bc-be1e-e08137305a04> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/rangeReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b29633 ;
	sh:value 0 .""",
                        """sand:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy sand:rangeOuter ;
    rdfs:range shacl:NodeShape .""" ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#disjointWith &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ],
                [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#AllDisjointClasses &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:AllDisjointClasses\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-not-el ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    rdfs:seeAlso sh:NodeShape,
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter ;
    rdfs:subPropertyOf sand:domainReferencingOut ;
    owl:equivalentProperty sand:domainReferencingOut .""" ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:04972329-d08e-437a-90ac-990605b6df56> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/BrokenSubclass> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b10780 ;
	sh:value 0 .""",
                        """<urn:uuid:4dbc450c-5ea9-4748-a62d-8811682edb26> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheFirst> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b10780 ;
	sh:value 0 .""",
                        """<urn:uuid:7fcf0090-a2e0-4e99-a7c0-eb7082448e26> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheSecond> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b10780 ;
	sh:value 0 .""",
                        """sand:BrokenSubclass a sand:DisjointTheFirst,
        sand:DisjointTheSecond ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy sand:inconsistent .""",
                        """sand:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheSecond .""",
                        """sand:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheFirst .""" ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Subject terms not linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Term not referenced to a module"@en ;
                    rdfs:seeAlso """sand:NotReferencedClass a owl:Class ;
    rdfs:label "This class is not linked to a module by a rdfs:isDefinedBy p..." .""" ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notELTermCauseAsymmetric> a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notEL> .""" ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:title "Terms not labeled"@en ;
                    rdfs:seeAlso """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    rdfs:seeAlso sh:NodeShape,
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter ;
    rdfs:subPropertyOf sand:domainReferencingOut ;
    owl:equivalentProperty sand:domainReferencingOut .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:title "Terms not labeled"@en ;
                    rdfs:seeAlso """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-not-ql ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    rdfs:seeAlso """at line 3 of <>:
Bad syntax (Prefix "owl:" not bound) at ^ in:
"...b'fix : <https://www.example.org/olivaw/> .\\n\\n:unknownPrefix a '^b'owl:Ontology .\\n\\n:Unknown a owl:Class ;\\n    rdfs:label "This '...\"""" ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:syntax .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:dfce64e7-7976-4b3d-923b-63c6fd82c9af> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/rangeReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b28287 ;
	sh:value 0 .""",
                        """sand:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy sand:rangeOuter ;
    rdfs:range shacl:NodeShape .""" ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:e77a5fc3-7584-417a-84bf-9c9065c35dcd> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/unlabeledTerm> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b13472 ;
	sh:value 0 .""",
                        """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:18336fe9-cfa2-463f-9955-e4c6957c0a47> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheFirst> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36372 ;
	sh:value 0 .""",
                        """<urn:uuid:2b795083-526c-493a-aba5-145eeda71f6a> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/BrokenSubclass> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36372 ;
	sh:value 0 .""",
                        """<urn:uuid:3156eee0-60ec-443b-93a3-63d7852b1780> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/domainReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36372 ;
	sh:value 0 .""",
                        """<urn:uuid:363c2287-d1d9-4cc7-905b-210c13ffdfec> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notRLTermCauseReflexive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36372 ;
	sh:value 0 .""",
                        """<urn:uuid:37958093-6134-44d2-b0ff-ef23c322cdde> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notQLTermCauseTransitive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36372 ;
	sh:value 0 .""",
                        """<urn:uuid:4a3bf6b1-7f3a-4da4-aebb-3a868951359f> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/rangeReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36372 ;
	sh:value 0 .""",
                        """<urn:uuid:4d0c4268-177b-49f2-af1b-86ad68606052> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/unlabeledTerm> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36372 ;
	sh:value 0 .""",
                        """<urn:uuid:67c04c17-0599-43a2-8cfd-58e50bd12fd2> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassB> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36372 ;
	sh:value 0 .""",
                        """<urn:uuid:d4dd4c99-9545-48ba-af65-6ece50081b34> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notELTermCauseAsymmetric> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36372 ;
	sh:value 0 .""",
                        """<urn:uuid:f7c615ba-3915-4cb7-8448-7dd0056445da> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheSecond> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36372 ;
	sh:value 0 .""",
                        """<urn:uuid:fa7a5188-4089-4086-9584-71388717f35a> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassA> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36372 ;
	sh:value 0 .""",
                        """sand:BrokenSubclass a sand:DisjointTheFirst,
        sand:DisjointTheSecond ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy sand:inconsistent .""",
                        """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheSecond .""",
                        """sand:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheFirst .""",
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter .""",
                        """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""",
                        """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""",
                        """sand:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy sand:notRL .""",
                        """sand:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy sand:rangeOuter ;
    rdfs:range shacl:NodeShape .""",
                        """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#disjointWith &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ],
                [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#AllDisjointClasses &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:AllDisjointClasses\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:00f23515-31a1-4b53-a773-87f18811b43c> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassA> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b20211 ;
	sh:value 0 .""",
                        """<urn:uuid:ddcfe337-ffd0-4a12-a3aa-b82eff81dff4> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassB> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b20211 ;
	sh:value 0 .""",
                        """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-not-el ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notELTermCauseAsymmetric> a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notEL> .""" ],
                [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notQLTermCauseTransitive> a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notQL> .""" ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:b8ff2c44-9d87-4828-9538-3d0de9a3c95f> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notQLTermCauseTransitive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b8079 ;
	sh:value 0 .""",
                        """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""" ] ] ;
    earl:subject _:module-not-ql ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/domainout/onto.ttl>,
        src:domain-outer ;
    dcterms:identifier "module-domain-outer-modelet-zedomain-domainout" ;
    dcterms:title "Merged module src/domain-outer.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/domainout/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/dovrov/onto.ttl>,
        src:domain-outer ;
    dcterms:identifier "module-domain-outer-modelet-zedomain-dovrov" ;
    dcterms:title "Merged module src/domain-outer.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/dovrov/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/inconsistence/onto.ttl>,
        src:inconsistent ;
    dcterms:identifier "module-inconsistent-modelet-zedomain-inconsistence" ;
    dcterms:title "Merged module src/inconsistent.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/inconsistence/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatEL/onto.ttl>,
        src:not-el ;
    dcterms:identifier "module-not-el-modelet-zedomain-compatEL" ;
    dcterms:title "Merged module src/not-el.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/compatEL/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatQL/onto.ttl>,
        src:not-ql ;
    dcterms:identifier "module-not-ql-modelet-zedomain-compatQL" ;
    dcterms:title "Merged module src/not-ql.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/compatQL/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart src:not-rl ;
    dcterms:identifier "module-not-rl" ;
    dcterms:title "Standalone module src/not-rl.ttl from branch refs/heads/main"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatRL/onto.ttl>,
        src:not-rl ;
    dcterms:identifier "module-not-rl-modelet-zedomain-compatRL" ;
    dcterms:title "Merged module src/not-rl.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/compatRL/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/rangeout/onto.ttl>,
        src:range-outer ;
    dcterms:identifier "module-range-outer-modelet-zedomain-rangeout" ;
    dcterms:title "Merged module src/range-outer.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/rangeout/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/differenciation/onto.ttl>,
        src:too-close-terms ;
    dcterms:identifier "module-too-close-terms-modelet-zedomain-differenciation" ;
    dcterms:title "Merged module src/too-close-terms.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/differenciation/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/label/onto.ttl>,
        src:unlabeled ;
    dcterms:identifier "module-unlabeled-modelet-zedomain-label" ;
    dcterms:title "Merged module src/unlabeled.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/label/onto.ttl"@en .

_:NicoRobertIn a foaf:Person ;
    schema:mainEntityOfPage <https://github.com/NicoRobertIn> .

_:all-fragments a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatEL/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatQL/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatRL/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/differenciation/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/domainout/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/dovrov/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/inconsistence/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/label/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/rangeout/onto.ttl>,
        src:domain-outer,
        src:inconsistent,
        src:not-el,
        src:not-ql,
        src:not-rl,
        src:range-outer,
        src:too-close-terms,
        src:unlabeled,
        src:unreferenced ;
    dcterms:identifier "all-fragments" ;
    dcterms:title "All the fragments from branch refs/heads/main that are syntaxically correct as well as their recursive imports"@en .

_:all-modules a earl:TestSubject ;
    dcterms:hasPart src:domain-outer,
        src:inconsistent,
        src:not-el,
        src:not-ql,
        src:not-rl,
        src:range-outer,
        src:too-close-terms,
        src:unlabeled,
        src:unreferenced ;
    dcterms:identifier "all-modules" ;
    dcterms:title "All the modules from branch refs/heads/main that are syntaxically correct as well as their recursive imports"@en .

_:module-domain-outer a earl:TestSubject ;
    dcterms:hasPart src:domain-outer ;
    dcterms:identifier "module-domain-outer" ;
    dcterms:title "Standalone module src/domain-outer.ttl from branch refs/heads/main"@en .

_:module-inconsistent a earl:TestSubject ;
    dcterms:hasPart src:inconsistent ;
    dcterms:identifier "module-inconsistent" ;
    dcterms:title "Standalone module src/inconsistent.ttl from branch refs/heads/main"@en .

_:module-not-el a earl:TestSubject ;
    dcterms:hasPart src:not-el ;
    dcterms:identifier "module-not-el" ;
    dcterms:title "Standalone module src/not-el.ttl from branch refs/heads/main"@en .

_:module-not-ql a earl:TestSubject ;
    dcterms:hasPart src:not-ql ;
    dcterms:identifier "module-not-ql" ;
    dcterms:title "Standalone module src/not-ql.ttl from branch refs/heads/main"@en .

_:module-range-outer a earl:TestSubject ;
    dcterms:hasPart src:range-outer ;
    dcterms:identifier "module-range-outer" ;
    dcterms:title "Standalone module src/range-outer.ttl from branch refs/heads/main"@en .

_:module-too-close-terms a earl:TestSubject ;
    dcterms:hasPart src:too-close-terms ;
    dcterms:identifier "module-too-close-terms" ;
    dcterms:title "Standalone module src/too-close-terms.ttl from branch refs/heads/main"@en .

_:module-unlabeled a earl:TestSubject ;
    dcterms:hasPart src:unlabeled ;
    dcterms:identifier "module-unlabeled" ;
    dcterms:title "Standalone module src/unlabeled.ttl from branch refs/heads/main"@en .

_:module-unreferenced a earl:TestSubject ;
    dcterms:hasPart src:unreferenced ;
    dcterms:identifier "module-unreferenced" ;
    dcterms:title "Standalone module src/unreferenced.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-prefix a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/prefix/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-prefix" ;
    dcterms:title "Standalone modelet domains/zedomain/prefix/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-syntax a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/syntax/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-syntax" ;
    dcterms:title "Standalone modelet domains/zedomain/syntax/onto.ttl from branch refs/heads/main"@en .

_:module-broken a earl:TestSubject ;
    dcterms:hasPart src:broken ;
    dcterms:identifier "module-broken" ;
    dcterms:title "Standalone module src/broken.ttl from branch refs/heads/main"@en .

_:module-unknown-prefix a earl:TestSubject ;
    dcterms:hasPart src:unknown-prefix ;
    dcterms:identifier "module-unknown-prefix" ;
    dcterms:title "Standalone module src/unknown-prefix.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-compatEL a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatEL/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-compatEL" ;
    dcterms:title "Standalone modelet domains/zedomain/compatEL/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-compatQL a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatQL/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-compatQL" ;
    dcterms:title "Standalone modelet domains/zedomain/compatQL/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-compatRL a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatRL/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-compatRL" ;
    dcterms:title "Standalone modelet domains/zedomain/compatRL/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-differenciation a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/differenciation/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-differenciation" ;
    dcterms:title "Standalone modelet domains/zedomain/differenciation/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-domainout a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/domainout/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-domainout" ;
    dcterms:title "Standalone modelet domains/zedomain/domainout/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-dovrov a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/dovrov/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-dovrov" ;
    dcterms:title "Standalone modelet domains/zedomain/dovrov/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-inconsistence a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/inconsistence/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-inconsistence" ;
    dcterms:title "Standalone modelet domains/zedomain/inconsistence/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-label a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/label/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-label" ;
    dcterms:title "Standalone modelet domains/zedomain/label/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-rangeout a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/rangeout/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-rangeout" ;
    dcterms:title "Standalone modelet domains/zedomain/rangeout/onto.ttl from branch refs/heads/main"@en .

_:NicoRobertIn-actions a foaf:OnlineAccount ;
    dcterms:date "2024-05-13T14:46:55.597151"^^xsd:dateTime ;
    dcterms:description "Test triggered by @NicoRobertIn by actions trigger"@en ;
    dcterms:title "NicoRobertIn using actions script"@en ;
    earl:mainAssertor _:NicoRobertIn ;
    foaf:member <https://github.com/Wimmics/olivaw/blob/main/olivaw/test/model/suite.py> .

