@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix earl: <http://www.w3.org/ns/earl#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix olivaw-earl: <https://raw.githubusercontent.com/Wimmics/olivaw/main/olivaw/test/olivaw-earl.ttl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix src: <https://github.com/acimov-tools/model-test/blob/refs/heads/main/src/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-not-ql ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-not-el ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    rdfs:seeAlso """at line 3 of <>:
Bad syntax (Prefix "owl:" not bound) at ^ in:
"...b'fix : <https://www.example.org/olivaw/> .\\n\\n:unknownPrefix a '^b'owl:Ontology .\\n\\n:Unknown a owl:Class ;\\n    rdfs:label "This '...\"""" ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:syntax .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:ad4698d0-3846-4b41-b843-68625175bec2> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notELTermCauseAsymmetric> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b32325 ;
	sh:value 0 .""",
                        """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""" ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:e78a428a-d2bf-4662-8051-80b2adc5df85> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/rangeReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b5387 ;
	sh:value 0 .""",
                        """sand:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy sand:rangeOuter ;
    rdfs:range shacl:NodeShape .""" ] ] ;
    earl:subject _:module-range-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:3b21be6e-bf89-46ee-93c2-b7dc9a60cea6> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/BrokenSubclass> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b10780 ;
	sh:value 0 .""",
                        """<urn:uuid:8fdf65ec-d8c2-4796-a209-ab62c6330564> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheSecond> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b10780 ;
	sh:value 0 .""",
                        """<urn:uuid:e747a0c4-0f39-4d32-9b14-83f0aca5b935> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheFirst> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b10780 ;
	sh:value 0 .""",
                        """sand:BrokenSubclass a sand:DisjointTheFirst,
        sand:DisjointTheSecond ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy sand:inconsistent .""",
                        """sand:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheSecond .""",
                        """sand:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheFirst .""" ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:e3a8c8a3-3e43-4023-9868-bf9391c61474> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notRLTermCauseReflexive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b18865 ;
	sh:value 0 .""",
                        """sand:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy sand:notRL .""" ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-not-ql ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-not-ql ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:6dfef1c4-246b-46ea-b4ae-aacfa7af1c3b> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/BrokenSubclass> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b16173 ;
	sh:value 0 .""",
                        """<urn:uuid:91d4843e-1fd5-4821-a2a0-050eb014a034> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheFirst> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b16173 ;
	sh:value 0 .""",
                        """<urn:uuid:fed97397-ae0e-494b-b51d-8fbfa30b4228> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheSecond> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b16173 ;
	sh:value 0 .""",
                        """sand:BrokenSubclass a owl:Class,
        sand:DisjointTheFirst,
        sand:DisjointTheSecond ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy sand:inconsistent ;
    rdfs:subClassOf sand:DisjointTheFirst,
        sand:DisjointTheSecond .""",
                        """sand:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheSecond .""",
                        """sand:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheFirst .""" ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:23971e64-fff4-4aa7-8e80-2c467e34fe67> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/domainReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b22903 ;
	sh:value 0 .""",
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter .""" ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:29514bc4-250e-4048-9fa7-5ba6e9fc66ca> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notELTermCauseAsymmetric> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b4041 ;
	sh:value 0 .""",
                        """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""" ] ] ;
    earl:subject _:module-not-el ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    rdfs:seeAlso sh:NodeShape,
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter ;
    rdfs:subPropertyOf sand:domainReferencingOut ;
    owl:equivalentProperty sand:domainReferencingOut .""" ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:title "Too close terms"@en ;
                    rdfs:seeAlso """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:7dab4a1a-cf71-49eb-9f1b-f1e2f55e37f2> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassA> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b20211 ;
	sh:value 0 .""",
                        """<urn:uuid:d6338b82-e038-459a-8dd8-12aff4a13551> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassB> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b20211 ;
	sh:value 0 .""",
                        """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#AllDisjointClasses &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:AllDisjointClasses\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ],
                [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#disjointWith &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:ed5b0151-17f3-46de-ac13-ebbf4539db9c> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notRLTermCauseReflexive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b17519 ;
	sh:value 0 .""",
                        """sand:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy sand:notRL .""" ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#disjointWith &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ],
                [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#AllDisjointClasses &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:AllDisjointClasses\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:2de7977d-72f4-4f40-97b3-b10083326e0b> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/domainReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b24249 ;
	sh:value 0 .""",
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter .""" ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:title "Terms not labeled"@en ;
                    rdfs:seeAlso """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:title "Terms not labeled"@en ;
                    rdfs:seeAlso """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:1449718a-b2b7-4af8-993f-a49f91da618c> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheSecond> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36381 ;
	sh:value 0 .""",
                        """<urn:uuid:2279d657-83ad-4dd2-9c10-e4f925e50e85> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notELTermCauseAsymmetric> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36381 ;
	sh:value 0 .""",
                        """<urn:uuid:3b010714-1e4c-4167-bc34-b4eff03b64b2> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notQLTermCauseTransitive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36381 ;
	sh:value 0 .""",
                        """<urn:uuid:48c8dad4-e296-42c5-b8b0-87d2f7bd46fc> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/rangeReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36381 ;
	sh:value 0 .""",
                        """<urn:uuid:5e0bcbf0-f47a-48f8-8da6-c77d8b529ff4> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/domainReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36381 ;
	sh:value 0 .""",
                        """<urn:uuid:617ea9ee-40a1-48a1-bf04-44d880265add> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassA> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36381 ;
	sh:value 0 .""",
                        """<urn:uuid:93a5a5e4-17c5-45e9-88fe-c20a11525b70> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheFirst> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36381 ;
	sh:value 0 .""",
                        """<urn:uuid:c0c778e2-28db-4a2f-a268-fb51737415db> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notRLTermCauseReflexive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36381 ;
	sh:value 0 .""",
                        """<urn:uuid:c3804e15-af7e-4c8c-8c51-83b87d6b800e> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/unlabeledTerm> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36381 ;
	sh:value 0 .""",
                        """<urn:uuid:d4d2a93b-9917-4fe5-af3a-773291214d1b> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/BrokenSubclass> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36381 ;
	sh:value 0 .""",
                        """<urn:uuid:eac4ffc8-0438-40d5-ab27-9d57fad7a5f3> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassB> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b36381 ;
	sh:value 0 .""",
                        """sand:BrokenSubclass a owl:Class,
        sand:DisjointTheFirst,
        sand:DisjointTheSecond ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy sand:inconsistent ;
    rdfs:subClassOf sand:DisjointTheFirst,
        sand:DisjointTheSecond .""",
                        """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheSecond .""",
                        """sand:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheFirst .""",
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter .""",
                        """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""",
                        """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""",
                        """sand:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy sand:notRL .""",
                        """sand:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy sand:rangeOuter ;
    rdfs:range shacl:NodeShape .""",
                        """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:41816163-6c79-4e88-b387-7079f31790cf> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassA> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b6733 ;
	sh:value 0 .""",
                        """<urn:uuid:477ce94a-b323-4042-a90e-e865009ebf41> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassB> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b6733 ;
	sh:value 0 .""",
                        """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-not-el ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-not-ql ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notELTermCauseAsymmetric> a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notEL> .""" ] ] ;
    earl:subject _:module-not-el ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    rdfs:seeAlso sh:NodeShape,
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter ;
    rdfs:subPropertyOf sand:domainReferencingOut ;
    owl:equivalentProperty sand:domainReferencingOut .""" ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    rdfs:seeAlso sh:NodeShape,
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter ;
    rdfs:subPropertyOf sand:domainReferencingOut ;
    owl:equivalentProperty sand:domainReferencingOut .""" ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Subject terms not linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Term not referenced to a module"@en ;
                    rdfs:seeAlso """sand:NotReferencedClass a owl:Class ;
    rdfs:label "This class is not linked to a module by a rdfs:isDefinedBy p..." .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:ae92489f-a843-4099-b7ff-cb2182bc25fe> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/domainReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b9425 ;
	sh:value 0 .""",
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter .""" ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:017f9f56-51ea-4f20-9400-967b8e29292f> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/rangeReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b28287 ;
	sh:value 0 .""",
                        """sand:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy sand:rangeOuter ;
    rdfs:range shacl:NodeShape .""" ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-not-el ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notELTermCauseAsymmetric> a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notEL> .""" ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Subject terms not linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Term not referenced to a module"@en ;
                    rdfs:seeAlso """sand:NotReferencedClass a owl:Class ;
    rdfs:label "This class is not linked to a module by a rdfs:isDefinedBy p..." .""" ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notQLTermCauseTransitive> a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notQL> .""" ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:04b52b40-67d7-4e1e-9a07-525fde6a7aa2> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/domainReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b33671 ;
	sh:value 0 .""",
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter .""" ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:3aa96fd1-539d-4926-9a7c-6ac0c9eff08e> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notQLTermCauseTransitive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b25595 ;
	sh:value 0 .""",
                        """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""" ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:all-fragments ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:title "Terms not labeled"@en ;
                    rdfs:seeAlso """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    rdfs:seeAlso "Encountered \"a\" at line 9, column 23." ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:syntax .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notQLTermCauseTransitive> a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notQL> .""" ] ] ;
    earl:subject _:module-not-ql ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    rdfs:seeAlso "Encountered \"a\" at line 7, column 23." ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:syntax .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:dc87d0b4-cd57-428e-b2cc-17411f0a7a9b> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/unlabeledTerm> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b12126 ;
	sh:value 0 .""",
                        """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:09946da0-9ed5-426d-b383-7e53f504cb85> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notQLTermCauseTransitive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b8079 ;
	sh:value 0 .""",
                        """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""" ] ] ;
    earl:subject _:module-not-ql ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    rdfs:seeAlso sh:NodeShape,
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter ;
    rdfs:subPropertyOf sand:domainReferencingOut ;
    owl:equivalentProperty sand:domainReferencingOut .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:24eebdc0-c5bb-453b-babf-174d0056f0ab> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/BrokenSubclass> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b14818 ;
	sh:value 0 .""",
                        """<urn:uuid:89ec8dff-a79b-451b-bd43-bab937001310> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheSecond> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b14818 ;
	sh:value 0 .""",
                        """<urn:uuid:e4122673-7054-407b-8495-be9cae301699> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/DisjointTheFirst> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b14818 ;
	sh:value 0 .""",
                        """sand:BrokenSubclass a owl:Class ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy sand:inconsistent ;
    rdfs:subClassOf sand:DisjointTheFirst,
        sand:DisjointTheSecond .""",
                        """sand:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheSecond .""",
                        """sand:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy sand:inconsistent ;
    owl:disjointWith sand:DisjointTheFirst .""" ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#disjointWith &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ],
                [ a olivaw-earl:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#AllDisjointClasses &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:AllDisjointClasses\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10; &#10;"@en ;
                    dcterms:title "OWL RL Constraint violation"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-unreferenced ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:fe22f892-48bf-40aa-ac4d-76f9122f793a> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/rangeReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b29633 ;
	sh:value 0 .""",
                        """sand:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy sand:rangeOuter ;
    rdfs:range shacl:NodeShape .""" ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    rdfs:seeAlso sh:NodeShape,
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter ;
    rdfs:subPropertyOf sand:domainReferencingOut ;
    owl:equivalentProperty sand:domainReferencingOut .""" ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-not-el ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    rdfs:seeAlso """at line 3 of <>:
Bad syntax (Prefix "owl:" not bound) at ^ in:
"...b'fix : <https://www.example.org/olivaw/> .\\n\\n:unknownPrefix a '^b'owl:Ontology .\\n\\n:Unknown a owl:Class ;\\n    rdfs:label "This '...\"""" ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:syntax .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:title "Too close terms"@en ;
                    rdfs:seeAlso """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:title "Too close terms"@en ;
                    rdfs:seeAlso """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-not-ql ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:4b3e8c18-1a8d-4926-9c1c-c7fc26754c66> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/unlabeledTerm> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b2695 ;
	sh:value 0 .""",
                        """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-not-el ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:6b494f06-6bad-433b-8529-32b246ad7be9> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/domainReferencingOut> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b35017 ;
	sh:value 0 .""",
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter .""" ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notELTermCauseAsymmetric> a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notEL> .""" ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:title "Too close terms"@en ;
                    rdfs:seeAlso """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    rdfs:seeAlso sh:NodeShape,
                        """sand:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain shacl:NodeShape ;
    rdfs:isDefinedBy sand:domainOuter ;
    rdfs:subPropertyOf sand:domainReferencingOut ;
    owl:equivalentProperty sand:domainReferencingOut .""" ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-not-ql ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:d2975613-f545-4efe-849f-4356ae282632> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notELTermCauseAsymmetric> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b30979 ;
	sh:value 0 .""",
                        """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""" ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-too-close-terms ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:4d231b46-3cb8-4b9e-8285-91311542972d> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassA> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b21557 ;
	sh:value 0 .""",
                        """<urn:uuid:9ca511c0-0988-45b3-b055-06c11688ee6c> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/ClassB> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b21557 ;
	sh:value 0 .""",
                        """sand:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""",
                        """sand:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy sand:tooCloseTerms .""" ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:b5a0ea2c-5a61-49ba-a10a-8da24d338e80> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/unlabeledTerm> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b13472 ;
	sh:value 0 .""",
                        """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-range-outer ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-domain-outer ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:module-inconsistent ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-not-el ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:title "Terms not labeled"@en ;
                    rdfs:seeAlso """sand:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy sand:unlabeled .""" ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw-earl:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notQLTermCauseTransitive> a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notQL> .""" ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notELTermCauseAsymmetric> a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notEL> .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-unlabeled ;
    earl:test olivaw-earl:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a olivaw-earl:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    rdfs:seeAlso """<https://www.example.org/olivaw/notQLTermCauseTransitive> a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy <https://www.example.org/olivaw/notQL> .""" ],
                [ a earl:Pass ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-broken ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw-earl:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ;
                    rdfs:seeAlso """<#shape> a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:minCount 1 ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """<urn:uuid:eeca5d92-4d40-4ffb-9dc1-880da8c31c7d> rdf:type sh:ValidationResult ;
	sh:focusNode <https://www.example.org/olivaw/notQLTermCauseTransitive> ;
	sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
	sh:resultPath rdfs:comment ;
	sh:resultSeverity sh:Violation ;
	sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
	sh:sourceShape _:b26941 ;
	sh:value 0 .""",
                        """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""" ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/refs/heads/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:NicoRobertIn-actions ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-unknown-prefix ;
    earl:test olivaw-earl:domain-and-range-referencing .

[] a earl:TestSubject ;
    dcterms:hasPart src:domain-outer,
        src:inconsistent,
        src:not-el,
        src:not-ql,
        src:not-rl,
        src:range-outer,
        src:too-close-terms,
        src:unlabeled,
        src:unreferenced ;
    dcterms:identifier "all-modules" ;
    dcterms:title "All the modules from branch refs/heads/main that are syntaxically correct as well as their recursive imports"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/domainout/onto.ttl>,
        src:domain-outer ;
    dcterms:identifier "module-domain-outer-modelet-zedomain-domainout" ;
    dcterms:title "Merged module src/domain-outer.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/domainout/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/dovrov/onto.ttl>,
        src:domain-outer ;
    dcterms:identifier "module-domain-outer-modelet-zedomain-dovrov" ;
    dcterms:title "Merged module src/domain-outer.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/dovrov/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/inconsistence/onto.ttl>,
        src:inconsistent ;
    dcterms:identifier "module-inconsistent-modelet-zedomain-inconsistence" ;
    dcterms:title "Merged module src/inconsistent.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/inconsistence/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatEL/onto.ttl>,
        src:not-el ;
    dcterms:identifier "module-not-el-modelet-zedomain-compatEL" ;
    dcterms:title "Merged module src/not-el.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/compatEL/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatQL/onto.ttl>,
        src:not-ql ;
    dcterms:identifier "module-not-ql-modelet-zedomain-compatQL" ;
    dcterms:title "Merged module src/not-ql.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/compatQL/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart src:not-rl ;
    dcterms:identifier "module-not-rl" ;
    dcterms:title "Standalone module src/not-rl.ttl from branch refs/heads/main"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatRL/onto.ttl>,
        src:not-rl ;
    dcterms:identifier "module-not-rl-modelet-zedomain-compatRL" ;
    dcterms:title "Merged module src/not-rl.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/compatRL/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/rangeout/onto.ttl>,
        src:range-outer ;
    dcterms:identifier "module-range-outer-modelet-zedomain-rangeout" ;
    dcterms:title "Merged module src/range-outer.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/rangeout/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/differenciation/onto.ttl>,
        src:too-close-terms ;
    dcterms:identifier "module-too-close-terms-modelet-zedomain-differenciation" ;
    dcterms:title "Merged module src/too-close-terms.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/differenciation/onto.ttl"@en .

[] a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/label/onto.ttl>,
        src:unlabeled ;
    dcterms:identifier "module-unlabeled-modelet-zedomain-label" ;
    dcterms:title "Merged module src/unlabeled.ttl from branch refs/heads/main with related terms from the fragments domains/zedomain/label/onto.ttl"@en .

_:NicoRobertIn a foaf:Person ;
    schema:mainEntityOfPage <https://github.com/NicoRobertIn> .

_:all-fragments a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatEL/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatQL/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatRL/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/differenciation/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/domainout/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/dovrov/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/inconsistence/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/label/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/rangeout/onto.ttl>,
        src:domain-outer,
        src:inconsistent,
        src:not-el,
        src:not-ql,
        src:not-rl,
        src:range-outer,
        src:too-close-terms,
        src:unlabeled,
        src:unreferenced ;
    dcterms:identifier "all-fragments" ;
    dcterms:title "All the fragments from branch refs/heads/main that are syntaxically correct as well as their recursive imports"@en .

_:module-domain-outer a earl:TestSubject ;
    dcterms:hasPart src:domain-outer ;
    dcterms:identifier "module-domain-outer" ;
    dcterms:title "Standalone module src/domain-outer.ttl from branch refs/heads/main"@en .

_:module-inconsistent a earl:TestSubject ;
    dcterms:hasPart src:inconsistent ;
    dcterms:identifier "module-inconsistent" ;
    dcterms:title "Standalone module src/inconsistent.ttl from branch refs/heads/main"@en .

_:module-not-el a earl:TestSubject ;
    dcterms:hasPart src:not-el ;
    dcterms:identifier "module-not-el" ;
    dcterms:title "Standalone module src/not-el.ttl from branch refs/heads/main"@en .

_:module-not-ql a earl:TestSubject ;
    dcterms:hasPart src:not-ql ;
    dcterms:identifier "module-not-ql" ;
    dcterms:title "Standalone module src/not-ql.ttl from branch refs/heads/main"@en .

_:module-range-outer a earl:TestSubject ;
    dcterms:hasPart src:range-outer ;
    dcterms:identifier "module-range-outer" ;
    dcterms:title "Standalone module src/range-outer.ttl from branch refs/heads/main"@en .

_:module-too-close-terms a earl:TestSubject ;
    dcterms:hasPart src:too-close-terms ;
    dcterms:identifier "module-too-close-terms" ;
    dcterms:title "Standalone module src/too-close-terms.ttl from branch refs/heads/main"@en .

_:module-unlabeled a earl:TestSubject ;
    dcterms:hasPart src:unlabeled ;
    dcterms:identifier "module-unlabeled" ;
    dcterms:title "Standalone module src/unlabeled.ttl from branch refs/heads/main"@en .

_:module-unreferenced a earl:TestSubject ;
    dcterms:hasPart src:unreferenced ;
    dcterms:identifier "module-unreferenced" ;
    dcterms:title "Standalone module src/unreferenced.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-prefix a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/prefix/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-prefix" ;
    dcterms:title "Standalone modelet domains/zedomain/prefix/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-syntax a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/syntax/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-syntax" ;
    dcterms:title "Standalone modelet domains/zedomain/syntax/onto.ttl from branch refs/heads/main"@en .

_:module-broken a earl:TestSubject ;
    dcterms:hasPart src:broken ;
    dcterms:identifier "module-broken" ;
    dcterms:title "Standalone module src/broken.ttl from branch refs/heads/main"@en .

_:module-unknown-prefix a earl:TestSubject ;
    dcterms:hasPart src:unknown-prefix ;
    dcterms:identifier "module-unknown-prefix" ;
    dcterms:title "Standalone module src/unknown-prefix.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-compatEL a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatEL/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-compatEL" ;
    dcterms:title "Standalone modelet domains/zedomain/compatEL/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-compatQL a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatQL/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-compatQL" ;
    dcterms:title "Standalone modelet domains/zedomain/compatQL/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-compatRL a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/compatRL/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-compatRL" ;
    dcterms:title "Standalone modelet domains/zedomain/compatRL/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-differenciation a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/differenciation/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-differenciation" ;
    dcterms:title "Standalone modelet domains/zedomain/differenciation/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-domainout a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/domainout/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-domainout" ;
    dcterms:title "Standalone modelet domains/zedomain/domainout/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-dovrov a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/dovrov/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-dovrov" ;
    dcterms:title "Standalone modelet domains/zedomain/dovrov/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-inconsistence a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/inconsistence/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-inconsistence" ;
    dcterms:title "Standalone modelet domains/zedomain/inconsistence/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-label a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/label/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-label" ;
    dcterms:title "Standalone modelet domains/zedomain/label/onto.ttl from branch refs/heads/main"@en .

_:modelet-zedomain-rangeout a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/refs/heads/main/domains/zedomain/rangeout/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-rangeout" ;
    dcterms:title "Standalone modelet domains/zedomain/rangeout/onto.ttl from branch refs/heads/main"@en .

_:NicoRobertIn-actions a foaf:OnlineAccount ;
    dcterms:date "2024-05-13T09:00:44.319047"^^xsd:dateTime ;
    dcterms:description "Test triggered by @NicoRobertIn by actions trigger"@en ;
    dcterms:title "NicoRobertIn using actions script"@en ;
    earl:mainAssertor _:NicoRobertIn ;
    foaf:member <https://github.com/Wimmics/olivaw/blob/main/olivaw/test/model/suite.py> .

