@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix earl: <http://www.w3.org/ns/earl#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix git-platform: <https://github.com/> .
@prefix olivaw: <https://ns.inria.fr/olivaw#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<https://github.com/acimov-tools/model-test/blob/10242dabd58e46acb26d48884e348039fa435d91/.acimov/output/model-test-actions.md> a prov:Entity ;
    prov:generatedAtTime "2024-12-04T00:55:49.996793"^^xsd:dateTime ;
    prov:qualifiedGeneration [ a prov:Generation ;
            prov:activity _:assertor ;
            olivaw:generatedAs olivaw:markdown_report ] .

<https://github.com/acimov-tools/model-test/blob/10242dabd58e46acb26d48884e348039fa435d91/.acimov/output/model-test-actions.ttl> a prov:Entity ;
    prov:generatedAtTime "2024-12-04T00:55:49.996793"^^xsd:dateTime ;
    prov:qualifiedGeneration [ a prov:Generation ;
            prov:activity _:assertor ;
            olivaw:generatedAs olivaw:turtle_report ] .

<https://github.com/Wimmics/olivaw/blob/v0.0.6/olivaw/test/model/suite.py> a olivaw:VersionedEntity ;
    dcterms:hasVersion "v0.0.6" ;
    olivaw:hostedAt <https://github.com/Wimmics/olivaw/blob/main/olivaw/test/model/suite.py> .

<https://github.com/acimov-tools/model-test/tree/10242dabd58e46acb26d48884e348039fa435d91> a olivaw:VersionedEntity ;
    dcterms:date "2024-12-04T01:55:10"^^xsd:dateTime ;
    dcterms:hasVersion "10242dabd58e46acb26d48884e348039fa435d91" ;
    olivaw:hostedAt <https://github.com/acimov-tools/model-test> ;
    olivaw:isOnBranch "main" ;
    olivaw:patchedBy _:tester .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subproperty of a class"@en ;
                    dcterms:identifier "subpropertyof-class" ;
                    dcterms:title "No subproperty of class"@en ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology class is a subproperty"@en ;
                    dcterms:identifier "class-subpropertyof" ;
                    dcterms:title "No class subproperty"@en ] ] ;
    earl:subject _:module-src-domain-outer-modelet-zedomain-dovrov ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#AllDisjointClasses &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:AllDisjointClasses\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10; &#10;"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL Constraint violation"@en ],
                [ a olivaw:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#disjointWith &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10; &#10;"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL Constraint violation"@en ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy :notEL .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:f7c32e49-0b53-4e77-b289-96d45e542c66 a sh:ValidationResult ;
    sh:focusNode sand:notELTermCauseAsymmetric ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subproperty of a class"@en ;
                    dcterms:identifier "subpropertyof-class" ;
                    dcterms:title "No subproperty of class"@en ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-unlabeled-modelet-zedomain-label ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Subject terms not linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Term not referenced to a module"@en ;
                    earl:info """:NotReferencedClass a owl:Class ;
    rdfs:label "This class is not linked to a module by a rdfs:isDefinedBy p..." .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a olivaw:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    earl:info """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""" ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-unlabeled-modelet-zedomain-label ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subproperty of a class"@en ;
                    dcterms:identifier "subpropertyof-class" ;
                    dcterms:title "No subproperty of class"@en ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-not-el-modelet-zedomain-compatEL ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-range-outer-modelet-zedomain-rangeout ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:BrokenSubclass a :DisjointTheFirst,
        :DisjointTheSecond ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy :inconsistent .""",
                        """:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy :inconsistent ;
    owl:disjointWith :DisjointTheSecond .""",
                        """:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy :inconsistent ;
    owl:disjointWith :DisjointTheFirst .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:7bc4b30e-26a4-44ed-a71f-955d1bbc49c0 a sh:ValidationResult ;
    sh:focusNode sand:DisjointTheSecond ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:bfc05ca0-f88e-47df-92cf-0b814661e997 a sh:ValidationResult ;
    sh:focusNode sand:DisjointTheFirst ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:e2991024-2414-4f5e-8003-6bc4ff07651d a sh:ValidationResult ;
    sh:focusNode sand:BrokenSubclass ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-domain-outer-modelet-zedomain-dovrov ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:module-src-inconsistent-modelet-zedomain-inconsistence ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subclass of a property"@en ;
                    dcterms:identifier "subclassof-property" ;
                    dcterms:title "No subclass of property"@en ] ] ;
    earl:subject _:module-src-not-ql-modelet-zedomain-compatQL ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology property is a subclass"@en ;
                    dcterms:identifier "property-subclassof" ;
                    dcterms:title "No property subclass"@en ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-not-rl-modelet-zedomain-compatRL ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology property is a subclass"@en ;
                    dcterms:identifier "property-subclassof" ;
                    dcterms:title "No property subclass"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology class is a subproperty"@en ;
                    dcterms:identifier "class-subpropertyof" ;
                    dcterms:title "No class subproperty"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy :unlabeled .""",
                        """violation:72c744b4-4e15-4ac3-9b4c-0283953a35b5 a sh:ValidationResult ;
    sh:focusNode sand:unlabeledTerm ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-unlabeled-modelet-zedomain-label ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology class is a subproperty"@en ;
                    dcterms:identifier "class-subpropertyof" ;
                    dcterms:title "No class subproperty"@en ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subclass of a property"@en ;
                    dcterms:identifier "subclassof-property" ;
                    dcterms:title "No subclass of property"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Custom test  could not be run because the subject could not be loaded in the engine"@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-src-unknown-prefix ;
    earl:test olivaw:comment-format .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology class is a subproperty"@en ;
                    dcterms:identifier "class-subpropertyof" ;
                    dcterms:title "No class subproperty"@en ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#disjointWith &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10; &#10;"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL Constraint violation"@en ],
                [ a olivaw:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#AllDisjointClasses &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:AllDisjointClasses\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10; &#10;"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL Constraint violation"@en ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-range-outer-modelet-zedomain-rangeout ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-not-rl-modelet-zedomain-compatRL ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:module-src-domain-outer-modelet-zedomain-dovrov ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology property is a subclass"@en ;
                    dcterms:identifier "property-subclassof" ;
                    dcterms:title "No property subclass"@en ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology class is a subproperty"@en ;
                    dcterms:identifier "class-subpropertyof" ;
                    dcterms:title "No class subproperty"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subproperty of a class"@en ;
                    dcterms:identifier "subpropertyof-class" ;
                    dcterms:title "No subproperty of class"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology property is a subclass"@en ;
                    dcterms:identifier "property-subclassof" ;
                    dcterms:title "No property subclass"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology class is a subproperty"@en ;
                    dcterms:identifier "class-subpropertyof" ;
                    dcterms:title "No class subproperty"@en ] ] ;
    earl:subject _:module-src-not-el-modelet-zedomain-compatEL ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-inconsistent-modelet-zedomain-inconsistence ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-range-outer-modelet-zedomain-rangeout ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:43ab12ab-fabc-46bb-824c-c539727f3503 a sh:ValidationResult ;
    sh:focusNode sand:domainReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology class is a subproperty"@en ;
                    dcterms:identifier "class-subpropertyof" ;
                    dcterms:title "No class subproperty"@en ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Too close terms"@en ;
                    earl:info """:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""" ] ] ;
    earl:subject _:module-src-too-close-terms-modelet-zedomain-differenciation ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-not-rl-modelet-zedomain-compatRL ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subclass of a property"@en ;
                    dcterms:identifier "subclassof-property" ;
                    dcterms:title "No subclass of property"@en ] ] ;
    earl:subject _:module-src-domain-outer-modelet-zedomain-domainout ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology property is a subclass"@en ;
                    dcterms:identifier "property-subclassof" ;
                    dcterms:title "No property subclass"@en ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy :notEL .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:c8ad6bfd-e671-4ae7-8857-eec5deac3a08 a sh:ValidationResult ;
    sh:focusNode sand:notELTermCauseAsymmetric ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-not-ql-modelet-zedomain-compatQL ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Too close terms"@en ;
                    earl:info """:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subproperty of a class"@en ;
                    dcterms:identifier "subpropertyof-class" ;
                    dcterms:title "No subproperty of class"@en ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subclass of a property"@en ;
                    dcterms:identifier "subclassof-property" ;
                    dcterms:title "No subclass of property"@en ] ] ;
    earl:subject _:module-src-not-el-modelet-zedomain-compatEL ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter ;
    rdfs:subPropertyOf :domainReferencingOut ;
    owl:equivalentProperty :domainReferencingOut .""" ;
                    earl:pointer sh:NodeShape ] ] ;
    earl:subject _:module-src-domain-outer-modelet-zedomain-dovrov ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Custom test  could not be run because the subject could not be loaded in the engine"@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw:comment-format .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    earl:info """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""" ],
                [ a earl:Pass ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:module-src-domain-outer-modelet-zedomain-domainout ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subclass of a property"@en ;
                    dcterms:identifier "subclassof-property" ;
                    dcterms:title "No subclass of property"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology class is a subproperty"@en ;
                    dcterms:identifier "class-subpropertyof" ;
                    dcterms:title "No class subproperty"@en ] ] ;
    earl:subject _:module-src-unlabeled-modelet-zedomain-label ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subproperty of a class"@en ;
                    dcterms:identifier "subpropertyof-class" ;
                    dcterms:title "No subproperty of class"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology class is a subproperty"@en ;
                    dcterms:identifier "class-subpropertyof" ;
                    dcterms:title "No class subproperty"@en ] ] ;
    earl:subject _:module-src-domain-outer-modelet-zedomain-domainout ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:identifier "syntax-error" ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    earl:info "Encountered \"a\" at line 7, column 23." ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw:syntax .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology class is a subproperty"@en ;
                    dcterms:identifier "class-subpropertyof" ;
                    dcterms:title "No class subproperty"@en ] ] ;
    earl:subject _:module-src-not-rl-modelet-zedomain-compatRL ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:09e91410-27b5-4475-8352-063646d12d44 a sh:ValidationResult ;
    sh:focusNode sand:domainReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subproperty of a class"@en ;
                    dcterms:identifier "subpropertyof-class" ;
                    dcterms:title "No subproperty of class"@en ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology class is a subproperty"@en ;
                    dcterms:identifier "class-subpropertyof" ;
                    dcterms:title "No class subproperty"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subproperty of a class"@en ;
                    dcterms:identifier "subpropertyof-class" ;
                    dcterms:title "No subproperty of class"@en ] ] ;
    earl:subject _:module-src-not-rl-modelet-zedomain-compatRL ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-inconsistent-modelet-zedomain-inconsistence ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-not-el-modelet-zedomain-compatEL ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subproperty of a class"@en ;
                    dcterms:identifier "subpropertyof-class" ;
                    dcterms:title "No subproperty of class"@en ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology class is a subproperty"@en ;
                    dcterms:identifier "class-subpropertyof" ;
                    dcterms:title "No class subproperty"@en ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Subject terms not linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Term not referenced to a module"@en ;
                    earl:info """:NotReferencedClass a owl:Class ;
    rdfs:label "This class is not linked to a module by a rdfs:isDefinedBy p..." .""" ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-not-ql-modelet-zedomain-compatQL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-not-rl-modelet-zedomain-compatRL ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subclass of a property"@en ;
                    dcterms:identifier "subclassof-property" ;
                    dcterms:title "No subclass of property"@en ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-domain-outer-modelet-zedomain-domainout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:all-fragments ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology class is a subproperty"@en ;
                    dcterms:identifier "class-subpropertyof" ;
                    dcterms:title "No class subproperty"@en ] ] ;
    earl:subject _:module-src-inconsistent-modelet-zedomain-inconsistence ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:BrokenSubclass a owl:Class,
        :DisjointTheFirst,
        :DisjointTheSecond ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy :inconsistent ;
    rdfs:subClassOf :DisjointTheFirst,
        :DisjointTheSecond .""",
                        """:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy :inconsistent ;
    owl:disjointWith :DisjointTheSecond .""",
                        """:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy :inconsistent ;
    owl:disjointWith :DisjointTheFirst .""",
                        """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter .""",
                        """:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy :notEL .""",
                        """:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy :notQL .""",
                        """:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy :notRL .""",
                        """:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy :rangeOuter ;
    rdfs:range sh:NodeShape .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy :unlabeled .""",
                        """violation:0a012cd2-9827-4d72-aa67-ba06df46ef1e a sh:ValidationResult ;
    sh:focusNode sand:DisjointTheSecond ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:0da91d59-617e-45f3-96a8-07ba13b0fc3e a sh:ValidationResult ;
    sh:focusNode sand:BrokenSubclass ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:330d13d6-36d8-4f9c-b600-284eb6773184 a sh:ValidationResult ;
    sh:focusNode sand:DisjointTheFirst ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:4876eff1-c928-4ca5-9974-f9f63d63081f a sh:ValidationResult ;
    sh:focusNode sand:ClassA ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:9f857361-c67f-4e59-9625-03a567ecd1b6 a sh:ValidationResult ;
    sh:focusNode sand:domainReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:a90be411-c21b-4ac1-9f90-50e1ee551ab6 a sh:ValidationResult ;
    sh:focusNode sand:notELTermCauseAsymmetric ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:af29ffca-bfa4-442e-a427-36c355fa66f5 a sh:ValidationResult ;
    sh:focusNode sand:notRLTermCauseReflexive ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:ba634236-d0a1-4962-b13a-7e2512eff87e a sh:ValidationResult ;
    sh:focusNode sand:ClassB ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:dc0c4c76-a8c1-4da9-9d6d-70fb73568a77 a sh:ValidationResult ;
    sh:focusNode sand:notQLTermCauseTransitive ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:e89d805e-8d1d-49e2-bc49-44078e36c06a a sh:ValidationResult ;
    sh:focusNode sand:unlabeledTerm ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:f0131b19-a19b-4d46-a31b-9a3373884fb2 a sh:ValidationResult ;
    sh:focusNode sand:rangeReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology property is a subclass"@en ;
                    dcterms:identifier "property-subclassof" ;
                    dcterms:title "No property subclass"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subproperty of a class"@en ;
                    dcterms:identifier "subpropertyof-class" ;
                    dcterms:title "No subproperty of class"@en ] ] ;
    earl:subject _:module-src-range-outer-modelet-zedomain-rangeout ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology property is a subclass"@en ;
                    dcterms:identifier "property-subclassof" ;
                    dcterms:title "No property subclass"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy :notRL .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:4e7757c5-5a50-4df1-970a-4f0ae2da3af0 a sh:ValidationResult ;
    sh:focusNode sand:notRLTermCauseReflexive ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-not-rl-modelet-zedomain-compatRL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subclass of a property"@en ;
                    dcterms:identifier "subclassof-property" ;
                    dcterms:title "No subclass of property"@en ] ] ;
    earl:subject _:module-src-inconsistent-modelet-zedomain-inconsistence ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-domain-outer-modelet-zedomain-dovrov ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:BrokenSubclass a owl:Class ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy :inconsistent ;
    rdfs:subClassOf :DisjointTheFirst,
        :DisjointTheSecond .""",
                        """:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy :inconsistent ;
    owl:disjointWith :DisjointTheSecond .""",
                        """:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy :inconsistent ;
    owl:disjointWith :DisjointTheFirst .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:08603c48-cecc-41d9-aedc-af089b94b815 a sh:ValidationResult ;
    sh:focusNode sand:DisjointTheSecond ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:21f345b3-b4a5-4bab-9d92-0bfea770ab60 a sh:ValidationResult ;
    sh:focusNode sand:DisjointTheFirst ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:24547b9d-e7a2-41df-9931-386be560ab66 a sh:ValidationResult ;
    sh:focusNode sand:BrokenSubclass ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-inconsistent-modelet-zedomain-inconsistence ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "Terms not labeled"@en ;
                    earl:info """:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy :unlabeled .""" ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subclass of a property"@en ;
                    dcterms:identifier "subclassof-property" ;
                    dcterms:title "No subclass of property"@en ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter ;
    rdfs:subPropertyOf :domainReferencingOut ;
    owl:equivalentProperty :domainReferencingOut .""" ;
                    earl:pointer sh:NodeShape ] ] ;
    earl:subject _:module-src-domain-outer-modelet-zedomain-domainout ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subproperty of a class"@en ;
                    dcterms:identifier "subpropertyof-class" ;
                    dcterms:title "No subproperty of class"@en ] ] ;
    earl:subject _:module-src-not-el-modelet-zedomain-compatEL ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology class is a subproperty"@en ;
                    dcterms:identifier "class-subpropertyof" ;
                    dcterms:title "No class subproperty"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subclass of a property"@en ;
                    dcterms:identifier "subclassof-property" ;
                    dcterms:title "No subclass of property"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-domain-outer-modelet-zedomain-domainout ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-not-ql-modelet-zedomain-compatQL ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-not-el-modelet-zedomain-compatEL ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "Terms not labeled"@en ;
                    earl:info """:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy :unlabeled .""" ] ] ;
    earl:subject _:module-src-unlabeled-modelet-zedomain-label ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology property is a subclass"@en ;
                    dcterms:identifier "property-subclassof" ;
                    dcterms:title "No property subclass"@en ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology property is a subclass"@en ;
                    dcterms:identifier "property-subclassof" ;
                    dcterms:title "No property subclass"@en ] ] ;
    earl:subject _:module-src-too-close-terms-modelet-zedomain-differenciation ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter ;
    rdfs:subPropertyOf :domainReferencingOut ;
    owl:equivalentProperty :domainReferencingOut .""" ;
                    earl:pointer sh:NodeShape ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subclass of a property"@en ;
                    dcterms:identifier "subclassof-property" ;
                    dcterms:title "No subclass of property"@en ] ] ;
    earl:subject _:module-src-not-rl-modelet-zedomain-compatRL ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-too-close-terms-modelet-zedomain-differenciation ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#disjointWith &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10; &#10;"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL Constraint violation"@en ],
                [ a olivaw:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#AllDisjointClasses &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:AllDisjointClasses\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10; &#10;"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL Constraint violation"@en ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology class is a subproperty"@en ;
                    dcterms:identifier "class-subpropertyof" ;
                    dcterms:title "No class subproperty"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology property is a subclass"@en ;
                    dcterms:identifier "property-subclassof" ;
                    dcterms:title "No property subclass"@en ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-inconsistent-modelet-zedomain-inconsistence ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-not-rl-modelet-zedomain-compatRL ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter ;
    rdfs:subPropertyOf :domainReferencingOut ;
    owl:equivalentProperty :domainReferencingOut .""" ;
                    earl:pointer sh:NodeShape ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology class is a subproperty"@en ;
                    dcterms:identifier "class-subpropertyof" ;
                    dcterms:title "No class subproperty"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology property is a subclass"@en ;
                    dcterms:identifier "property-subclassof" ;
                    dcterms:title "No property subclass"@en ] ] ;
    earl:subject _:module-src-range-outer-modelet-zedomain-rangeout ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Too close terms"@en ;
                    earl:info """:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""" ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subproperty of a class"@en ;
                    dcterms:identifier "subpropertyof-class" ;
                    dcterms:title "No subproperty of class"@en ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subclass of a property"@en ;
                    dcterms:identifier "subclassof-property" ;
                    dcterms:title "No subclass of property"@en ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subproperty of a class"@en ;
                    dcterms:identifier "subpropertyof-class" ;
                    dcterms:title "No subproperty of class"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:BrokenSubclass a owl:Class,
        :DisjointTheFirst,
        :DisjointTheSecond ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy :inconsistent ;
    rdfs:subClassOf :DisjointTheFirst,
        :DisjointTheSecond .""",
                        """:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy :inconsistent ;
    owl:disjointWith :DisjointTheSecond .""",
                        """:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy :inconsistent ;
    owl:disjointWith :DisjointTheFirst .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:0987496c-da25-4640-afcf-ebdbf69b9e7b a sh:ValidationResult ;
    sh:focusNode sand:BrokenSubclass ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:3b256bd3-d691-4dec-a62b-8fb7e4426c4d a sh:ValidationResult ;
    sh:focusNode sand:DisjointTheFirst ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:e825faae-e0b3-4d96-bbf5-c18c7aba8fb0 a sh:ValidationResult ;
    sh:focusNode sand:DisjointTheSecond ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-inconsistent-modelet-zedomain-inconsistence ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:identifier "syntax-error" ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    earl:info "Encountered \"a\" at line 9, column 23." ] ] ;
    earl:subject _:module-src-broken ;
    earl:test olivaw:syntax .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy :notQL .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:2a140d7d-fcfa-450a-8956-3c22d6934816 a sh:ValidationResult ;
    sh:focusNode sand:notQLTermCauseTransitive ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-domain-outer-modelet-zedomain-domainout ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter ;
    rdfs:subPropertyOf :domainReferencingOut ;
    owl:equivalentProperty :domainReferencingOut .""" ;
                    earl:pointer sh:NodeShape ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-not-ql-modelet-zedomain-compatQL ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy :rangeOuter ;
    rdfs:range sh:NodeShape .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:96f9a93a-a873-456c-b15a-e23b96333703 a sh:ValidationResult ;
    sh:focusNode sand:rangeReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-range-outer-modelet-zedomain-rangeout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subclass of a property"@en ;
                    dcterms:identifier "subclassof-property" ;
                    dcterms:title "No subclass of property"@en ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology property is a subclass"@en ;
                    dcterms:identifier "property-subclassof" ;
                    dcterms:title "No property subclass"@en ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a olivaw:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    earl:info """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""" ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:module-src-not-el-modelet-zedomain-compatEL ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:91bfef4e-336c-4ef5-8b0b-c26fef32d8b7 a sh:ValidationResult ;
    sh:focusNode sand:domainReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-domain-outer-modelet-zedomain-domainout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy :rangeOuter ;
    rdfs:range sh:NodeShape .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:4fcd2119-6b86-4e21-90e8-d1b91d40ebe1 a sh:ValidationResult ;
    sh:focusNode sand:rangeReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy :notQL .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:c8bc1a40-5b2e-48ea-af90-bd3541b5828a a sh:ValidationResult ;
    sh:focusNode sand:notQLTermCauseTransitive ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-not-ql-modelet-zedomain-compatQL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology class is a subproperty"@en ;
                    dcterms:identifier "class-subpropertyof" ;
                    dcterms:title "No class subproperty"@en ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subproperty of a class"@en ;
                    dcterms:identifier "subpropertyof-class" ;
                    dcterms:title "No subproperty of class"@en ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Custom test  could not be run because the subject could not be loaded in the engine"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-src-unknown-prefix ;
    earl:test olivaw:subclass-cycle .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-not-ql-modelet-zedomain-compatQL ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology class is a subproperty"@en ;
                    dcterms:identifier "class-subpropertyof" ;
                    dcterms:title "No class subproperty"@en ] ] ;
    earl:subject _:module-src-not-ql-modelet-zedomain-compatQL ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subproperty of a class"@en ;
                    dcterms:identifier "subpropertyof-class" ;
                    dcterms:title "No subproperty of class"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subproperty of a class"@en ;
                    dcterms:identifier "subpropertyof-class" ;
                    dcterms:title "No subproperty of class"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    earl:info """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""" ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:0e91af08-637a-47f8-91a6-3e38faf7aa6c a sh:ValidationResult ;
    sh:focusNode sand:ClassB ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:6dde78f6-4710-488e-93d4-8ea64c39a334 a sh:ValidationResult ;
    sh:focusNode sand:ClassA ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-too-close-terms-modelet-zedomain-differenciation ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subproperty of a class"@en ;
                    dcterms:identifier "subpropertyof-class" ;
                    dcterms:title "No subproperty of class"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:module-src-unlabeled-modelet-zedomain-label ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology property is a subclass"@en ;
                    dcterms:identifier "property-subclassof" ;
                    dcterms:title "No property subclass"@en ] ] ;
    earl:subject _:module-src-domain-outer-modelet-zedomain-domainout ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subclass of a property"@en ;
                    dcterms:identifier "subclassof-property" ;
                    dcterms:title "No subclass of property"@en ] ] ;
    earl:subject _:module-src-range-outer-modelet-zedomain-rangeout ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology property is a subclass"@en ;
                    dcterms:identifier "property-subclassof" ;
                    dcterms:title "No property subclass"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subclass of a property"@en ;
                    dcterms:identifier "subclassof-property" ;
                    dcterms:title "No subclass of property"@en ] ] ;
    earl:subject _:module-src-domain-outer-modelet-zedomain-dovrov ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Custom test  could not be run because the subject could not be loaded in the engine"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw:subclass-cycle .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology property is a subclass"@en ;
                    dcterms:identifier "property-subclassof" ;
                    dcterms:title "No property subclass"@en ] ] ;
    earl:subject _:module-src-not-el-modelet-zedomain-compatEL ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a olivaw:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    earl:info """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""" ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology class is a subproperty"@en ;
                    dcterms:identifier "class-subpropertyof" ;
                    dcterms:title "No class subproperty"@en ] ] ;
    earl:subject _:module-src-range-outer-modelet-zedomain-rangeout ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subclass of a property"@en ;
                    dcterms:identifier "subclassof-property" ;
                    dcterms:title "No subclass of property"@en ] ] ;
    earl:subject _:module-src-inconsistent ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Custom test  could not be run because the subject could not be loaded in the engine"@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw:comment-format .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-too-close-terms-modelet-zedomain-differenciation ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:module-src-range-outer-modelet-zedomain-rangeout ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:identifier "syntax-error" ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    earl:info """at line 3 of <>:
Bad syntax (Prefix "owl:" not bound) at ^ in:
"...b'fix : <https://www.example.org/olivaw/> .\\n\\n:unknownPrefix a '^b'owl:Ontology .\\n\\n:Unknown a owl:Class ;\\n    rdfs:label "This '...\"""" ] ] ;
    earl:subject _:modelet-zedomain-prefix ;
    earl:test olivaw:syntax .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subproperty of a class"@en ;
                    dcterms:identifier "subpropertyof-class" ;
                    dcterms:title "No subproperty of class"@en ] ] ;
    earl:subject _:module-src-unlabeled-modelet-zedomain-label ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-domain-outer-modelet-zedomain-domainout ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Too close terms"@en ;
                    earl:info """:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subproperty of a class"@en ;
                    dcterms:identifier "subpropertyof-class" ;
                    dcterms:title "No subproperty of class"@en ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subclass of a property"@en ;
                    dcterms:identifier "subclassof-property" ;
                    dcterms:title "No subclass of property"@en ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Some terms are too similar"@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Too close terms"@en ;
                    earl:info """:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""" ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:module-src-not-rl-modelet-zedomain-compatRL ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter ;
    rdfs:subPropertyOf :domainReferencingOut ;
    owl:equivalentProperty :domainReferencingOut .""" ;
                    earl:pointer sh:NodeShape ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subclass of a property"@en ;
                    dcterms:identifier "subclassof-property" ;
                    dcterms:title "No subclass of property"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subclass of a property"@en ;
                    dcterms:identifier "subclassof-property" ;
                    dcterms:title "No subclass of property"@en ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology class is a subproperty"@en ;
                    dcterms:identifier "class-subpropertyof" ;
                    dcterms:title "No class subproperty"@en ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology property is a subclass"@en ;
                    dcterms:identifier "property-subclassof" ;
                    dcterms:title "No property subclass"@en ] ] ;
    earl:subject _:module-src-not-rl-modelet-zedomain-compatRL ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy :notQL .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:90475e44-7308-4c94-ba8f-69d52f3e739a a sh:ValidationResult ;
    sh:focusNode sand:notQLTermCauseTransitive ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "Terms not labeled"@en ;
                    earl:info """:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy :unlabeled .""" ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology property is a subclass"@en ;
                    dcterms:identifier "property-subclassof" ;
                    dcterms:title "No property subclass"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology class is a subproperty"@en ;
                    dcterms:identifier "class-subpropertyof" ;
                    dcterms:title "No class subproperty"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-not-ql-modelet-zedomain-compatQL ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:084ce0a9-903e-415e-94df-bd0c5486daa9 a sh:ValidationResult ;
    sh:focusNode sand:ClassB ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:bd6a24d6-9ab0-47b2-99d8-06bca82e1ad6 a sh:ValidationResult ;
    sh:focusNode sand:ClassA ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:2650b85d-4b48-47ab-8af3-65d2dfad8e5e a sh:ValidationResult ;
    sh:focusNode sand:domainReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subclass of a property"@en ;
                    dcterms:identifier "subclassof-property" ;
                    dcterms:title "No subclass of property"@en ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology property is a subclass"@en ;
                    dcterms:identifier "property-subclassof" ;
                    dcterms:title "No property subclass"@en ] ] ;
    earl:subject _:module-src-domain-outer-modelet-zedomain-dovrov ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology class is a subproperty"@en ;
                    dcterms:identifier "class-subpropertyof" ;
                    dcterms:title "No class subproperty"@en ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-too-close-terms-modelet-zedomain-differenciation ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subclass of a property"@en ;
                    dcterms:identifier "subclassof-property" ;
                    dcterms:title "No subclass of property"@en ] ] ;
    earl:subject _:module-src-unlabeled-modelet-zedomain-label ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-not-rl-modelet-zedomain-compatRL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Custom test  could not be run because the subject could not be loaded in the engine"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:modelet-zedomain-syntax ;
    earl:test olivaw:subclass-cycle .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology property is a subclass"@en ;
                    dcterms:identifier "property-subclassof" ;
                    dcterms:title "No property subclass"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy :rangeOuter ;
    rdfs:range sh:NodeShape .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:8a98b8ac-300c-4eb3-bec3-a2b9a2a534a5 a sh:ValidationResult ;
    sh:focusNode sand:rangeReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy :notEL .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:2954f4e0-5d20-4872-ba87-80b9fc2c34d9 a sh:ValidationResult ;
    sh:focusNode sand:notELTermCauseAsymmetric ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-not-el-modelet-zedomain-compatEL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subclass of a property"@en ;
                    dcterms:identifier "subclassof-property" ;
                    dcterms:title "No subclass of property"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-unlabeled-modelet-zedomain-label ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subproperty of a class"@en ;
                    dcterms:identifier "subpropertyof-class" ;
                    dcterms:title "No subproperty of class"@en ] ] ;
    earl:subject _:module-src-too-close-terms-modelet-zedomain-differenciation ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology class is a subproperty"@en ;
                    dcterms:identifier "class-subpropertyof" ;
                    dcterms:title "No class subproperty"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-too-close-terms-modelet-zedomain-differenciation ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subclass of a property"@en ;
                    dcterms:identifier "subclassof-property" ;
                    dcterms:title "No subclass of property"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subproperty of a class"@en ;
                    dcterms:identifier "subpropertyof-class" ;
                    dcterms:title "No subproperty of class"@en ] ] ;
    earl:subject _:module-src-domain-outer-modelet-zedomain-domainout ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Some properties have a domain out of the ontology"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domain out of vocabulary"@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter ;
    rdfs:subPropertyOf :domainReferencingOut ;
    owl:equivalentProperty :domainReferencingOut .""" ;
                    earl:pointer sh:NodeShape ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology class is a subproperty"@en ;
                    dcterms:identifier "class-subpropertyof" ;
                    dcterms:title "No class subproperty"@en ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-inconsistent-modelet-zedomain-inconsistence ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:all-modules ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology property is a subclass"@en ;
                    dcterms:identifier "property-subclassof" ;
                    dcterms:title "No property subclass"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-range-outer-modelet-zedomain-rangeout ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-domain-outer-modelet-zedomain-dovrov ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a olivaw:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    earl:info """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""" ] ] ;
    earl:subject _:module-src-not-ql-modelet-zedomain-compatQL ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-not-el-modelet-zedomain-compatEL ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-domain-outer-modelet-zedomain-dovrov ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology property is a subclass"@en ;
                    dcterms:identifier "property-subclassof" ;
                    dcterms:title "No property subclass"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "Terms not labeled"@en ;
                    earl:info """:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy :unlabeled .""" ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-not-el-modelet-zedomain-compatEL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology class is a subproperty"@en ;
                    dcterms:identifier "class-subpropertyof" ;
                    dcterms:title "No class subproperty"@en ] ] ;
    earl:subject _:module-src-too-close-terms-modelet-zedomain-differenciation ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:module-src-too-close-terms-modelet-zedomain-differenciation ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology property is a subclass"@en ;
                    dcterms:identifier "property-subclassof" ;
                    dcterms:title "No property subclass"@en ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subproperty of a class"@en ;
                    dcterms:identifier "subpropertyof-class" ;
                    dcterms:title "No subproperty of class"@en ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology property is a subclass"@en ;
                    dcterms:identifier "property-subclassof" ;
                    dcterms:title "No property subclass"@en ] ] ;
    earl:subject _:module-src-not-ql-modelet-zedomain-compatQL ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subclass of a property"@en ;
                    dcterms:identifier "subclassof-property" ;
                    dcterms:title "No subclass of property"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "The subject has turtle syntax errors that makes it unprocessable by an engine"@en ;
                    dcterms:identifier "syntax-error" ;
                    dcterms:title "Test subject has syntax errors"@en ;
                    earl:info """at line 3 of <>:
Bad syntax (Prefix "owl:" not bound) at ^ in:
"...b'fix : <https://www.example.org/olivaw/> .\\n\\n:unknownPrefix a '^b'owl:Ontology .\\n\\n:Unknown a owl:Class ;\\n    rdfs:label "This '...\"""" ] ] ;
    earl:subject _:module-src-unknown-prefix ;
    earl:test olivaw:syntax .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-range-outer-modelet-zedomain-rangeout ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:modelet-zedomain-compatQL ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "The following terms have no rdfs:label to define it in natural language"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "Terms not labeled"@en ;
                    earl:info """:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy :unlabeled .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:95586530-bb7a-44aa-82ac-710d4e3b9010 a sh:ValidationResult ;
    sh:focusNode sand:ClassA ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:d82f58a1-3655-4636-a0de-705c5b782488 a sh:ValidationResult ;
    sh:focusNode sand:ClassB ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subproperty of a class"@en ;
                    dcterms:identifier "subpropertyof-class" ;
                    dcterms:title "No subproperty of class"@en ] ] ;
    earl:subject _:module-src-domain-outer-modelet-zedomain-dovrov ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology property is a subclass"@en ;
                    dcterms:identifier "property-subclassof" ;
                    dcterms:title "No property subclass"@en ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subproperty of a class"@en ;
                    dcterms:identifier "subpropertyof-class" ;
                    dcterms:title "No subproperty of class"@en ] ] ;
    earl:subject _:modelet-zedomain-compatEL ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Subject terms not linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Term not referenced to a module"@en ;
                    earl:info """:NotReferencedClass a owl:Class ;
    rdfs:label "This class is not linked to a module by a rdfs:isDefinedBy p..." .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:modelet-zedomain-inconsistence ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subproperty of a class"@en ;
                    dcterms:identifier "subpropertyof-class" ;
                    dcterms:title "No subproperty of class"@en ] ] ;
    earl:subject _:module-src-not-ql-modelet-zedomain-compatQL ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology class is a subproperty"@en ;
                    dcterms:identifier "class-subpropertyof" ;
                    dcterms:title "No class subproperty"@en ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subclass of a property"@en ;
                    dcterms:identifier "subclassof-property" ;
                    dcterms:title "No subclass of property"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-too-close-terms-modelet-zedomain-differenciation ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subproperty of a class"@en ;
                    dcterms:identifier "subpropertyof-class" ;
                    dcterms:title "No subproperty of class"@en ] ] ;
    earl:subject _:module-src-inconsistent-modelet-zedomain-inconsistence ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:BrokenSubclass a :DisjointTheFirst,
        :DisjointTheSecond ;
    rdfs:label "This class is broken because it is a subclass of disjoint cl..." ;
    rdfs:isDefinedBy :inconsistent .""",
                        """:ClassA a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class A"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:ClassB a owl:ObjectProperty ;
    rdfs:label "This class has a name too close to class B"@en ;
    rdfs:isDefinedBy :tooCloseTerms .""",
                        """:DisjointTheFirst a owl:Class ;
    rdfs:label "This first class is disjoint from the other"@en ;
    rdfs:isDefinedBy :inconsistent ;
    owl:disjointWith :DisjointTheSecond .""",
                        """:DisjointTheSecond a owl:Class ;
    rdfs:label "This second class is disjoint from the forst one"@en ;
    rdfs:isDefinedBy :inconsistent ;
    owl:disjointWith :DisjointTheFirst .""",
                        """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter .""",
                        """:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy :notEL .""",
                        """:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy :notQL .""",
                        """:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy :notRL .""",
                        """:rangeReferencingOut a owl:ObjectProperty ;
    rdfs:label "This term has a range out of vocabulary"@en ;
    rdfs:isDefinedBy :rangeOuter ;
    rdfs:range sh:NodeShape .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy :unlabeled .""",
                        """violation:069ed0b5-fe09-47a8-9c3b-9805695c2200 a sh:ValidationResult ;
    sh:focusNode sand:notRLTermCauseReflexive ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:0c7c0e8c-8a61-40e5-b6f1-6bdc20cd522f a sh:ValidationResult ;
    sh:focusNode sand:DisjointTheFirst ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:160f703e-81bb-4b55-bb11-7a1811a9d6df a sh:ValidationResult ;
    sh:focusNode sand:notELTermCauseAsymmetric ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:2bae81c0-4e26-4e62-86ad-eca1f93c258d a sh:ValidationResult ;
    sh:focusNode sand:unlabeledTerm ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:7de7bdfe-b9bb-44e0-bbb0-23b86c9d85fe a sh:ValidationResult ;
    sh:focusNode sand:rangeReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:9b0ded1d-6eca-440e-89d4-537528815533 a sh:ValidationResult ;
    sh:focusNode sand:BrokenSubclass ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:a3a24435-2ede-4b2a-b44f-7b38a0b60656 a sh:ValidationResult ;
    sh:focusNode sand:DisjointTheSecond ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:cffdcc4a-ae15-4f1f-9c86-e4c5d72ec202 a sh:ValidationResult ;
    sh:focusNode sand:ClassA ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:ed36e4c4-ac21-40a9-baa6-2a0cde78b652 a sh:ValidationResult ;
    sh:focusNode sand:notQLTermCauseTransitive ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:fac0b570-593a-4dc2-b7e9-40f345272b6c a sh:ValidationResult ;
    sh:focusNode sand:domainReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""",
                        """violation:ff7822ec-963b-4df8-9874-5b17885dcb14 a sh:ValidationResult ;
    sh:focusNode sand:ClassB ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    earl:info """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""" ],
                [ a olivaw:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    earl:info """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""" ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ] ] ;
    earl:subject _:all-fragments ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms have have a satisfying Levenshtein distance from each other term."@en ;
                    dcterms:identifier "too-close-terms" ;
                    dcterms:title "Terms differenciated enough"@en ] ] ;
    earl:subject _:module-src-unlabeled-modelet-zedomain-label ;
    earl:test olivaw:terms-differenciation .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology property is a subclass"@en ;
                    dcterms:identifier "property-subclassof" ;
                    dcterms:title "No property subclass"@en ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:module-src-domain-outer-modelet-zedomain-dovrov ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-unlabeled-modelet-zedomain-label ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-differenciation ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-not-el-modelet-zedomain-compatEL ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology class is a subproperty"@en ;
                    dcterms:identifier "class-subpropertyof" ;
                    dcterms:title "No class subproperty"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy :unlabeled .""",
                        """violation:29ac8e19-b62a-4b68-a92f-71fe9b255a99 a sh:ValidationResult ;
    sh:focusNode sand:unlabeledTerm ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subproperty of a class"@en ;
                    dcterms:identifier "subpropertyof-class" ;
                    dcterms:title "No subproperty of class"@en ] ] ;
    earl:subject _:modelet-zedomain-dovrov ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Custom test  could not be run because the subject could not be loaded in the engine"@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-src-broken ;
    earl:test olivaw:comment-format .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:domainReferencingOut a owl:ObjectProperty ;
    rdfs:label "This property has a domain out of vocabulary"@en ;
    rdfs:domain sh:NodeShape ;
    rdfs:isDefinedBy :domainOuter .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:ac9962d0-248c-4cf3-a4ac-01320aa1e9e2 a sh:ValidationResult ;
    sh:focusNode sand:domainReferencingOut ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-domain-outer-modelet-zedomain-dovrov ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "All the terms defined in the subject have a rdfs:label in English"@en ;
                    dcterms:identifier "not-labeled-term" ;
                    dcterms:title "All terms labeled"@en ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test olivaw:labeled-terms .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subproperty of a class"@en ;
                    dcterms:identifier "subpropertyof-class" ;
                    dcterms:title "No subproperty of class"@en ] ] ;
    earl:subject _:modelet-zedomain-domainout ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-too-close-terms ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subclass of a property"@en ;
                    dcterms:identifier "subclassof-property" ;
                    dcterms:title "No subclass of property"@en ] ] ;
    earl:subject _:module-src-too-close-terms-modelet-zedomain-differenciation ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subclass of a property"@en ;
                    dcterms:identifier "subclassof-property" ;
                    dcterms:title "No subclass of property"@en ] ] ;
    earl:subject _:module-src-range-outer ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#AllDisjointClasses &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:AllDisjointClasses\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10; &#10;"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL Constraint violation"@en ],
                [ a olivaw:MajorFail ;
                    dcterms:description "http://www.w3.org/2002/07/owl#disjointWith &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;rdf:type sp:ConstraintViolation &#10;sp:violationRoot &#60;https://www.example.org/olivaw/BrokenSubclass> &#10;rdfs:label \"Violates owl:disjointWith\" &#10;sp:arg1 &#60;https://www.example.org/olivaw/DisjointTheSecond> &#10;sp:arg2 &#60;https://www.example.org/olivaw/DisjointTheFirst> &#10; &#10;"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL Constraint violation"@en ] ] ;
    earl:subject _:module-src-inconsistent-modelet-zedomain-inconsistence ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology class is a subproperty"@en ;
                    dcterms:identifier "class-subpropertyof" ;
                    dcterms:title "No class subproperty"@en ] ] ;
    earl:subject _:module-src-domain-outer ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each term of the test subject is linked to a module by a rdfs:isDefinedBy property"@en ;
                    dcterms:identifier "no-reference-module" ;
                    dcterms:title "Any term is referenced"@en ] ] ;
    earl:subject _:module-src-unlabeled ;
    earl:test olivaw:term-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subclass of a property"@en ;
                    dcterms:identifier "subclassof-property" ;
                    dcterms:title "No subclass of property"@en ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subclass of a property"@en ;
                    dcterms:identifier "subclassof-property" ;
                    dcterms:title "No subclass of property"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology class is a subproperty"@en ;
                    dcterms:identifier "class-subpropertyof" ;
                    dcterms:title "No class subproperty"@en ] ] ;
    earl:subject _:module-src-not-el ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology property is a subclass"@en ;
                    dcterms:identifier "property-subclassof" ;
                    dcterms:title "No property subclass"@en ] ] ;
    earl:subject _:module-src-unlabeled-modelet-zedomain-label ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL EL sublanguage"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL QL sublanguage"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile compatible"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The provided graph is consistent for any OWL RL constraint"@en ;
                    dcterms:identifier "owl-rl-constraint-violation" ;
                    dcterms:title "OWL RL consistent"@en ] ] ;
    earl:subject _:module-src-domain-outer-modelet-zedomain-domainout ;
    earl:test olivaw:owl-rl-constraint .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """:unlabeledTerm a owl:Class ;
    rdfs:isDefinedBy :unlabeled .""",
                        """violation:a5468813-74b0-41b7-9654-89543a0d489d a sh:ValidationResult ;
    sh:focusNode sand:unlabeledTerm ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology property is a subclass"@en ;
                    dcterms:identifier "property-subclassof" ;
                    dcterms:title "No property subclass"@en ] ] ;
    earl:subject _:module-src-inconsistent-modelet-zedomain-inconsistence ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology property is a subclass"@en ;
                    dcterms:identifier "property-subclassof" ;
                    dcterms:title "No property subclass"@en ] ] ;
    earl:subject _:module-src-unreferenced ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subclass of a property"@en ;
                    dcterms:identifier "subclassof-property" ;
                    dcterms:title "No subclass of property"@en ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The subject is included in the OWL RL sublanguage"@en ;
                    dcterms:identifier "owl-rl-profile-error" ;
                    dcterms:title "OWL RL Profile compatible"@en ],
                [ a olivaw:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-ql-profile-error" ;
                    dcterms:title "OWL QL Profile incompatible"@en ;
                    earl:info """sand:notQLTermCauseTransitive a owl:ObjectProperty,
        owl:TransitiveProperty ;
    rdfs:label "This term has a statement that is not QL compatible"@en ;
    rdfs:isDefinedBy sand:notQL .""" ],
                [ a olivaw:MinorFail ;
                    dcterms:description "Statement not supported"@en ;
                    dcterms:identifier "owl-el-profile-error" ;
                    dcterms:title "OWL EL Profile incompatible"@en ;
                    earl:info """sand:notELTermCauseAsymmetric a owl:AsymmetricProperty,
        owl:ObjectProperty ;
    rdfs:label "This term has a statement that is not EL compatible"@en ;
    rdfs:isDefinedBy sand:notEL .""" ] ] ;
    earl:subject _:all-modules ;
    earl:test olivaw:profile-compatibility .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "The custom test  passed"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Test  passed"@en ] ] ;
    earl:subject _:modelet-zedomain-label ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/subclass-cycle.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy :notRL .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:0537407a-05ab-41b5-b5b4-764f7c3d76a4 a sh:ValidationResult ;
    sh:focusNode sand:notRLTermCauseReflexive ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a olivaw:MajorFail ;
                    dcterms:description "Error occured while running custom test "@en ;
                    dcterms:identifier "comment-format" ;
                    dcterms:title "Error on custom test "@en ;
                    earl:info """:notRLTermCauseReflexive a owl:ObjectProperty,
        owl:ReflexiveObjectProperty ;
    rdfs:label "This term has a statement that is not RL compatible"@en ;
    rdfs:isDefinedBy :notRL .""",
                        """:shape a sh:NodeShape ;
    sh:property [ sh:message "Ontology term should have one and only one rdfs:comment" ;
            sh:path rdfs:comment ;
            sh:severity sh:Violation ],
        [ sh:languageIn ( "en" ) ;
            sh:message "Comment not in @en/without line break/ending with full stop" ;
            sh:path rdfs:comment ;
            sh:pattern "^[^\\\\n]+\\\\.$" ;
            sh:severity sh:Warning ] ;
    sh:targetSubjectsOf rdfs:isDefinedBy .""",
                        """violation:d6d41212-bcf9-4e46-9e8f-887b0417f545 a sh:ValidationResult ;
    sh:focusNode sand:notRLTermCauseReflexive ;
    sh:resultMessage "Ontology term should have one and only one rdfs:comment" ;
    sh:resultPath rdfs:comment ;
    sh:resultSeverity sh:Violation ;
    sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
    sh:sourceShape [ ] .""" ] ] ;
    earl:subject _:modelet-zedomain-compatRL ;
    earl:test <https://raw.githubusercontent.com/acimov-tools/model-test/main/.acimov/custom-tests/model/comment-format.shacl#criterion> .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:NotTested ;
                    dcterms:description "Custom test  could not be run because the subject could not be loaded in the engine"@en ;
                    dcterms:identifier "subclass-cycle" ;
                    dcterms:title "Error on custom test "@en ] ] ;
    earl:subject _:module-src-broken ;
    earl:test olivaw:subclass-cycle .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology term is a subproperty of a class"@en ;
                    dcterms:identifier "subpropertyof-class" ;
                    dcterms:title "No subproperty of class"@en ] ] ;
    earl:subject _:module-src-not-rl ;
    earl:test olivaw:bad-extension-property .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:module-src-range-outer-modelet-zedomain-rangeout ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "Each rdfs:domain is defined within the fragment"@en ;
                    dcterms:identifier "domain-out-of-vocabulary" ;
                    dcterms:title "Domains properly defined"@en ] ] ;
    earl:subject _:modelet-zedomain-rangeout ;
    earl:test olivaw:domain-and-range-referencing .

[] a earl:Assertion ;
    earl:assertedBy _:assertor ;
    earl:result [ a earl:TestResult ;
            earl:outcome [ a earl:Pass ;
                    dcterms:description "No ontology property is a subclass"@en ;
                    dcterms:identifier "property-subclassof" ;
                    dcterms:title "No property subclass"@en ] ] ;
    earl:subject _:module-src-not-ql ;
    earl:test olivaw:bad-extension-property .

_:testSuiteUsage a prov:Usage ;
    prov:entity <https://github.com/Wimmics/olivaw/blob/v0.0.6/olivaw/test/model/suite.py> ;
    prov:hadRole olivaw:test_suite .

_:testedProjectUsage a prov:Usage ;
    prov:entity <https://github.com/acimov-tools/model-test/tree/10242dabd58e46acb26d48884e348039fa435d91> ;
    prov:hadRole olivaw:tested_project .

_:testerAssociation a prov:Association ;
    prov:agent _:tester ;
    prov:hadRole olivaw:tester .

_:modelet-zedomain-prefix a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/prefix/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-prefix" ;
    dcterms:title "Standalone modelet domains/zedomain/prefix/onto.ttl from branch main"@en .

_:modelet-zedomain-syntax a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/syntax/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-syntax" ;
    dcterms:title "Standalone modelet domains/zedomain/syntax/onto.ttl from branch main"@en .

_:module-src-broken a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/broken.ttl> ;
    dcterms:identifier "module-src-broken" ;
    dcterms:title "Standalone module src/broken.ttl from branch main"@en .

_:module-src-unknown-prefix a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/unknown-prefix.ttl> ;
    dcterms:identifier "module-src-unknown-prefix" ;
    dcterms:title "Standalone module src/unknown-prefix.ttl from branch main"@en .

_:tester a prov:Agent,
        foaf:Person ;
    foaf:homepage git-platform:NicoRobertIn ;
    foaf:nick "NicoRobertIn" .

_:all-fragments a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/compatEL/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/compatQL/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/compatRL/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/differenciation/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/domainout/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/dovrov/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/inconsistence/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/label/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/rangeout/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/domain-outer.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/inconsistent.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/not-el.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/not-ql.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/not-rl.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/range-outer.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/too-close-terms.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/unlabeled.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/unreferenced.ttl> ;
    dcterms:identifier "all-fragments" ;
    dcterms:title "All the fragments from branch main that are syntaxically correct as well as their recursive imports"@en .

_:all-modules a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/domain-outer.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/inconsistent.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/not-el.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/not-ql.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/not-rl.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/range-outer.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/too-close-terms.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/unlabeled.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/unreferenced.ttl> ;
    dcterms:identifier "all-modules" ;
    dcterms:title "All the modules from branch main that are syntaxically correct as well as their recursive imports"@en .

_:modelet-zedomain-compatEL a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/compatEL/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-compatEL" ;
    dcterms:title "Standalone modelet domains/zedomain/compatEL/onto.ttl from branch main"@en .

_:modelet-zedomain-compatQL a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/compatQL/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-compatQL" ;
    dcterms:title "Standalone modelet domains/zedomain/compatQL/onto.ttl from branch main"@en .

_:modelet-zedomain-compatRL a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/compatRL/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-compatRL" ;
    dcterms:title "Standalone modelet domains/zedomain/compatRL/onto.ttl from branch main"@en .

_:modelet-zedomain-differenciation a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/differenciation/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-differenciation" ;
    dcterms:title "Standalone modelet domains/zedomain/differenciation/onto.ttl from branch main"@en .

_:modelet-zedomain-domainout a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/domainout/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-domainout" ;
    dcterms:title "Standalone modelet domains/zedomain/domainout/onto.ttl from branch main"@en .

_:modelet-zedomain-dovrov a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/dovrov/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-dovrov" ;
    dcterms:title "Standalone modelet domains/zedomain/dovrov/onto.ttl from branch main"@en .

_:modelet-zedomain-inconsistence a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/inconsistence/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-inconsistence" ;
    dcterms:title "Standalone modelet domains/zedomain/inconsistence/onto.ttl from branch main"@en .

_:modelet-zedomain-label a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/label/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-label" ;
    dcterms:title "Standalone modelet domains/zedomain/label/onto.ttl from branch main"@en .

_:modelet-zedomain-rangeout a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/rangeout/onto.ttl> ;
    dcterms:identifier "modelet-zedomain-rangeout" ;
    dcterms:title "Standalone modelet domains/zedomain/rangeout/onto.ttl from branch main"@en .

_:module-src-domain-outer a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/domain-outer.ttl> ;
    dcterms:identifier "module-src-domain-outer" ;
    dcterms:title "Standalone module src/domain-outer.ttl from branch main"@en .

_:module-src-domain-outer-modelet-zedomain-domainout a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/domainout/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/domain-outer.ttl> ;
    dcterms:identifier "module-src-domain-outer-modelet-zedomain-domainout" ;
    dcterms:title "Merged module src/domain-outer.ttl from branch main with related terms from the fragments domains/zedomain/domainout/onto.ttl"@en .

_:module-src-domain-outer-modelet-zedomain-dovrov a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/dovrov/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/domain-outer.ttl> ;
    dcterms:identifier "module-src-domain-outer-modelet-zedomain-dovrov" ;
    dcterms:title "Merged module src/domain-outer.ttl from branch main with related terms from the fragments domains/zedomain/dovrov/onto.ttl"@en .

_:module-src-inconsistent a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/inconsistent.ttl> ;
    dcterms:identifier "module-src-inconsistent" ;
    dcterms:title "Standalone module src/inconsistent.ttl from branch main"@en .

_:module-src-inconsistent-modelet-zedomain-inconsistence a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/inconsistence/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/inconsistent.ttl> ;
    dcterms:identifier "module-src-inconsistent-modelet-zedomain-inconsistence" ;
    dcterms:title "Merged module src/inconsistent.ttl from branch main with related terms from the fragments domains/zedomain/inconsistence/onto.ttl"@en .

_:module-src-not-el a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/not-el.ttl> ;
    dcterms:identifier "module-src-not-el" ;
    dcterms:title "Standalone module src/not-el.ttl from branch main"@en .

_:module-src-not-el-modelet-zedomain-compatEL a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/compatEL/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/not-el.ttl> ;
    dcterms:identifier "module-src-not-el-modelet-zedomain-compatEL" ;
    dcterms:title "Merged module src/not-el.ttl from branch main with related terms from the fragments domains/zedomain/compatEL/onto.ttl"@en .

_:module-src-not-ql a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/not-ql.ttl> ;
    dcterms:identifier "module-src-not-ql" ;
    dcterms:title "Standalone module src/not-ql.ttl from branch main"@en .

_:module-src-not-ql-modelet-zedomain-compatQL a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/compatQL/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/not-ql.ttl> ;
    dcterms:identifier "module-src-not-ql-modelet-zedomain-compatQL" ;
    dcterms:title "Merged module src/not-ql.ttl from branch main with related terms from the fragments domains/zedomain/compatQL/onto.ttl"@en .

_:module-src-not-rl a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/not-rl.ttl> ;
    dcterms:identifier "module-src-not-rl" ;
    dcterms:title "Standalone module src/not-rl.ttl from branch main"@en .

_:module-src-not-rl-modelet-zedomain-compatRL a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/compatRL/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/not-rl.ttl> ;
    dcterms:identifier "module-src-not-rl-modelet-zedomain-compatRL" ;
    dcterms:title "Merged module src/not-rl.ttl from branch main with related terms from the fragments domains/zedomain/compatRL/onto.ttl"@en .

_:module-src-range-outer a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/range-outer.ttl> ;
    dcterms:identifier "module-src-range-outer" ;
    dcterms:title "Standalone module src/range-outer.ttl from branch main"@en .

_:module-src-range-outer-modelet-zedomain-rangeout a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/rangeout/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/range-outer.ttl> ;
    dcterms:identifier "module-src-range-outer-modelet-zedomain-rangeout" ;
    dcterms:title "Merged module src/range-outer.ttl from branch main with related terms from the fragments domains/zedomain/rangeout/onto.ttl"@en .

_:module-src-too-close-terms a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/too-close-terms.ttl> ;
    dcterms:identifier "module-src-too-close-terms" ;
    dcterms:title "Standalone module src/too-close-terms.ttl from branch main"@en .

_:module-src-too-close-terms-modelet-zedomain-differenciation a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/differenciation/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/too-close-terms.ttl> ;
    dcterms:identifier "module-src-too-close-terms-modelet-zedomain-differenciation" ;
    dcterms:title "Merged module src/too-close-terms.ttl from branch main with related terms from the fragments domains/zedomain/differenciation/onto.ttl"@en .

_:module-src-unlabeled a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/unlabeled.ttl> ;
    dcterms:identifier "module-src-unlabeled" ;
    dcterms:title "Standalone module src/unlabeled.ttl from branch main"@en .

_:module-src-unlabeled-modelet-zedomain-label a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/domains/zedomain/label/onto.ttl>,
        <https://github.com/acimov-tools/model-test/blob/main/src/unlabeled.ttl> ;
    dcterms:identifier "module-src-unlabeled-modelet-zedomain-label" ;
    dcterms:title "Merged module src/unlabeled.ttl from branch main with related terms from the fragments domains/zedomain/label/onto.ttl"@en .

_:module-src-unreferenced a earl:TestSubject ;
    dcterms:hasPart <https://github.com/acimov-tools/model-test/blob/main/src/unreferenced.ttl> ;
    dcterms:identifier "module-src-unreferenced" ;
    dcterms:title "Standalone module src/unreferenced.ttl from branch main"@en .

_:assertor a earl:Assertor,
        prov:Activity ;
    dcterms:description "NicoRobertIn launch actions run of model tests against acimov-tools/model-test on branch main" ;
    dcterms:title "Model tests of acimov-tools/model-test on branch main" ;
    prov:endedAtTime "2024-12-04T00:55:49.996793"^^xsd:dateTime ;
    prov:generated <https://github.com/acimov-tools/model-test/blob/10242dabd58e46acb26d48884e348039fa435d91/.acimov/output/model-test-actions.md>,
        <https://github.com/acimov-tools/model-test/blob/10242dabd58e46acb26d48884e348039fa435d91/.acimov/output/model-test-actions.ttl> ;
    prov:qualifiedAssociation _:testerAssociation ;
    prov:qualifiedUsage _:testSuiteUsage,
        _:testedProjectUsage ;
    prov:used <https://github.com/Wimmics/olivaw/blob/v0.0.6/olivaw/test/model/suite.py>,
        <https://github.com/acimov-tools/model-test/tree/10242dabd58e46acb26d48884e348039fa435d91> ;
    prov:wasAssociatedWith _:tester .

